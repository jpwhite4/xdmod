function DateUtilities(config){this.active_year=config&&config.year?config.year:(new Date).getFullYear(),this.getFormalString=function(date_obj){return this.getFormalMonthName(date_obj.getMonth()+1)+" "+date_obj.getDate()+", "+date_obj.getFullYear()},this.getISOFormat=function(date_obj){return date_obj.getFullYear()+"-"+StringUtilities.pad((date_obj.getMonth()+1).toString(),2)+"-"+StringUtilities.pad(date_obj.getDate().toString(),2)},this.getPreviousMonthName=function(){var d=new Date;return d.setDate(1),d.setMonth(d.getMonth()-1),this.getFormalMonthName(d.getMonth()+1)},this.getCurrentQuarter=function(){var n=new Date;return n.setDate(1),n.setMonth(3*Math.floor(n.getMonth()/3)),n},this.getPreviousQuarter=function(){var current=this.getCurrentQuarter();return current.setMonth(current.getMonth()-3),current},this.setYear=function(year){this.active_year=year,this.buildMonthData()},this.getCurrentDate=function(){var g=new Date;return g.getFullYear()+"-"+StringUtilities.pad((g.getMonth()+1).toString(),2)+"-"+StringUtilities.pad(g.getDate().toString(),2)},this.isLeapYear=function(){return 29===new Date(this.active_year,1,29).getDate()},this.isValidMonthIndex=function(month_index){return null!==month_index.toString().match(/^\d{1,2}$/)&&!(month_index<1||12<month_index)},this.getFormalMonthName=function(month_index){return this.isValidMonthIndex(month_index)?this.monthData[month_index-1].formal_name:"invalid month index"},this.getDaysInMonth=function(month_index){return this.isValidMonthIndex(month_index)?this.monthData[month_index-1].days_in_month:"invalid month index"},this.isValidDateFormat=function(date_string){return null!=date_string.match(/^\d{4}-\d{2}-\d{2}$/)},this.parseDate=function(date_string){var response={};return response.year=date_string.split("-")[0],response.month=date_string.split("-")[1],response.day=date_string.split("-")[2],response},this.displayTimeframeDates=function(formal_timeframe){var endpoints=this.getEndpoints(formal_timeframe,!0);return endpoints.start_date+" to "+endpoints.end_date},this.getEndpoints=function(formal_timeframe,present_formally){var end_date=new Date,start_date=new Date;switch(formal_timeframe.toLowerCase()){case"yesterday":start_date.setDate(start_date.getDate()-1),end_date.setTime(start_date.getTime());break;case"month to date":start_date.setDate(1);break;case"quarter to date":start_date=this.getCurrentQuarter();break;case"year to date":start_date.setDate(1),start_date.setMonth(0);break;case"previous month":start_date.setDate(1),start_date.setMonth(start_date.getMonth()-1),end_date.setDate(0);break;case"previous quarter":start_date=this.getPreviousQuarter(),(end_date=this.getCurrentQuarter()).setDate(0);break;case"previous year":start_date.setFullYear(start_date.getFullYear()-1),start_date.setMonth(0),start_date.setDate(1),end_date.setMonth(0),end_date.setDate(0);break;default:null!=formal_timeframe.match(/^\d{4}$/)&&1900<=formal_timeframe?(start_date.setFullYear(parseInt(formal_timeframe,10)),start_date.setMonth(0),start_date.setDate(1),end_date.setFullYear(parseInt(formal_timeframe,10)),end_date.setMonth(11),end_date.setDate(31)):null!=formal_timeframe.match(/^\d{1,} day$/i)?start_date.setDate(start_date.getDate()-parseInt(formal_timeframe.split(" ")[0],10)):null!=formal_timeframe.match(/^\d{1,} year$/i)?start_date.setFullYear(start_date.getFullYear()-parseInt(formal_timeframe.split(" ")[0],10)):alert("Invalid timeframe specified: '"+formal_timeframe+"'")}return{start_date:present_formally?this.getFormalString(start_date):this.getISOFormat(start_date),end_date:present_formally?this.getFormalString(end_date):this.getISOFormat(end_date)}},this.buildMonthData=function(){this.monthData=[],this.monthData.push({index:1,formal_name:"January",days_in_month:31}),this.monthData.push({index:2,formal_name:"February",days_in_month:this.isLeapYear()?29:28}),this.monthData.push({index:3,formal_name:"March",days_in_month:31}),this.monthData.push({index:4,formal_name:"April",days_in_month:30}),this.monthData.push({index:5,formal_name:"May",days_in_month:31}),this.monthData.push({index:6,formal_name:"June",days_in_month:30}),this.monthData.push({index:7,formal_name:"July",days_in_month:31}),this.monthData.push({index:8,formal_name:"August",days_in_month:31}),this.monthData.push({index:9,formal_name:"September",days_in_month:30}),this.monthData.push({index:10,formal_name:"October",days_in_month:31}),this.monthData.push({index:11,formal_name:"November",days_in_month:30}),this.monthData.push({index:12,formal_name:"December",days_in_month:31})},this.buildMonthData()}Ext.ns("Ext.ux.grid"),Ext.ux.grid.RowExpander=Ext.extend(Ext.util.Observable,{expandOnEnter:!0,expandOnDblClick:!0,header:"",width:20,sortable:!1,fixed:!0,hideable:!1,menuDisabled:!0,dataIndex:"",id:"expander",lazyRender:!0,enableCaching:!0,constructor:function(config){Ext.apply(this,config),this.addEvents({beforeexpand:!0,expand:!0,beforecollapse:!0,collapse:!0}),Ext.ux.grid.RowExpander.superclass.constructor.call(this),this.tpl&&("string"==typeof this.tpl&&(this.tpl=new Ext.Template(this.tpl)),this.tpl.compile()),this.state={},this.bodyContent={}},getRowClass:function(record,rowIndex,p,ds){p.cols=p.cols-1;var content=this.bodyContent[record.id];return content||this.lazyRender||(content=this.getBodyContent(record,rowIndex)),content&&(p.body=content),this.state[record.id]?"x-grid3-row-expanded":"x-grid3-row-collapsed"},init:function(grid){var view=(this.grid=grid).getView();view.getRowClass=this.getRowClass.createDelegate(this),view.enableRowBody=!0,grid.on("render",this.onRender,this),grid.on("destroy",this.onDestroy,this)},onRender:function(){var grid=this.grid;grid.getView().mainBody.on("mousedown",this.onMouseDown,this,{delegate:".x-grid3-row-expander"}),this.expandOnEnter&&(this.keyNav=new Ext.KeyNav(this.grid.getGridEl(),{enter:this.onEnter,scope:this})),this.expandOnDblClick&&grid.on("rowdblclick",this.onRowDblClick,this)},onDestroy:function(){this.keyNav&&(this.keyNav.disable(),delete this.keyNav);var mainBody=this.grid.getView().mainBody;mainBody&&mainBody.un("mousedown",this.onMouseDown,this)},onRowDblClick:function(grid,rowIdx,e){this.toggleRow(rowIdx)},onEnter:function(e){for(var g=this.grid,sels=g.getSelectionModel().getSelections(),i=0,len=sels.length;i<len;i++){var rowIdx=g.getStore().indexOf(sels[i]);this.toggleRow(rowIdx)}},getBodyContent:function(record,index){if(!this.enableCaching)return this.tpl.apply(record.data);var content=this.bodyContent[record.id];return content||(content=this.tpl.apply(record.data),this.bodyContent[record.id]=content),content},onMouseDown:function(e,t){e.stopEvent();var row=e.getTarget(".x-grid3-row");this.toggleRow(row)},renderer:function(v,p,record){return p.cellAttr='rowspan="2"','<div class="x-grid3-row-expander">&#160;</div>'},beforeExpand:function(record,body,rowIndex){return!1!==this.fireEvent("beforeexpand",this,record,body,rowIndex)&&(this.tpl&&this.lazyRender&&(body.innerHTML=this.getBodyContent(record,rowIndex)),!0)},toggleRow:function(row){"number"==typeof row&&(row=this.grid.view.getRow(row)),this[Ext.fly(row).hasClass("x-grid3-row-collapsed")?"expandRow":"collapseRow"](row)},expandRow:function(row){"number"==typeof row&&(row=this.grid.view.getRow(row));var record=this.grid.store.getAt(row.rowIndex),body=Ext.DomQuery.selectNode("tr:nth(2) div.x-grid3-row-body",row);this.beforeExpand(record,body,row.rowIndex)&&(this.state[record.id]=!0,Ext.fly(row).replaceClass("x-grid3-row-collapsed","x-grid3-row-expanded"),this.fireEvent("expand",this,record,body,row.rowIndex))},collapseRow:function(row){"number"==typeof row&&(row=this.grid.view.getRow(row));var record=this.grid.store.getAt(row.rowIndex),body=Ext.fly(row).child("tr:nth(1) div.x-grid3-row-body",!0);!1!==this.fireEvent("beforecollapse",this,record,body,row.rowIndex)&&(this.state[record.id]=!1,Ext.fly(row).replaceClass("x-grid3-row-expanded","x-grid3-row-collapsed"),this.fireEvent("collapse",this,record,body,row.rowIndex))}}),Ext.preg("rowexpander",Ext.ux.grid.RowExpander),Ext.grid.RowExpander=Ext.ux.grid.RowExpander,DateUtilities.convertDateToProperString=function(d){var month=StringUtilities.pad(d.getMonth()+1,2),day=StringUtilities.pad(d.getDate(),2);return d.getFullYear()+"-"+month+"-"+day+" "+(StringUtilities.pad(d.getHours(),2)+":"+StringUtilities.pad(d.getMinutes(),2)+":"+StringUtilities.pad(d.getSeconds(),2))};var Direction={LEFT:0,RIGHT:1},StringUtilities={pad:function(string,pad_length,pad_character,pad_direction){if(string=string.toString(),pad_character=pad_character||"0",pad_direction=pad_direction||Direction.LEFT,string.length>=pad_length)return string;for(var diff=pad_length-string.length,i=0;i<diff;i++)pad_direction==Direction.LEFT&&(string=pad_character+string),pad_direction==Direction.RIGHT&&(string+=pad_character);return string}};Ext.namespace("XDMoD.Error"),XDMoD.Error.UnknownXdmodException=-1,XDMoD.Error.NotAuthenticated=1,XDMoD.Error.SessionExpired=2,XDMoD.Error.QueryException=100,XDMoD.Error.QueryUnknownGroupBy=101,XDMoD.Error.QueryUnavailableTimeAggregationUnit=102,XDMoD.Error.QueryAccessDenied=103,XDMoD.Error.QueryBadRequest=104,XDMoD.Error.QueryNotFound=105,XDMoD.Error.QueryMissingFilterListTable=106;var loginPanel=null;function toFormalDate(date){var elems=date.split("-");return elems[1]+"/"+elems[2]+"/"+elems[0]}function truncateText(text,limit){var active_limit=limit||30;return(text=""+text).substr(0,active_limit)+(text.length>active_limit?"...":"")}String.prototype.wordWrap=function(m,b,c){var i,j,l,s,r;if(m<1)return this;for(i=-1,l=(r=this.split("\n")).length;++i<l;r[i]+=s)for(s=r[i],r[i]="";s.length>m;r[i]+=s.slice(0,j)+((s=s.slice(j)).length?b:""))j=2==c||(j=s.slice(0,m+1).match(/\S*(\s)?$/))[1]?m:j.input.length-j[0].length||1==c&&m||j.input.length+(j=s.slice(m).match(/^\S*/)).input.length;return r.join("\n")},String.prototype.startsWith||(String.prototype.startsWith=function(searchString,position){return position=position||0,this.lastIndexOf(searchString,position)===position}),Ext.namespace("XDMoD","XDMoD.Plugins"),XDMoD.Plugins.ContextSensitiveHelper=function(tags){return{init:function(p){p.on("afterrender",function(panel){panel.addTool({id:"help",handler:function(event,toolEl,panel,tc){window.open("user_manual.php?t="+tags)},qtip:"More information"})},p,{single:!0})}}},Ext.ux.collapsedPanelTitlePlugin=function(overrideTitle){this.renderVerticalText=function(t){return'<div><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="15" height="792" style="width: 15px; height: 792px;"><defs/><rect width="100%" height="100%" fill="#000" stroke="none" opacity="0" /><text zIndex="0" text="" font-family="tahoma,arial,verdana,sans-serif" font-weight="bold" font-size="11px" fill="rgb(51, 51, 51)" x="0" y="0" text-anchor="start" transform="matrix(0, 1, -1, 0, 6.75, 1)"><tspan x="5" dy="1">'+t+"</tspan></text></svg></div>"},this.renderHorizontalText=function(t){return'<div style="font-family: tahoma,arial,verdana,sans-serif; font-weight: bold; font-size: 11px; padding: 2px 0 0 5px">'+t+"</div>"},this.renderText=function(p,t){var active_title=t.replace("<h1>","").replace("</h1>","");return"north"==p.region||"south"==p.region?this.renderHorizontalText(active_title):"east"==p.region||"west"==p.region?this.renderVerticalText(active_title):void 0},this.initTextLabel=function(ct,r,p){var self=this;p.collapsedTitleEl=ct.layout[r].collapsedEl.createChild({tag:"div",cls:"x-panel-collapsed-text",html:self.renderText(p,p.title)}),p.setTitle=Ext.Panel.prototype.setTitle.createSequence(function(t){p.collapsedTitleEl.dom.innerHTML=self.renderText(p,t)})},this.init=function(p){var self=this;if(null==p.title&&(p.title=""),p.collapsible){var r=p.region;p.on("render",function(){var ct=p.ownerCt;ct.on("afterlayout",function(){ct.layout[r].collapsedEl&&self.initTextLabel(ct,r,p)},!1,{single:!0}),p.on("collapse",function(){ct.layout[r].collapsedEl&&!p.collapsedTitleEl&&self.initTextLabel(ct,r,p)},!1,{single:!0})})}}},Ext.namespace("XDMoD.SessionManager"),XDMoD.SessionManager._sessionExpiredNotification=new Ext.Window({title:"Session Expired",closable:!1,resizable:!1,modal:!0,autoHeight:!0,autoWidth:!0,padding:4,html:"<p>You have been logged out due to inactivity.</p><p>Please log in again to continue.</p>",bbar:{items:["->",new Ext.Button({text:"Complete Logout",handler:function(){location.href=location.href.split("#")[0]}})]}}),Ext.util.Observable.observeClass(Ext.data.Connection),Ext.data.Connection.on("requestexception",function(conn,response,options){var responseObject=CCR.safelyDecodeJSONResponse(response);null!==responseObject&&"object"==typeof responseObject&&!1===responseObject.success&&responseObject.code===XDMoD.Error.SessionExpired&&(XDMoD.SessionManager._sessionExpiredNotification.show(),response.exceptionHandledGlobally=!0)}),Ext.namespace("XDMoD.REST"),XDMoD.REST.baseURL="/rest/",XDMoD.REST.Call=function(config){if(!config.action)return Ext.MessageBox.alert("RESTProxy","Action Required"),-1;if(!config.callback)return Ext.MessageBox.alert("RESTProxy","Callback Required"),-1;config.callbackArguments||(config.callbackArguments={}),config.resume||(config.resume=!1),config.arguments||(config.arguments={});var restArgumentString="";for(var argName in config.arguments)config.arguments[argName]&&(restArgumentString+="/"+argName+"="+config.arguments[argName]);var fullURL=0==config.action.indexOf("http")?"":XDMoD.REST.baseURL;fullURL=fullURL+config.action+restArgumentString;var requestSuccess=function(response){var responseData=Ext.decode(response.responseText);if(0==responseData.success){var restMessages=["^(realm|category|action) required$","^Unknown realm '(.+)'$","^Category '(.+)' is not defined for realm '(.+)'$","^Unknown action '(.+)' in category '(.+)'$"];for(i=0;i<restMessages.length;i++){var re=new RegExp(restMessages[i]);if(responseData.message.match(re))return Ext.MessageBox.alert("RESTProxy",responseData.message),-1}var authenticationMessages=["Invalid token specified","Token invalid or expired.  You must authenticate before using this call."];if(!(responseData&&"logout"==responseData.action))for(i=0;i<authenticationMessages.length;i++)if(responseData.message==authenticationMessages[i])return null==loginPanel&&(loginPanel=new XDMoD.LoginPrompt),loginPanel.setRESTConfig(config),loginPanel.show(),-1}config.callback(responseData,config.callbackArguments)};if("authentication/utilities/login"==config.action||"portal/profile/update"==config.action)return Ext.Ajax.request({url:XDMoD.REST.baseURL+config.action+"?token="+XDMoD.REST.token,method:"POST",params:config.arguments,timeout:6e4,success:function(response){requestSuccess.call(this,response),config.success&&(response.argument=config.argument,config.success.call(config.scope,response))},failure:function(response){config.failure&&(response.argument=config.argument,config.failure.call(config.scope,response)),CCR.xdmod.ui.presentFailureResponse(response,{title:"RESTProxy",wrapperMessage:"Request Error"})}});var request_params={};return"token_value"!=XDMoD.REST.token&&(request_params.token=XDMoD.REST.token),Ext.Ajax.request({url:fullURL,method:config.method||"GET",params:request_params,timeout:6e4,success:function(response){requestSuccess.call(this,response),config.success&&(response.argument=config.argument,config.success.call(config.scope,response))},failure:function(response){config.failure&&(response.argument=config.argument,config.failure.call(config.scope,response)),CCR.xdmod.ui.presentFailureResponse(response,{title:"RESTProxy",wrapperMessage:"Request Error"})}})},Ext.namespace("XDMoD.REST"),XDMoD.REST.download=function(options){if(!Ext.isDefined(options))throw"Options must be specified.";if(!Ext.isDefined(options.url))throw"URL must be specified.";var url=XDMoD.REST.prependPathBase(options.url),method=Ext.isDefined(options.method)?options.method:"GET",params=Ext.isDefined(options.params)?options.params:{};CCR.submitHiddenForm(url,method,params,options)},XDMoD.REST.prependPathBase=function(path){var pathBaseSeparator=path.startsWith("/")?"":"/";return XDMoD.REST.url+pathBaseSeparator+path},XDMoD.REST.prependPathBaseOnApi=function(api){for(var apiActionKey in api)if(api.hasOwnProperty(apiActionKey)){var apiAction=api[apiActionKey];Ext.isString(apiAction)?api[apiActionKey]=XDMoD.REST.prependPathBase(apiAction):Ext.isObject(apiAction)&&apiAction.url&&(apiAction.url=XDMoD.REST.prependPathBase(apiAction.url))}return api},XDMoD.REST.removeEmptyParameters=function(parameters){var emptyParameterKeys=[];return Ext.iterate(parameters,function(parameterKey,parameterValue){Ext.isEmpty(parameterValue)&&emptyParameterKeys.push(parameterKey)}),Ext.each(emptyParameterKeys,function(emptyParameterKey){delete parameters[emptyParameterKey]}),parameters},XDMoD.REST.createConnection=function(config){var restConnection=new Ext.data.Connection(config);return restConnection.on("beforerequest",function(conn,options){options.url=XDMoD.REST.prependPathBase(options.url)}),restConnection},XDMoD.REST.connection=XDMoD.REST.createConnection(),XDMoD.REST.createHttpProxy=function(config){return(config=void 0===config?{}:config).api&&XDMoD.REST.prependPathBaseOnApi(config.api),config.url&&(config.url=XDMoD.REST.prependPathBase(config.url)),new Ext.data.HttpProxy(config)},XDMoD.REST.TreeLoader=Ext.extend(Ext.tree.TreeLoader,{abort:function(){this.isLoading()&&XDMoD.REST.connection.abort(this.transId)},requestData:function(node,callback,scope){if(!1!==this.fireEvent("beforeload",this,node,callback))if(this.directFn){var args=this.getParams(node);args.push(this.processDirectResponse.createDelegate(this,[{callback:callback,node:node,scope:scope}],!0)),this.directFn.apply(window,args)}else this.transId=XDMoD.REST.connection.request({method:this.requestMethod,url:this.dataUrl||this.url,success:this.handleResponse,failure:this.handleFailure,scope:this,argument:{callback:callback,node:node,scope:scope},params:this.getParams(node)});else this.runCallback(callback,scope||node,[])},createStandardLoadListener:function(transformFunction){return Ext.isFunction(transformFunction)||(transformFunction=function(data){return data.results}),function(loader,node,response){var data=CCR.safelyDecodeJSONResponse(response);CCR.checkDecodedJSONResponseSuccess(data)?node.appendChild(transformFunction.call(this,data,node)):loader.fireEvent("loadexception",loader,node,response)}}}),Ext.ns("Ext.ux.grid"),Ext.ux.grid.LockingGridView=Ext.extend(Ext.grid.GridView,{lockText:"Lock",unlockText:"Unlock",rowBorderWidth:1,lockedBorderWidth:1,syncHeights:!1,initTemplates:function(){var ts=this.templates||{};ts.masterTpl||(ts.masterTpl=new Ext.Template('<div class="x-grid3" hidefocus="true">','<div class="x-grid3-locked">','<div class="x-grid3-header"><div class="x-grid3-header-inner"><div class="x-grid3-header-offset" style="{lstyle}">{lockedHeader}</div></div><div class="x-clear"></div></div>','<div class="x-grid3-scroller"><div class="x-grid3-body" style="{lstyle}">{lockedBody}</div><div class="x-grid3-scroll-spacer"></div></div>',"</div>",'<div class="x-grid3-viewport x-grid3-unlocked">','<div class="x-grid3-header"><div class="x-grid3-header-inner"><div class="x-grid3-header-offset" style="{ostyle}">{header}</div></div><div class="x-clear"></div></div>','<div class="x-grid3-scroller"><div class="x-grid3-body" style="{bstyle}">{body}</div><a href="#" class="x-grid3-focus" tabIndex="-1"></a></div>',"</div>",'<div class="x-grid3-resize-marker">&#160;</div>','<div class="x-grid3-resize-proxy">&#160;</div>',"</div>")),this.templates=ts,Ext.ux.grid.LockingGridView.superclass.initTemplates.call(this)},getEditorParent:function(ed){return this.el.dom},initElements:function(){var el=Ext.get(this.grid.getGridEl().dom.firstChild),lockedWrap=el.child("div.x-grid3-locked"),lockedHd=lockedWrap.child("div.x-grid3-header"),lockedScroller=lockedWrap.child("div.x-grid3-scroller"),mainWrap=el.child("div.x-grid3-viewport"),mainHd=mainWrap.child("div.x-grid3-header"),scroller=mainWrap.child("div.x-grid3-scroller");this.grid.hideHeaders&&(lockedHd.setDisplayed(!1),mainHd.setDisplayed(!1)),this.forceFit&&scroller.setStyle("overflow-x","hidden"),Ext.apply(this,{el:el,mainWrap:mainWrap,mainHd:mainHd,innerHd:mainHd.dom.firstChild,scroller:scroller,mainBody:scroller.child("div.x-grid3-body"),focusEl:scroller.child("a"),resizeMarker:el.child("div.x-grid3-resize-marker"),resizeProxy:el.child("div.x-grid3-resize-proxy"),lockedWrap:lockedWrap,lockedHd:lockedHd,lockedScroller:lockedScroller,lockedBody:lockedScroller.child("div.x-grid3-body"),lockedInnerHd:lockedHd.child("div.x-grid3-header-inner",!0)}),this.focusEl.swallowEvent("click",!0)},getLockedRows:function(){return this.hasRows()?this.lockedBody.dom.childNodes:[]},getLockedRow:function(row){return this.getLockedRows()[row]},getCell:function(row,col){var lockedLen=this.cm.getLockedCount();return col<lockedLen?this.getLockedRow(row).getElementsByTagName("td")[col]:Ext.ux.grid.LockingGridView.superclass.getCell.call(this,row,col-lockedLen)},getHeaderCell:function(index){var lockedLen=this.cm.getLockedCount();return index<lockedLen?this.lockedHd.dom.getElementsByTagName("td")[index]:Ext.ux.grid.LockingGridView.superclass.getHeaderCell.call(this,index-lockedLen)},addRowClass:function(row,cls){var lockedRow=this.getLockedRow(row);lockedRow&&this.fly(lockedRow).addClass(cls),Ext.ux.grid.LockingGridView.superclass.addRowClass.call(this,row,cls)},removeRowClass:function(row,cls){var lockedRow=this.getLockedRow(row);lockedRow&&this.fly(lockedRow).removeClass(cls),Ext.ux.grid.LockingGridView.superclass.removeRowClass.call(this,row,cls)},removeRow:function(row){Ext.removeNode(this.getLockedRow(row)),Ext.ux.grid.LockingGridView.superclass.removeRow.call(this,row)},removeRows:function(firstRow,lastRow){for(var lockedBody=this.lockedBody.dom,rowIndex=firstRow;rowIndex<=lastRow;rowIndex++)Ext.removeNode(lockedBody.childNodes[firstRow]);Ext.ux.grid.LockingGridView.superclass.removeRows.call(this,firstRow,lastRow)},syncScroll:function(e){this.lockedScroller.dom.scrollTop=this.scroller.dom.scrollTop,Ext.ux.grid.LockingGridView.superclass.syncScroll.call(this,e)},updateSortIcon:function(col,dir){var sortClasses=this.sortClasses,lockedHeaders=this.lockedHd.select("td").removeClass(sortClasses),headers=this.mainHd.select("td").removeClass(sortClasses),lockedLen=this.cm.getLockedCount(),cls=sortClasses["DESC"==dir?1:0];col<lockedLen?lockedHeaders.item(col).addClass(cls):headers.item(col-lockedLen).addClass(cls)},updateAllColumnWidths:function(){var len,i,tw=this.getTotalWidth(),clen=this.cm.getColumnCount(),lw=this.getLockedWidth(),llen=this.cm.getLockedCount(),ws=[];for(this.updateLockedWidth(),i=0;i<clen;i++){ws[i]=this.getColumnWidth(i),this.getHeaderCell(i).style.width=ws[i]}var row,trow,j,lns=this.getLockedRows(),ns=this.getRows();for(i=0,len=ns.length;i<len;i++){if((row=lns[i]).style.width=lw,row.firstChild)for(row.firstChild.style.width=lw,trow=row.firstChild.rows[0],j=0;j<llen;j++)trow.childNodes[j].style.width=ws[j];if((row=ns[i]).style.width=tw,row.firstChild)for(row.firstChild.style.width=tw,trow=row.firstChild.rows[0],j=llen;j<clen;j++)trow.childNodes[j-llen].style.width=ws[j]}this.onAllColumnWidthsUpdated(ws,tw),this.syncHeaderHeight()},updateColumnWidth:function(col,width){var ns,rw,c,row,w=this.getColumnWidth(col),llen=this.cm.getLockedCount();this.updateLockedWidth(),c=col<llen?(ns=this.getLockedRows(),rw=this.getLockedWidth(),col):(ns=this.getRows(),rw=this.getTotalWidth(),col-llen),this.getHeaderCell(col).style.width=w;for(var i=0,len=ns.length;i<len;i++)(row=ns[i]).style.width=rw,row.firstChild&&(row.firstChild.style.width=rw,row.firstChild.rows[0].childNodes[c].style.width=w);this.onColumnWidthUpdated(col,w,this.getTotalWidth()),this.syncHeaderHeight()},updateColumnHidden:function(col,hidden){var ns,rw,c,row,llen=this.cm.getLockedCount(),display=hidden?"none":"";this.updateLockedWidth(),c=col<llen?(ns=this.getLockedRows(),rw=this.getLockedWidth(),col):(ns=this.getRows(),rw=this.getTotalWidth(),col-llen),this.getHeaderCell(col).style.display=display;for(var i=0,len=ns.length;i<len;i++)(row=ns[i]).style.width=rw,row.firstChild&&(row.firstChild.style.width=rw,row.firstChild.rows[0].childNodes[c].style.display=display);this.onColumnHiddenUpdated(col,hidden,this.getTotalWidth()),delete this.lastViewWidth,this.layout()},doRender:function(cs,rs,ds,startRow,colCount,stripe){for(var cb,lcb,c,r,ts=this.templates,ct=ts.cell,rt=ts.row,last=colCount-1,tstyle="width:"+this.getTotalWidth()+";",lstyle="width:"+this.getLockedWidth()+";",buf=[],lbuf=[],p={},rp={},j=0,len=rs.length;j<len;j++){r=rs[j],cb=[],lcb=[];for(var rowIndex=j+startRow,i=0;i<colCount;i++)c=cs[i],p.id=c.id,p.css=(0===i?"x-grid3-cell-first ":i==last?"x-grid3-cell-last ":"")+(this.cm.config[i].cellCls?" "+this.cm.config[i].cellCls:""),p.attr=p.cellAttr="",p.value=c.renderer(r.data[c.name],p,r,rowIndex,i,ds),p.style=c.style,Ext.isEmpty(p.value)&&(p.value="&#160;"),this.markDirty&&r.dirty&&Ext.isDefined(r.modified[c.name])&&(p.css+=" x-grid3-dirty-cell"),c.locked?lcb[lcb.length]=ct.apply(p):cb[cb.length]=ct.apply(p);var alt=[];stripe&&(rowIndex+1)%2==0&&(alt[0]="x-grid3-row-alt"),r.dirty&&(alt[1]=" x-grid3-dirty-row"),rp.cols=colCount,this.getRowClass&&(alt[2]=this.getRowClass(r,rowIndex,rp,ds)),rp.alt=alt.join(" "),rp.cells=cb.join(""),rp.tstyle=tstyle,buf[buf.length]=rt.apply(rp),rp.cells=lcb.join(""),rp.tstyle=lstyle,lbuf[lbuf.length]=rt.apply(rp)}return[buf.join(""),lbuf.join("")]},processRows:function(startRow,skipStripe){if(this.ds&&!(this.ds.getCount()<1)){var row,lrow,rows=this.getRows(),lrows=this.getLockedRows();skipStripe=skipStripe||!this.grid.stripeRows,startRow=startRow||0;for(var i=0,len=rows.length;i<len;++i)row=rows[i],lrow=lrows[i],row.rowIndex=i,lrow.rowIndex=i,skipStripe||(row.className=row.className.replace(this.rowClsRe," "),lrow.className=lrow.className.replace(this.rowClsRe," "),(i+1)%2==0&&(row.className+=" x-grid3-row-alt",lrow.className+=" x-grid3-row-alt")),this.syncRowHeights(row,lrow);0===startRow&&(Ext.fly(rows[0]).addClass(this.firstRowCls),Ext.fly(lrows[0]).addClass(this.firstRowCls)),Ext.fly(rows[rows.length-1]).addClass(this.lastRowCls),Ext.fly(lrows[lrows.length-1]).addClass(this.lastRowCls)}},syncRowHeights:function(row1,row2){if(this.syncHeights){var el1=Ext.get(row1),el2=Ext.get(row2),h1=el1.getHeight(),h2=el2.getHeight();h2<h1?el2.setHeight(h1):h1<h2&&el1.setHeight(h2)}},afterRender:function(){if(this.ds&&this.cm){var bd=this.renderRows()||["&#160;","&#160;"];this.mainBody.dom.innerHTML=bd[0],this.lockedBody.dom.innerHTML=bd[1],this.processRows(0,!0),!0!==this.deferEmptyText&&this.applyEmptyText(),this.grid.fireEvent("viewready",this.grid)}},renderUI:function(){var templates=this.templates,header=this.renderHeaders(),body=templates.body.apply({rows:"&#160;"});return templates.masterTpl.apply({body:body,header:header[0],ostyle:"width:"+this.getOffsetWidth()+";",bstyle:"width:"+this.getTotalWidth()+";",lockedBody:body,lockedHeader:header[1],lstyle:"width:"+this.getLockedWidth()+";"})},afterRenderUI:function(){var g=this.grid;this.initElements(),Ext.fly(this.innerHd).on("click",this.handleHdDown,this),Ext.fly(this.lockedInnerHd).on("click",this.handleHdDown,this),this.mainHd.on({scope:this,mouseover:this.handleHdOver,mouseout:this.handleHdOut,mousemove:this.handleHdMove}),this.lockedHd.on({scope:this,mouseover:this.handleHdOver,mouseout:this.handleHdOut,mousemove:this.handleHdMove}),this.scroller.on("scroll",this.syncScroll,this),!1!==g.enableColumnResize&&(this.splitZone=new Ext.grid.GridView.SplitDragZone(g,this.mainHd.dom),this.splitZone.setOuterHandleElId(Ext.id(this.lockedHd.dom)),this.splitZone.setOuterHandleElId(Ext.id(this.mainHd.dom))),g.enableColumnMove&&(this.columnDrag=new Ext.grid.GridView.ColumnDragZone(g,this.innerHd),this.columnDrag.setOuterHandleElId(Ext.id(this.lockedInnerHd)),this.columnDrag.setOuterHandleElId(Ext.id(this.innerHd)),this.columnDrop=new Ext.grid.HeaderDropZone(g,this.mainHd.dom)),!1!==g.enableHdMenu&&(this.hmenu=new Ext.menu.Menu({id:g.id+"-hctx"}),this.hmenu.add({itemId:"asc",text:this.sortAscText,cls:"xg-hmenu-sort-asc"},{itemId:"desc",text:this.sortDescText,cls:"xg-hmenu-sort-desc"}),!1!==this.grid.enableColLock&&this.hmenu.add({itemId:"sortSep",xtype:"menuseparator"},{itemId:"lock",text:this.lockText,cls:"xg-hmenu-lock"},{itemId:"unlock",text:this.unlockText,cls:"xg-hmenu-unlock"}),!1!==g.enableColumnHide&&(this.colMenu=new Ext.menu.Menu({id:g.id+"-hcols-menu"}),this.colMenu.on({scope:this,beforeshow:this.beforeColMenuShow,itemclick:this.handleHdMenuClick}),this.hmenu.add("-",{itemId:"columns",hideOnClick:!1,text:this.columnsText,menu:this.colMenu,iconCls:"x-cols-icon"})),this.hmenu.on("itemclick",this.handleHdMenuClick,this)),g.trackMouseOver&&(this.mainBody.on({scope:this,mouseover:this.onRowOver,mouseout:this.onRowOut}),this.lockedBody.on({scope:this,mouseover:this.onRowOver,mouseout:this.onRowOut})),(g.enableDragDrop||g.enableDrag)&&(this.dragZone=new Ext.grid.GridDragZone(g,{ddGroup:g.ddGroup||"GridDD"})),this.updateHeaderSortState()},layout:function(){if(this.mainBody){var g=this.grid,csize=g.getGridEl().getSize(!0),vw=csize.width;if(g.hideHeaders||!(vw<20||csize.height<20)){if(this.syncHeaderHeight(),g.autoHeight)this.scroller.dom.style.overflow="visible",this.lockedScroller.dom.style.overflow="visible",Ext.isWebKit&&(this.scroller.dom.style.position="static",this.lockedScroller.dom.style.position="static");else{this.el.setSize(csize.width,csize.height);var hdHeight=this.mainHd.getHeight(),vh=csize.height-hdHeight}this.updateLockedWidth(),this.forceFit?this.lastViewWidth!=vw&&(this.fitColumns(!1,!1),this.lastViewWidth=vw):(this.autoExpand(),this.syncHeaderScroll()),this.onLayout(vw,vh)}}},getOffsetWidth:function(){return this.cm.getTotalWidth()-this.cm.getTotalLockedWidth()+this.getScrollOffset()+"px"},renderHeaders:function(){for(var cm=this.cm,ts=this.templates,ct=ts.hcell,cb=[],lcb=[],p={},len=cm.getColumnCount(),last=len-1,i=0;i<len;i++)p.id=cm.getColumnId(i),p.value=cm.getColumnHeader(i)||"",p.style=this.getColumnStyle(i,!0),p.tooltip=this.getColumnTooltip(i),p.css=(0===i?"x-grid3-cell-first ":i==last?"x-grid3-cell-last ":"")+(cm.config[i].headerCls?" "+cm.config[i].headerCls:""),"right"==cm.config[i].align?p.istyle="padding-right:16px":delete p.istyle,cm.isLocked(i)?lcb[lcb.length]=ct.apply(p):cb[cb.length]=ct.apply(p);return[ts.header.apply({cells:cb.join(""),tstyle:"width:"+this.getTotalWidth()+";"}),ts.header.apply({cells:lcb.join(""),tstyle:"width:"+this.getLockedWidth()+";"})]},updateHeaders:function(){var hd=this.renderHeaders();this.innerHd.firstChild.innerHTML=hd[0],this.innerHd.firstChild.style.width=this.getOffsetWidth(),this.innerHd.firstChild.firstChild.style.width=this.getTotalWidth(),this.lockedInnerHd.firstChild.innerHTML=hd[1];var lw=this.getLockedWidth();this.lockedInnerHd.firstChild.style.width=lw,this.lockedInnerHd.firstChild.firstChild.style.width=lw},getResolvedXY:function(resolved){if(!resolved)return null;var c=resolved.cell,r=resolved.row;return c?Ext.fly(c).getXY():[this.scroller.getX(),Ext.fly(r).getY()]},syncFocusEl:function(row,col,hscroll){Ext.ux.grid.LockingGridView.superclass.syncFocusEl.call(this,row,col,!(col<this.cm.getLockedCount())&&hscroll)},ensureVisible:function(row,col,hscroll){return Ext.ux.grid.LockingGridView.superclass.ensureVisible.call(this,row,col,!(col<this.cm.getLockedCount())&&hscroll)},insertRows:function(dm,firstRow,lastRow,isUpdate){var last=dm.getCount()-1;if(!isUpdate&&0===firstRow&&last<=lastRow)this.refresh();else{isUpdate||this.fireEvent("beforerowsinserted",this,firstRow,lastRow);var html=this.renderRows(firstRow,lastRow),before=this.getRow(firstRow);before?(0===firstRow&&this.removeRowClass(0,this.firstRowCls),Ext.DomHelper.insertHtml("beforeBegin",before,html[0]),before=this.getLockedRow(firstRow),Ext.DomHelper.insertHtml("beforeBegin",before,html[1])):(this.removeRowClass(last-1,this.lastRowCls),Ext.DomHelper.insertHtml("beforeEnd",this.mainBody.dom,html[0]),Ext.DomHelper.insertHtml("beforeEnd",this.lockedBody.dom,html[1])),isUpdate?(0===firstRow||last<=firstRow)&&this.addRowClass(firstRow,0===firstRow?this.firstRowCls:this.lastRowCls):(this.fireEvent("rowsinserted",this,firstRow,lastRow),this.processRows(firstRow))}this.syncFocusEl(firstRow)},getColumnStyle:function(col,isHeader){var style=isHeader?this.cm.config[col].headerStyle||"":this.cm.config[col].cellStyle||this.cm.config[col].css||"";style+="width:"+this.getColumnWidth(col)+";",this.cm.isHidden(col)&&(style+="display:none;");var align=this.cm.config[col].align;return align&&(style+="text-align:"+align+";"),style},getLockedWidth:function(){return this.cm.getTotalLockedWidth()+"px"},getTotalWidth:function(){return this.cm.getTotalWidth()-this.cm.getTotalLockedWidth()+"px"},getColumnData:function(){for(var cs=[],cm=this.cm,colCount=cm.getColumnCount(),i=0;i<colCount;i++){var name=cm.getDataIndex(i);cs[i]={name:Ext.isDefined(name)?name:this.ds.fields.get(i).name,renderer:cm.getRenderer(i),scope:cm.getRendererScope(i),id:cm.getColumnId(i),style:this.getColumnStyle(i),locked:cm.isLocked(i)}}return cs},renderBody:function(){var markup=this.renderRows()||["&#160;","&#160;"];return[this.templates.body.apply({rows:markup[0]}),this.templates.body.apply({rows:markup[1]})]},refreshRow:function(record){var rowIndex,row,lockedRow,column,meta,css,i,store=this.ds,colCount=this.cm.getColumnCount(),columns=this.getColumnData(),last=colCount-1,cls=["x-grid3-row"],rowParams={tstyle:String.format("width: {0};",this.getTotalWidth())},lockedRowParams={tstyle:String.format("width: {0};",this.getLockedWidth())},colBuffer=[],lockedColBuffer=[],cellTpl=this.templates.cell;if(Ext.isNumber(record)?(rowIndex=record,record=store.getAt(rowIndex)):rowIndex=store.indexOf(record),record&&!(rowIndex<0)){for(i=0;i<colCount;i++)css=0==i?"x-grid3-cell-first":i==last?"x-grid3-cell-last ":"",(meta={id:(column=columns[i]).id,style:column.style,css:css,attr:"",cellAttr:""}).value=column.renderer.call(column.scope,record.data[column.name],meta,record,rowIndex,i,store),Ext.isEmpty(meta.value)&&(meta.value=" "),this.markDirty&&record.dirty&&void 0!==record.modified[column.name]&&(meta.css+=" x-grid3-dirty-cell"),column.locked?lockedColBuffer[i]=cellTpl.apply(meta):colBuffer[i]=cellTpl.apply(meta);(row=this.getRow(rowIndex)).className="",(lockedRow=this.getLockedRow(rowIndex)).className="",this.grid.stripeRows&&(rowIndex+1)%2==0&&cls.push("x-grid3-row-alt"),this.getRowClass&&(rowParams.cols=colCount,cls.push(this.getRowClass(record,rowIndex,rowParams,store))),this.fly(row).addClass(cls).setStyle(rowParams.tstyle),rowParams.cells=colBuffer.join(""),row.innerHTML=this.templates.rowInner.apply(rowParams),this.fly(lockedRow).addClass(cls).setStyle(lockedRowParams.tstyle),lockedRowParams.cells=lockedColBuffer.join(""),lockedRow.innerHTML=this.templates.rowInner.apply(lockedRowParams),lockedRow.rowIndex=rowIndex,this.syncRowHeights(row,lockedRow),this.fireEvent("rowupdated",this,rowIndex,record)}},refresh:function(headersToo){this.fireEvent("beforerefresh",this),this.grid.stopEditing(!0);var result=this.renderBody();this.mainBody.update(result[0]).setWidth(this.getTotalWidth()),this.lockedBody.update(result[1]).setWidth(this.getLockedWidth()),!0===headersToo&&(this.updateHeaders(),this.updateHeaderSortState()),this.processRows(0,!0),this.layout(),this.applyEmptyText(),this.fireEvent("refresh",this)},onDenyColumnLock:function(){},initData:function(ds,cm){this.cm&&this.cm.un("columnlockchange",this.onColumnLock,this),Ext.ux.grid.LockingGridView.superclass.initData.call(this,ds,cm),this.cm&&this.cm.on("columnlockchange",this.onColumnLock,this)},onColumnLock:function(){this.refresh(!0)},handleHdMenuClick:function(item){var index=this.hdCtxIndex,cm=this.cm,id=item.getItemId(),llen=cm.getLockedCount();switch(id){case"lock":if(cm.getColumnCount(!0)<=llen+1)return void this.onDenyColumnLock();cm.setLocked(index,!0,llen!=index),llen!=index&&(cm.moveColumn(index,llen),this.grid.fireEvent("columnmove",index,llen));break;case"unlock":llen-1!=index?(cm.setLocked(index,!1,!0),cm.moveColumn(index,llen-1),this.grid.fireEvent("columnmove",index,llen-1)):cm.setLocked(index,!1);break;default:return Ext.ux.grid.LockingGridView.superclass.handleHdMenuClick.call(this,item)}return!0},handleHdDown:function(e,t){if(Ext.ux.grid.LockingGridView.superclass.handleHdDown.call(this,e,t),!1!==this.grid.enableColLock&&Ext.fly(t).hasClass("x-grid3-hd-btn")){var hd=this.findHeaderCell(t),index=this.getCellIndex(hd),ms=this.hmenu.items,cm=this.cm;ms.get("lock").setDisabled(cm.isLocked(index)),ms.get("unlock").setDisabled(!cm.isLocked(index))}},syncHeaderHeight:function(){var hrow=Ext.fly(this.innerHd).child("tr",!0),lhrow=Ext.fly(this.lockedInnerHd).child("tr",!0);hrow.style.height="auto",lhrow.style.height="auto";var hd=hrow.offsetHeight,lhd=lhrow.offsetHeight,height=Math.max(lhd,hd)+"px";hrow.style.height=height,lhrow.style.height=height},updateLockedWidth:function(){var lw=this.cm.getTotalLockedWidth(),tw=this.cm.getTotalWidth()-lw,csize=this.grid.getGridEl().getSize(!0),lp=Ext.isBorderBox?0:this.lockedBorderWidth,rp=Ext.isBorderBox?0:this.rowBorderWidth,vw=Math.max(csize.width-lw-lp-rp,0)+"px",so=this.getScrollOffset();if(!this.grid.autoHeight){var vh=Math.max(csize.height-this.mainHd.getHeight(),0)+"px";this.lockedScroller.dom.style.height=vh,this.scroller.dom.style.height=vh}this.lockedWrap.dom.style.width=lw+rp+"px",this.scroller.dom.style.width=vw,this.mainWrap.dom.style.left=lw+lp+rp+"px",this.innerHd&&(this.lockedInnerHd.firstChild.style.width=lw+"px",this.lockedInnerHd.firstChild.firstChild.style.width=lw+"px",this.innerHd.style.width=vw,this.innerHd.firstChild.style.width=tw+rp+so+"px",this.innerHd.firstChild.firstChild.style.width=tw+"px"),this.mainBody&&(this.lockedBody.dom.style.width=lw+rp+"px",this.mainBody.dom.style.width=tw+rp+"px")}}),Ext.ux.grid.LockingColumnModel=Ext.extend(Ext.grid.ColumnModel,{isLocked:function(colIndex){return!0===this.config[colIndex].locked},setLocked:function(colIndex,value,suppressEvent){this.isLocked(colIndex)!=value&&(this.config[colIndex].locked=value,suppressEvent||this.fireEvent("columnlockchange",this,colIndex,value))},getTotalLockedWidth:function(){for(var totalWidth=0,i=0,len=this.config.length;i<len;i++)this.isLocked(i)&&!this.isHidden(i)&&(totalWidth+=this.getColumnWidth(i));return totalWidth},getLockedCount:function(){for(var len=this.config.length,i=0;i<len;i++)if(!this.isLocked(i))return i;return len},moveColumn:function(oldIndex,newIndex){var oldLocked=this.isLocked(oldIndex),newLocked=this.isLocked(newIndex);oldIndex<newIndex&&oldLocked&&!newLocked?this.setLocked(oldIndex,!1,!0):newIndex<oldIndex&&!oldLocked&&newLocked&&this.setLocked(oldIndex,!0,!0),Ext.ux.grid.LockingColumnModel.superclass.moveColumn.apply(this,arguments)}}),Ext.ux.ProgressBarPager=Ext.extend(Object,{progBarWidth:225,defaultText:"Loading...",defaultAnimCfg:{duration:1,easing:"bounceOut"},constructor:function(config){config&&Ext.apply(this,config)},init:function(parent){if(parent.displayInfo){(this.parent=parent).items.indexOf(parent.displayItem);parent.remove(parent.displayItem,!0),this.progressBar=new Ext.ProgressBar({text:this.defaultText,width:this.progBarWidth,animate:this.defaultAnimCfg}),parent.displayItem=this.progressBar,parent.add(parent.displayItem),parent.doLayout(),Ext.apply(parent,this.parentOverrides),this.progressBar.on("render",function(pb){pb.mon(pb.getEl().applyStyles("cursor:pointer"),"click",this.handleProgressBarClick,this)},this,{single:!0})}},handleProgressBarClick:function(e){var parent=this.parent,displayItem=parent.displayItem,box=this.progressBar.getBox(),position=e.getXY()[0]-box.x,pages=Math.ceil(parent.store.getTotalCount()/parent.pageSize),newpage=Math.ceil(position/(displayItem.width/pages));parent.changePage(newpage)},parentOverrides:{updateInfo:function(){if(this.displayItem){var count=this.store.getCount(),pgData=this.getPageData(),msg=(this.readPage(pgData),0==count?this.emptyMsg:String.format(this.displayMsg,this.cursor+1,this.cursor+count,this.store.getTotalCount())),pct=pgData.activePage/pgData.pages;this.displayItem.updateProgress(pct,msg,this.animate||this.defaultAnimConfig)}}}}),Ext.preg("progressbarpager",Ext.ux.ProgressBarPager),Ext.ns("Ext.ux.tree"),Ext.ux.tree.TreeGridSorter=Ext.extend(Ext.tree.TreeSorter,{sortClasses:["sort-asc","sort-desc"],sortAscText:"Sort Ascending",sortDescText:"Sort Descending",constructor:function(tree,config){Ext.isObject(config)||(config={property:tree.columns[0].dataIndex||"text",folderSort:!0}),Ext.ux.tree.TreeGridSorter.superclass.constructor.apply(this,arguments),(this.tree=tree).on("headerclick",this.onHeaderClick,this),tree.ddAppendOnly=!0;var me=this;this.defaultSortFn=function(n1,n2){var desc=me.dir&&"desc"==me.dir.toLowerCase(),prop=me.property||"text",sortType=me.sortType,caseSensitive=!0===me.caseSensitive,leafAttr=me.leafAttr||"leaf",attr1=n1.attributes,attr2=n2.attributes;if(me.folderSort){if(attr1[leafAttr]&&!attr2[leafAttr])return 1;if(!attr1[leafAttr]&&attr2[leafAttr])return-1}var prop1=attr1[prop],prop2=attr2[prop],v1=sortType?sortType(prop1):caseSensitive?prop1:prop1.toUpperCase();return v2=sortType?sortType(prop2):caseSensitive?prop2:prop2.toUpperCase(),v1<v2?desc?1:-1:v1>v2?desc?-1:1:0},tree.on("afterrender",this.onAfterTreeRender,this,{single:!0}),tree.on("headermenuclick",this.onHeaderMenuClick,this)},onAfterTreeRender:function(){this.tree.hmenu&&this.tree.hmenu.insert(0,{itemId:"asc",text:this.sortAscText,cls:"xg-hmenu-sort-asc"},{itemId:"desc",text:this.sortDescText,cls:"xg-hmenu-sort-desc"}),this.updateSortIcon(0,"asc")},onHeaderMenuClick:function(c,id,index){if("asc"===id||"desc"===id)return this.onHeaderClick(c,null,index),!1},onHeaderClick:function(c,el,i){if(c&&!this.tree.headersDisabled){var me=this;me.property=c.dataIndex,me.dir=c.dir="desc"===c.dir?"asc":"desc",me.sortType=c.sortType,me.caseSensitive===Ext.isBoolean(c.caseSensitive)?c.caseSensitive:this.caseSensitive,me.sortFn=c.sortFn||this.defaultSortFn,this.tree.root.cascade(function(n){n.isLeaf()||me.updateSort(me.tree,n)}),this.updateSortIcon(i,c.dir)}},updateSortIcon:function(col,dir){var sc=this.sortClasses;this.tree.innerHd.select("td").removeClass(sc).item(col).addClass(sc["desc"==dir?1:0])}}),Ext.tree.ColumnResizer=Ext.extend(Ext.util.Observable,{minWidth:14,constructor:function(config){Ext.apply(this,config),Ext.tree.ColumnResizer.superclass.constructor.call(this)},init:function(tree){(this.tree=tree).on("render",this.initEvents,this)},initEvents:function(tree){tree.mon(tree.innerHd,"mousemove",this.handleHdMove,this),this.tracker=new Ext.dd.DragTracker({onBeforeStart:this.onBeforeStart.createDelegate(this),onStart:this.onStart.createDelegate(this),onDrag:this.onDrag.createDelegate(this),onEnd:this.onEnd.createDelegate(this),tolerance:3,autoStart:300}),this.tracker.initEl(tree.innerHd),tree.on("beforedestroy",this.tracker.destroy,this.tracker)},handleHdMove:function(e,t){var x=e.getPageX(),hd=e.getTarget(".x-treegrid-hd",3,!0);if(hd){var r=hd.getRegion(),ss=hd.dom.style,pn=hd.dom.parentNode;if(x-r.left<=5&&hd.dom!==pn.firstChild){for(var ps=hd.dom.previousSibling;ps&&Ext.fly(ps).hasClass("x-treegrid-hd-hidden");)ps=ps.previousSibling;ps&&(this.activeHd=Ext.get(ps),ss.cursor=Ext.isWebKit?"e-resize":"col-resize")}else if(r.right-x<=5){for(var ns=hd.dom;ns&&Ext.fly(ns).hasClass("x-treegrid-hd-hidden");)ns=ns.previousSibling;ns&&(this.activeHd=Ext.get(ns),ss.cursor=Ext.isWebKit?"w-resize":"col-resize")}else delete this.activeHd,ss.cursor=""}},onBeforeStart:function(e){return this.dragHd=this.activeHd,!!this.dragHd},onStart:function(e){this.dragHeadersDisabled=this.tree.headersDisabled,this.tree.headersDisabled=!0,this.proxy=this.tree.body.createChild({cls:"x-treegrid-resizer"}),this.proxy.setHeight(this.tree.body.getHeight());var x=this.tracker.getXY()[0];this.hdX=this.dragHd.getX(),this.hdIndex=this.tree.findHeaderIndex(this.dragHd),this.proxy.setX(this.hdX),this.proxy.setWidth(x-this.hdX),this.maxWidth=this.tree.outerCt.getWidth()-this.tree.innerBody.translatePoints(this.hdX).left},onDrag:function(e){var cursorX=this.tracker.getXY()[0];this.proxy.setWidth((cursorX-this.hdX).constrain(this.minWidth,this.maxWidth))},onEnd:function(e){var nw=this.proxy.getWidth(),tree=this.tree,disabled=this.dragHeadersDisabled;this.proxy.remove(),delete this.dragHd,tree.columns[this.hdIndex].width=nw,tree.updateColumnWidths(),setTimeout(function(){tree.headersDisabled=disabled},100)}}),Ext.ux.tree.TreeGridNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{isTreeGridNodeUI:!0,renderElements:function(n,a,targetNode,bulkRender){var i,buf,len,t=n.getOwnerTree(),cols=t.columns,c=cols[0];for(this.indentMarkup=n.parentNode?n.parentNode.ui.getChildIndent():"",buf=['<tbody class="x-tree-node">','<tr ext:tree-node-id="',n.id,'" class="x-tree-node-el x-tree-node-leaf ',a.cls,'">','<td class="x-treegrid-col">','<span class="x-tree-node-indent">',this.indentMarkup,"</span>",'<img src="',this.emptyIcon,'" class="x-tree-ec-icon x-tree-elbow" />','<img src="',a.icon||this.emptyIcon,'" class="x-tree-node-icon',a.icon?" x-tree-node-inline-icon":"",a.iconCls?" "+a.iconCls:"",'" unselectable="on" />','<a hidefocus="on" class="x-tree-node-anchor" href="',a.href?a.href:"#",'" tabIndex="1" ',a.hrefTarget?' target="'+a.hrefTarget+'"':"",">",'<span unselectable="on">',c.tpl?c.tpl.apply(a):a[c.dataIndex]||c.text,"</span></a>","</td>"],i=1,len=cols.length;i<len;i++)c=cols[i],buf.push('<td class="x-treegrid-col ',c.cls?c.cls:"",'">','<div unselectable="on" class="x-treegrid-text"',c.align?' style="text-align: '+c.align+';"':"",">",c.tpl?c.tpl.apply(a):a[c.dataIndex],"</div>","</td>");for(buf.push('</tr><tr class="x-tree-node-ct"><td colspan="',cols.length,'">','<table class="x-treegrid-node-ct-table" cellpadding="0" cellspacing="0" style="table-layout: fixed; display: none; width: ',t.innerCt.getWidth(),'px;"><colgroup>'),i=0,len=cols.length;i<len;i++)buf.push('<col style="width: ',cols[i].hidden?0:cols[i].width,'px;" />');buf.push("</colgroup></table></td></tr></tbody>"),!0!==bulkRender&&n.nextSibling&&n.nextSibling.ui.getEl()?this.wrap=Ext.DomHelper.insertHtml("beforeBegin",n.nextSibling.ui.getEl(),buf.join("")):this.wrap=Ext.DomHelper.insertHtml("beforeEnd",targetNode,buf.join("")),this.elNode=this.wrap.childNodes[0],this.ctNode=this.wrap.childNodes[1].firstChild.firstChild;var cs=this.elNode.firstChild.childNodes;this.indentNode=cs[0],this.ecNode=cs[1],this.iconNode=cs[2],this.anchor=cs[3],this.textNode=cs[3].firstChild},animExpand:function(cb){this.ctNode.style.display="",Ext.ux.tree.TreeGridNodeUI.superclass.animExpand.call(this,cb)}}),Ext.ux.tree.TreeGridRootNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{isTreeGridNodeUI:!0,render:function(){if(this.rendered||(this.wrap=this.ctNode=this.node.ownerTree.innerCt.dom,this.node.expanded=!0),Ext.isWebKit){var ct=this.ctNode;ct.style.tableLayout=null,function(){ct.style.tableLayout="fixed"}.defer(1)}},destroy:function(){this.elNode&&Ext.dd.Registry.unregister(this.elNode.id),delete this.node},collapse:Ext.emptyFn,expand:Ext.emptyFn}),Ext.ux.tree.TreeGridLoader=Ext.extend(Ext.tree.TreeLoader,{createNode:function(attr){return attr.uiProvider||(attr.uiProvider=Ext.ux.tree.TreeGridNodeUI),Ext.tree.TreeLoader.prototype.createNode.call(this,attr)}}),Ext.override(Ext.list.Column,{init:function(){var types=Ext.data.Types,st=this.sortType;this.type?Ext.isString(this.type)&&(this.type=Ext.data.Types[this.type.toUpperCase()]||types.AUTO):this.type=types.AUTO,Ext.isString(st)?this.sortType=Ext.data.SortTypes[st]:Ext.isEmpty(st)&&(this.sortType=this.type.sortType)}}),Ext.tree.Column=Ext.extend(Ext.list.Column,{}),Ext.tree.NumberColumn=Ext.extend(Ext.list.NumberColumn,{}),Ext.tree.DateColumn=Ext.extend(Ext.list.DateColumn,{}),Ext.tree.BooleanColumn=Ext.extend(Ext.list.BooleanColumn,{}),Ext.reg("tgcolumn",Ext.tree.Column),Ext.reg("tgnumbercolumn",Ext.tree.NumberColumn),Ext.reg("tgdatecolumn",Ext.tree.DateColumn),Ext.reg("tgbooleancolumn",Ext.tree.BooleanColumn),Ext.ux.tree.TreeGrid=Ext.extend(Ext.tree.TreePanel,{rootVisible:!1,useArrows:!0,lines:!1,borderWidth:Ext.isBorderBox?0:2,cls:"x-treegrid",columnResize:!0,enableSort:!0,reserveScrollOffset:!0,enableHdMenu:!0,columnsText:"Columns",initComponent:function(){this.root||(this.root=new Ext.tree.AsyncTreeNode({text:"Root"}));var l=this.loader;l?Ext.isObject(l)&&!l.load&&(l=new Ext.ux.tree.TreeGridLoader(l)):l=new Ext.ux.tree.TreeGridLoader({dataUrl:this.dataUrl,requestMethod:this.requestMethod,store:this.store}),this.loader=l,Ext.ux.tree.TreeGrid.superclass.initComponent.call(this),this.initColumns(),this.enableSort&&(this.treeGridSorter=new Ext.ux.tree.TreeGridSorter(this,this.enableSort)),this.columnResize&&(this.colResizer=new Ext.tree.ColumnResizer(this.columnResize),this.colResizer.init(this));this.columns;this.internalTpl||(this.internalTpl=new Ext.XTemplate('<div class="x-grid3-header">','<div class="x-treegrid-header-inner">','<div class="x-grid3-header-offset">','<table style="table-layout: fixed;" cellspacing="0" cellpadding="0" border="0"><colgroup><tpl for="columns"><col /></tpl></colgroup>','<thead><tr class="x-grid3-hd-row">','<tpl for="columns">','<td class="x-grid3-hd x-grid3-cell x-treegrid-hd" style="text-align: {align};" id="',this.id,'-xlhd-{#}">','<div class="x-grid3-hd-inner x-treegrid-hd-inner" unselectable="on">',this.enableHdMenu?'<a class="x-grid3-hd-btn" href="#"></a>':"",'{header}<img class="x-grid3-sort-icon" src="',Ext.BLANK_IMAGE_URL,'" />',"</div>","</td></tpl>","</tr></thead>","</table>","</div></div>","</div>",'<div class="x-treegrid-root-node">','<table class="x-treegrid-root-table" cellpadding="0" cellspacing="0" style="table-layout: fixed;"></table>',"</div>")),this.colgroupTpl||(this.colgroupTpl=new Ext.XTemplate('<colgroup><tpl for="columns"><col style="width: {width}px"/></tpl></colgroup>'))},initColumns:function(){var i,c,cs=this.columns,len=cs.length,columns=[];for(i=0;i<len;i++)(c=cs[i]).isColumn||(c.xtype=c.xtype?/^tg/.test(c.xtype)?c.xtype:"tg"+c.xtype:"tgcolumn",c=Ext.create(c)),c.init(this),columns.push(c),!1!==this.enableSort&&!1!==c.sortable&&(c.sortable=!0,this.enableSort=!0);this.columns=columns},onRender:function(){Ext.tree.TreePanel.superclass.onRender.apply(this,arguments),this.el.addClass("x-treegrid"),this.outerCt=this.body.createChild({cls:"x-tree-root-ct x-treegrid-ct "+(this.useArrows?"x-tree-arrows":this.lines?"x-tree-lines":"x-tree-no-lines")}),this.internalTpl.overwrite(this.outerCt,{columns:this.columns}),this.mainHd=Ext.get(this.outerCt.dom.firstChild),this.innerHd=Ext.get(this.mainHd.dom.firstChild),this.innerBody=Ext.get(this.outerCt.dom.lastChild),this.innerCt=Ext.get(this.innerBody.dom.firstChild),this.colgroupTpl.insertFirst(this.innerCt,{columns:this.columns}),this.hideHeaders?this.el.child(".x-grid3-header").setDisplayed("none"):!1!==this.enableHdMenu&&(this.hmenu=new Ext.menu.Menu({id:this.id+"-hctx"}),!1!==this.enableColumnHide&&(this.colMenu=new Ext.menu.Menu({id:this.id+"-hcols-menu"}),this.colMenu.on({scope:this,beforeshow:this.beforeColMenuShow,itemclick:this.handleHdMenuClick}),this.hmenu.add({itemId:"columns",hideOnClick:!1,text:this.columnsText,menu:this.colMenu,iconCls:"x-cols-icon"})),this.hmenu.on("itemclick",this.handleHdMenuClick,this))},setRootNode:function(node){return node.attributes.uiProvider=Ext.ux.tree.TreeGridRootNodeUI,node=Ext.ux.tree.TreeGrid.superclass.setRootNode.call(this,node),this.innerCt&&this.colgroupTpl.insertFirst(this.innerCt,{columns:this.columns}),node},clearInnerCt:function(){if(Ext.isIE)for(var dom=this.innerCt.dom;dom.firstChild;)dom.removeChild(dom.firstChild);else Ext.ux.tree.TreeGrid.superclass.clearInnerCt.call(this)},initEvents:function(){Ext.ux.tree.TreeGrid.superclass.initEvents.apply(this,arguments),this.mon(this.innerBody,"scroll",this.syncScroll,this),this.mon(this.innerHd,"click",this.handleHdDown,this),this.mon(this.mainHd,{scope:this,mouseover:this.handleHdOver,mouseout:this.handleHdOut})},onResize:function(w,h){Ext.ux.tree.TreeGrid.superclass.onResize.apply(this,arguments);var bd=this.innerBody.dom,hd=this.innerHd.dom;if(bd&&(Ext.isNumber(h)&&(bd.style.height=this.body.getHeight(!0)-hd.offsetHeight+"px"),Ext.isNumber(w))){var sw=Ext.num(this.scrollOffset,Ext.getScrollBarWidth());if(this.reserveScrollOffset||10<bd.offsetWidth-bd.clientWidth)this.setScrollOffset(sw);else{var me=this;setTimeout(function(){me.setScrollOffset(10<bd.offsetWidth-bd.clientWidth?sw:0)},10)}}},updateColumnWidths:function(){var c,i,j,cols=this.columns,colCount=cols.length,groups=this.outerCt.query("colgroup"),groupCount=groups.length;for(i=0;i<colCount;i++)for(c=cols[i],j=0;j<groupCount;j++)groups[j].childNodes[i].style.width=(c.hidden?0:c.width)+"px";for(i=0,groups=this.innerHd.query("td"),len=groups.length;i<len;i++)c=Ext.fly(groups[i]),cols[i]&&cols[i].hidden?c.addClass("x-treegrid-hd-hidden"):c.removeClass("x-treegrid-hd-hidden");var tcw=this.getTotalColumnWidth();Ext.fly(this.innerHd.dom.firstChild).setWidth(tcw+(this.scrollOffset||0)),this.outerCt.select("table").setWidth(tcw),this.syncHeaderScroll()},getVisibleColumns:function(){var i,columns=[],cs=this.columns,len=cs.length;for(i=0;i<len;i++)cs[i].hidden||columns.push(cs[i]);return columns},getTotalColumnWidth:function(){for(var total=0,i=0,cs=this.getVisibleColumns(),len=cs.length;i<len;i++)total+=cs[i].width;return total},setScrollOffset:function(scrollOffset){this.scrollOffset=scrollOffset,this.updateColumnWidths()},handleHdDown:function(e,t){var hd=e.getTarget(".x-treegrid-hd");if(hd&&Ext.fly(t).hasClass("x-grid3-hd-btn")){var ms=this.hmenu.items,c=this.columns[index=this.findHeaderIndex(hd)];c.sortable;e.stopEvent(),Ext.fly(hd).addClass("x-grid3-hd-menu-open"),this.hdCtxIndex=index,this.fireEvent("headerbuttonclick",ms,c,hd,index),this.hmenu.on("hide",function(){Ext.fly(hd).removeClass("x-grid3-hd-menu-open")},this,{single:!0}),this.hmenu.show(t,"tl-bl?")}else if(hd){var index=this.findHeaderIndex(hd);this.fireEvent("headerclick",this.columns[index],hd,index)}},handleHdOver:function(e,t){var hd=e.getTarget(".x-treegrid-hd");if(hd&&!this.headersDisabled){index=this.findHeaderIndex(hd),this.activeHdRef=t,this.activeHdIndex=index;var el=Ext.get(hd);this.activeHdRegion=el.getRegion(),el.addClass("x-grid3-hd-over"),this.activeHdBtn=el.child(".x-grid3-hd-btn"),this.activeHdBtn&&(this.activeHdBtn.dom.style.height=hd.firstChild.offsetHeight-1+"px")}},handleHdOut:function(e,t){var hd=e.getTarget(".x-treegrid-hd");!hd||Ext.isIE&&e.within(hd,!0)||(this.activeHdRef=null,Ext.fly(hd).removeClass("x-grid3-hd-over"),hd.style.cursor="")},findHeaderIndex:function(hd){for(var c,cs=(hd=hd.dom||hd).parentNode.childNodes,i=0;c=cs[i];i++)if(c==hd)return i;return-1},beforeColMenuShow:function(){var i,c,cols=this.columns,colCount=cols.length;for(this.colMenu.removeAll(),i=1;i<colCount;i++)!1!==(c=cols[i]).hideable&&this.colMenu.add(new Ext.menu.CheckItem({itemId:"col-"+i,text:c.header,checked:!c.hidden,hideOnClick:!1,disabled:!1===c.hideable}))},handleHdMenuClick:function(item){var index=this.hdCtxIndex,id=item.getItemId();return!1!==this.fireEvent("headermenuclick",this.columns[index],id,index)&&0<(index=id.substr(4))&&this.columns[index]&&this.setColumnVisible(index,!item.checked),!0},setColumnVisible:function(index,visible){this.columns[index].hidden=!visible,this.updateColumnWidths()},scrollToTop:function(){this.innerBody.dom.scrollTop=0,this.innerBody.dom.scrollLeft=0},syncScroll:function(){this.syncHeaderScroll();var mb=this.innerBody.dom;this.fireEvent("bodyscroll",mb.scrollLeft,mb.scrollTop)},syncHeaderScroll:function(){var mb=this.innerBody.dom;this.innerHd.dom.scrollLeft=mb.scrollLeft,this.innerHd.dom.scrollLeft=mb.scrollLeft},registerNode:function(n){Ext.ux.tree.TreeGrid.superclass.registerNode.call(this,n),n.uiProvider||n.isRoot||n.ui.isTreeGridNodeUI||(n.ui=new Ext.ux.tree.TreeGridNodeUI(n))}}),Ext.reg("treegrid",Ext.ux.tree.TreeGrid),Ext.ns("Ext.ux"),Ext.ux.GroupTabPanel=Ext.extend(Ext.TabPanel,{tabPosition:"left",alternateColor:!1,alternateCls:"x-grouptabs-panel-alt",defaultType:"grouptab",deferredRender:!1,activeGroup:null,initComponent:function(){Ext.ux.GroupTabPanel.superclass.initComponent.call(this),this.addEvents("beforegroupchange","groupchange"),this.elements="body,header",this.stripTarget="header",this.tabPosition="right"==this.tabPosition?"right":"left",this.addClass("x-grouptabs-panel"),this.tabStyle&&""!=this.tabStyle&&this.addClass("x-grouptabs-panel-"+this.tabStyle),this.alternateColor&&this.addClass(this.alternateCls),this.on("beforeadd",function(gtp,item,index){this.initGroup(item,index)}),this.items.each(function(item){item.on("tabchange",function(item){this.fireEvent("tabchange",this,item.activeTab)},this)},this)},initEvents:function(){this.mon(this.strip,"mousedown",this.onStripMouseDown,this)},onRender:function(ct,position){if(Ext.TabPanel.superclass.onRender.call(this,ct,position),this.plain){var pos="top"==this.tabPosition?"header":"footer";this[pos].addClass("x-tab-panel-"+pos+"-plain")}var st=this[this.stripTarget];this.stripWrap=st.createChild({cls:"x-tab-strip-wrap ",cn:{tag:"ul",cls:"x-grouptabs-strip x-grouptabs-tab-strip-"+this.tabPosition}});"bottom"==this.tabPosition&&this.stripWrap;if(this.strip=new Ext.Element(this.stripWrap.dom.firstChild),this.header.addClass("x-grouptabs-panel-header"),this.bwrap.addClass("x-grouptabs-bwrap"),this.body.addClass("x-tab-panel-body-"+this.tabPosition+" x-grouptabs-panel-body"),!this.groupTpl){var tt=new Ext.Template('<li class="{cls}" id="{id}">','<a class="x-grouptabs-expand" onclick="return false;"></a>','<a class="x-grouptabs-text {iconCls}" href="#" onclick="return false;">',"<span>{text}</span></a>","</li>");tt.disableFormats=!0,tt.compile(),Ext.ux.GroupTabPanel.prototype.groupTpl=tt}this.items.each(this.initGroup,this)},afterRender:function(){if(Ext.ux.GroupTabPanel.superclass.afterRender.call(this),this.tabJoint=Ext.fly(this.body.dom.parentNode).createChild({cls:"x-tab-joint"}),this.addClass("x-tab-panel-"+this.tabPosition),this.header.setWidth(this.tabWidth),void 0!==this.activeGroup){var group="object"==typeof this.activeGroup?this.activeGroup:this.items.get(this.activeGroup);delete this.activeGroup,this.setActiveGroup(group),group.setActiveTab(group.getMainItem())}},getGroupEl:Ext.TabPanel.prototype.getTabEl,findTargets:function(e){var item=null,itemEl=e.getTarget("li",this.strip);return itemEl&&(item=this.findById(itemEl.id.split(this.idDelimiter)[1])).disabled?{expand:null,item:null,el:null}:{expand:e.getTarget(".x-grouptabs-expand",this.strip),isGroup:!e.getTarget("ul.x-grouptabs-sub",this.strip),item:item,el:itemEl}},onStripMouseDown:function(e){if(0==e.button){e.preventDefault();var t=this.findTargets(e);t.expand?this.toggleGroup(t.el):t.item&&(t.isGroup?t.item.setActiveTab(t.item.getMainItem()):t.item.ownerCt.setActiveTab(t.item))}},expandGroup:function(groupEl){groupEl.isXType&&(groupEl=this.getGroupEl(groupEl)),Ext.fly(groupEl).addClass("x-grouptabs-expanded"),this.syncTabJoint()},toggleGroup:function(groupEl){groupEl.isXType&&(groupEl=this.getGroupEl(groupEl)),Ext.fly(groupEl).toggleClass("x-grouptabs-expanded"),this.syncTabJoint()},collapseGroup:function(groupEl){groupEl.isXType&&(groupEl=this.getGroupEl(groupEl)),Ext.fly(groupEl).removeClass("x-grouptabs-expanded"),this.syncTabJoint()},syncTabJoint:function(groupEl){if(this.tabJoint)if(groupEl=groupEl||this.getGroupEl(this.activeGroup)){this.tabJoint.setHeight(Ext.fly(groupEl).getHeight()-2);var y=Ext.isGecko2?0:1;"left"==this.tabPosition?this.tabJoint.alignTo(groupEl,"tl-tr",[-2,y]):this.tabJoint.alignTo(groupEl,"tr-tl",[1,y])}else this.tabJoint.hide()},getActiveTab:function(){return this.activeGroup&&this.activeGroup.getTabEl(this.activeGroup.activeTab)||null},onResize:function(){Ext.ux.GroupTabPanel.superclass.onResize.apply(this,arguments),this.syncTabJoint()},createCorner:function(el,pos){return Ext.fly(el).createChild({cls:"x-grouptabs-corner x-grouptabs-corner-"+pos})},initGroup:function(group,index){var before=this.strip.dom.childNodes[index],p=this.getTemplateArgs(group);0===index&&(p.cls+=" x-tab-first"),p.cls+=" x-grouptabs-main",p.text=group.getMainItem().title;var el=before?this.groupTpl.insertBefore(before,p):this.groupTpl.append(this.strip,p),tl=this.createCorner(el,"top-"+this.tabPosition),bl=this.createCorner(el,"bottom-"+this.tabPosition);group.tabEl=el,group.expanded&&this.expandGroup(el),(Ext.isIE6||Ext.isIE&&!Ext.isStrict)&&(bl.setLeft("-10px"),bl.setBottom("-5px"),tl.setLeft("-10px"),tl.setTop("-5px")),this.mon(group,{scope:this,changemainitem:this.onGroupChangeMainItem,beforetabchange:this.onGroupBeforeTabChange})},setActiveGroup:function(group){if(!(group=this.getComponent(group)))return!1;if(!this.rendered)return this.activeGroup=group,!0;if(this.activeGroup==group||!1===this.fireEvent("beforegroupchange",this,group,this.activeGroup))return!1;if(this.activeGroup){this.activeGroup.activeTab=null;var oldEl=this.getGroupEl(this.activeGroup);oldEl&&Ext.fly(oldEl).removeClass("x-grouptabs-strip-active")}var groupEl=this.getGroupEl(group);return Ext.fly(groupEl).addClass("x-grouptabs-strip-active"),this.activeGroup=group,this.stack.add(group),this.layout.setActiveItem(group),this.syncTabJoint(groupEl),this.fireEvent("groupchange",this,group),!0},onGroupBeforeTabChange:function(group,newTab,oldTab){if(group===this.activeGroup&&newTab===oldTab||this.strip.select(".x-grouptabs-sub > li.x-grouptabs-strip-active",!0).removeClass("x-grouptabs-strip-active"),this.expandGroup(this.getGroupEl(group)),group!==this.activeGroup)return this.setActiveGroup(group)},getFrameHeight:function(){var h=this.el.getFrameWidth("tb");return h+=(this.tbar?this.tbar.getHeight():0)+(this.bbar?this.bbar.getHeight():0)},adjustBodyWidth:function(w){return w-this.tabWidth}}),Ext.reg("grouptabpanel",Ext.ux.GroupTabPanel),Ext.ux.GroupTab=Ext.extend(Ext.Container,{mainItem:0,expanded:!0,deferredRender:!0,activeTab:null,idDelimiter:"__",headerAsText:!1,frame:!1,hideBorders:!0,initComponent:function(config){if(Ext.apply(this,config),this.frame=!1,Ext.ux.GroupTab.superclass.initComponent.call(this),this.addEvents("activate","deactivate","changemainitem","beforetabchange","tabchange"),this.setLayout(new Ext.layout.CardLayout({deferredRender:this.deferredRender})),this.stack||(this.stack=Ext.TabPanel.AccessStack()),this.initItems(),this.on("beforerender",function(){this.groupEl=this.ownerCt.getGroupEl(this)},this),this.on("add",this.onAdd,this,{target:this}),this.on("remove",this.onRemove,this,{target:this}),void 0!==this.mainItem){var item="object"==typeof this.mainItem?this.mainItem:this.items.get(this.mainItem);delete this.mainItem,this.setMainItem(item)}},setActiveTab:function(item){if(!(item=this.getComponent(item)))return!1;if(!this.rendered)return this.activeTab=item,!0;if(this.activeTab==item||!1===this.fireEvent("beforetabchange",this,item,this.activeTab))return!1;if(this.activeTab&&this.activeTab!=this.mainItem){var oldEl=this.getTabEl(this.activeTab);oldEl&&Ext.fly(oldEl).removeClass("x-grouptabs-strip-active")}var el=this.getTabEl(item);return Ext.fly(el).addClass("x-grouptabs-strip-active"),this.activeTab=item,this.stack.add(item),this.layout.setActiveItem(item),this.layoutOnTabChange&&item.doLayout&&item.doLayout(),this.scrolling&&this.scrollToTab(item,this.animScroll),this.fireEvent("tabchange",this,item),!0},getTabEl:function(item){return item==this.mainItem?this.groupEl:Ext.TabPanel.prototype.getTabEl.call(this,item)},onRender:function(ct,position){if(Ext.ux.GroupTab.superclass.onRender.call(this,ct,position),this.strip=Ext.fly(this.groupEl).createChild({tag:"ul",cls:"x-grouptabs-sub"}),this.tooltip=new Ext.ToolTip({target:this.groupEl,delegate:"a.x-grouptabs-text",trackMouse:!0,renderTo:document.body,listeners:{beforeshow:function(tip){var item=tip.triggerElement.parentNode===this.mainItem.tabEl?this.mainItem:this.findById(tip.triggerElement.parentNode.id.split(this.idDelimiter)[1]);if(!item.tabTip)return!1;tip.body.dom.innerHTML=item.tabTip},scope:this}}),!this.itemTpl){var tt=new Ext.Template('<li class="{cls}" id="{id}">','<a onclick="return false;" class="x-grouptabs-text {iconCls}">{text}</a>',"</li>");tt.disableFormats=!0,tt.compile(),Ext.ux.GroupTab.prototype.itemTpl=tt}this.items.each(this.initTab,this)},afterRender:function(){if(Ext.ux.GroupTab.superclass.afterRender.call(this),void 0!==this.activeTab){var item="object"==typeof this.activeTab?this.activeTab:this.items.get(this.activeTab);delete this.activeTab,this.setActiveTab(item)}},initTab:function(item,index){var before=this.strip.dom.childNodes[index],p=Ext.TabPanel.prototype.getTemplateArgs.call(this,item);item===this.mainItem&&(item.tabEl=this.groupEl,p.cls+=" x-grouptabs-main-item");var el=before?this.itemTpl.insertBefore(before,p):this.itemTpl.append(this.strip,p);item.tabEl=item.tabEl||el,item.on("disable",this.onItemDisabled,this),item.on("enable",this.onItemEnabled,this),item.on("titlechange",this.onItemTitleChanged,this),item.on("iconchange",this.onItemIconChanged,this),item.on("beforeshow",this.onBeforeShowItem,this)},setMainItem:function(item){(item=this.getComponent(item))&&!1!==this.fireEvent("changemainitem",this,item,this.mainItem)&&(this.mainItem=item)},getMainItem:function(){return this.mainItem||null},onBeforeShowItem:function(item){if(item!=this.activeTab)return this.setActiveTab(item),!1},onAdd:function(gt,item,index){this.rendered&&this.initTab.call(this,item,index)},onRemove:function(tp,item){if(Ext.destroy(Ext.get(this.getTabEl(item))),this.stack.remove(item),item.un("disable",this.onItemDisabled,this),item.un("enable",this.onItemEnabled,this),item.un("titlechange",this.onItemTitleChanged,this),item.un("iconchange",this.onItemIconChanged,this),item.un("beforeshow",this.onBeforeShowItem,this),item==this.activeTab){var next=this.stack.next();next?this.setActiveTab(next):0<this.items.getCount()?this.setActiveTab(0):this.activeTab=null}},onBeforeAdd:function(item){if(item.events?this.items.containsKey(item.getItemId())?item:null:this.items.get(item))return this.setActiveTab(item),!1;Ext.TabPanel.superclass.onBeforeAdd.apply(this,arguments);var es=item.elements;item.elements=es?es.replace(",header",""):es,item.border=!0===item.border},onItemDisabled:Ext.TabPanel.prototype.onItemDisabled,onItemEnabled:Ext.TabPanel.prototype.onItemEnabled,onItemTitleChanged:function(item){var el=this.getTabEl(item);el&&(Ext.fly(el).child("a.x-grouptabs-text",!0).innerHTML=item.title)},onItemIconChanged:function(item,iconCls,oldCls){var el=this.getTabEl(item);el&&Ext.fly(el).child("a.x-grouptabs-text").replaceClass(oldCls,iconCls)},beforeDestroy:function(){Ext.TabPanel.prototype.beforeDestroy.call(this),this.tooltip.destroy()}}),Ext.reg("grouptab",Ext.ux.GroupTab),Ext.ns("Ext.ux.form"),Ext.ux.form.MultiSelect=Ext.extend(Ext.form.Field,{ddReorder:!1,appendOnly:!1,width:100,height:100,displayField:0,valueField:1,allowBlank:!0,minSelections:0,maxSelections:Number.MAX_VALUE,blankText:Ext.form.TextField.prototype.blankText,minSelectionsText:"Minimum {0} item(s) required",maxSelectionsText:"Maximum {0} item(s) allowed",delimiter:",",defaultAutoCreate:{tag:"div"},initComponent:function(){Ext.ux.form.MultiSelect.superclass.initComponent.call(this),Ext.isArray(this.store)?(Ext.isArray(this.store[0])?(this.store=new Ext.data.ArrayStore({fields:["value","text"],data:this.store}),this.valueField="value"):(this.store=new Ext.data.ArrayStore({fields:["text"],data:this.store,expandData:!0}),this.valueField="text"),this.displayField="text"):this.store=Ext.StoreMgr.lookup(this.store),this.addEvents({dblclick:!0,click:!0,change:!0,drop:!0})},onRender:function(ct,position){Ext.ux.form.MultiSelect.superclass.onRender.call(this,ct,position);var fs=this.fs=new Ext.form.FieldSet({renderTo:this.el,title:this.legend,height:this.height,width:this.width,style:"padding:0;",tbar:this.tbar});fs.body.addClass("ux-mselect"),this.view=new Ext.ListView({multiSelect:!0,store:this.store,columns:[{header:"Value",width:1,dataIndex:this.displayField}],hideHeaders:!0}),fs.add(this.view),this.view.on("click",this.onViewClick,this),this.view.on("beforeclick",this.onViewBeforeClick,this),this.view.on("dblclick",this.onViewDblClick,this),this.hiddenName=this.name||Ext.id();var hiddenTag={tag:"input",type:"hidden",value:"",name:this.hiddenName};this.hiddenField=this.el.createChild(hiddenTag),this.hiddenField.dom.disabled=this.hiddenName!=this.name,fs.doLayout()},afterRender:function(){Ext.ux.form.MultiSelect.superclass.afterRender.call(this),!this.ddReorder||this.dragGroup||this.dropGroup||(this.dragGroup=this.dropGroup="MultiselectDD-"+Ext.id()),(this.draggable||this.dragGroup)&&(this.dragZone=new Ext.ux.form.MultiSelect.DragZone(this,{ddGroup:this.dragGroup})),(this.droppable||this.dropGroup)&&(this.dropZone=new Ext.ux.form.MultiSelect.DropZone(this,{ddGroup:this.dropGroup}))},onViewClick:function(vw,index,node,e){this.fireEvent("change",this,this.getValue(),this.hiddenField.dom.value),this.hiddenField.dom.value=this.getValue(),this.fireEvent("click",this,e),this.validate()},onViewBeforeClick:function(vw,index,node,e){if(this.disabled||this.readOnly)return!1},onViewDblClick:function(vw,index,node,e){return this.fireEvent("dblclick",vw,index,node,e)},getValue:function(valueField){var returnArray=[],selectionsArray=this.view.getSelectedIndexes();if(0==selectionsArray.length)return"";for(var i=0;i<selectionsArray.length;i++)returnArray.push(this.store.getAt(selectionsArray[i]).get(null!=valueField?valueField:this.valueField));return returnArray.join(this.delimiter)},setValue:function(values){var index,selections=[];if(this.view.clearSelections(),this.hiddenField.dom.value="",values&&""!=values){Ext.isArray(values)||(values=values.split(this.delimiter));for(var i=0;i<values.length;i++)index=this.view.store.indexOf(this.view.store.query(this.valueField,new RegExp("^"+values[i]+"$","i")).itemAt(0)),selections.push(index);this.view.select(selections),this.hiddenField.dom.value=this.getValue(),this.validate()}},reset:function(){this.setValue("")},getRawValue:function(valueField){var tmp=this.getValue(valueField);return tmp=tmp.length?tmp.split(this.delimiter):[]},setRawValue:function(values){setValue(values)},validateValue:function(value){return value.length<1?this.allowBlank?(this.clearInvalid(),!0):(this.markInvalid(this.blankText),!1):value.length<this.minSelections?(this.markInvalid(String.format(this.minSelectionsText,this.minSelections)),!1):!(value.length>this.maxSelections)||(this.markInvalid(String.format(this.maxSelectionsText,this.maxSelections)),!1)},disable:function(){this.disabled=!0,this.hiddenField.dom.disabled=!0,this.fs.disable()},enable:function(){this.disabled=!1,this.hiddenField.dom.disabled=!1,this.fs.enable()},destroy:function(){Ext.destroy(this.fs,this.dragZone,this.dropZone),Ext.ux.form.MultiSelect.superclass.destroy.call(this)}}),Ext.reg("multiselect",Ext.ux.form.MultiSelect),Ext.ux.Multiselect=Ext.ux.form.MultiSelect,Ext.ux.form.MultiSelect.DragZone=function(ms,config){this.ms=ms,this.view=ms.view;var dd,ddGroup=config.ddGroup||"MultiselectDD";Ext.isArray(ddGroup)?dd=ddGroup.shift():(dd=ddGroup,ddGroup=null),Ext.ux.form.MultiSelect.DragZone.superclass.constructor.call(this,this.ms.fs.body,{containerScroll:!0,ddGroup:dd}),this.setDraggable(ddGroup)},Ext.extend(Ext.ux.form.MultiSelect.DragZone,Ext.dd.DragZone,{onInitDrag:function(x,y){var el=Ext.get(this.dragData.ddel.cloneNode(!0));return this.proxy.update(el.dom),el.setWidth(el.child("em").getWidth()),this.onStartDrag(x,y),!0},collectSelection:function(data){data.repairXY=Ext.fly(this.view.getSelectedNodes()[0]).getXY();var i=0;this.view.store.each(function(rec){if(this.view.isSelected(i)){var n=this.view.getNode(i),dragNode=n.cloneNode(!0);dragNode.id=Ext.id(),data.ddel.appendChild(dragNode),data.records.push(this.view.store.getAt(i)),data.viewNodes.push(n)}i++},this)},onEndDrag:function(data,e){var d=Ext.get(this.dragData.ddel);d&&d.hasClass("multi-proxy")&&d.remove()},getDragData:function(e){var target=this.view.findItemFromChild(e.getTarget());if(target){if(this.view.isSelected(target)||e.ctrlKey||e.shiftKey||(this.view.select(target),this.ms.setValue(this.ms.getValue())),0==this.view.getSelectionCount()||e.ctrlKey||e.shiftKey)return!1;var dragData={sourceView:this.view,viewNodes:[],records:[]};if(1==this.view.getSelectionCount()){var i=this.view.getSelectedIndexes()[0],n=this.view.getNode(i);dragData.viewNodes.push(dragData.ddel=n),dragData.records.push(this.view.store.getAt(i)),dragData.repairXY=Ext.fly(n).getXY()}else dragData.ddel=document.createElement("div"),dragData.ddel.className="multi-proxy",this.collectSelection(dragData);return dragData}return!1},getRepairXY:function(e){return this.dragData.repairXY},setDraggable:function(ddGroup){ddGroup&&(Ext.isArray(ddGroup)?Ext.each(ddGroup,this.setDraggable,this):this.addToGroup(ddGroup))}}),Ext.ux.form.MultiSelect.DropZone=function(ms,config){this.ms=ms,this.view=ms.view;var dd,ddGroup=config.ddGroup||"MultiselectDD";Ext.isArray(ddGroup)?dd=ddGroup.shift():(dd=ddGroup,ddGroup=null),Ext.ux.form.MultiSelect.DropZone.superclass.constructor.call(this,this.ms.fs.body,{containerScroll:!0,ddGroup:dd}),this.setDroppable(ddGroup)},Ext.extend(Ext.ux.form.MultiSelect.DropZone,Ext.dd.DropZone,{getTargetFromEvent:function(e){return e.getTarget()},getDropPoint:function(e,n,dd){if(n==this.ms.fs.body.dom)return"below";var t=Ext.lib.Dom.getY(n),c=t+(t+n.offsetHeight-t)/2;return Ext.lib.Event.getPageY(e)<=c?"above":"below"},isValidDropPoint:function(pt,n,data){if(!data.viewNodes||1!=data.viewNodes.length)return!0;var d=data.viewNodes[0];return d!=n&&(("below"!=pt||n.nextSibling!=d)&&("above"!=pt||n.previousSibling!=d))},onNodeEnter:function(n,dd,e,data){return!1},onNodeOver:function(n,dd,e,data){var dragElClass=this.dropNotAllowed,pt=this.getDropPoint(e,n,dd);if(this.isValidDropPoint(pt,n,data)){if(this.ms.appendOnly)return"x-tree-drop-ok-below";var targetElClass;if(pt)targetElClass="above"==pt?(dragElClass=n.previousSibling?"x-tree-drop-ok-between":"x-tree-drop-ok-above","x-view-drag-insert-above"):(dragElClass=n.nextSibling?"x-tree-drop-ok-between":"x-tree-drop-ok-below","x-view-drag-insert-below"),this.lastInsertClass!=targetElClass&&(Ext.fly(n).replaceClass(this.lastInsertClass,targetElClass),this.lastInsertClass=targetElClass)}return dragElClass},onNodeOut:function(n,dd,e,data){this.removeDropIndicators(n)},onNodeDrop:function(n,dd,e,data){if(!1===this.ms.fireEvent("drop",this,n,dd,e,data))return!1;var pt=this.getDropPoint(e,n,dd);n!=this.ms.fs.body.dom&&(n=this.view.findItemFromChild(n)),this.ms.appendOnly?insertAt=this.view.store.getCount():(insertAt=n==this.ms.fs.body.dom?this.view.store.getCount()-1:this.view.indexOf(n),"below"==pt&&insertAt++);var dir=!1;if(data.sourceView==this.view){if("below"==pt?data.viewNodes[0]==n&&data.viewNodes.shift():data.viewNodes[data.viewNodes.length-1]==n&&data.viewNodes.pop(),!data.viewNodes.length)return!1;insertAt>this.view.store.indexOf(data.records[0])&&(dir="down",insertAt--)}for(var i=0;i<data.records.length;i++){var r=data.records[i];data.sourceView&&data.sourceView.store.remove(r),this.view.store.insert("down"==dir?insertAt:insertAt++,r);var si=this.view.store.sortInfo;si&&this.view.store.sort(si.field,si.direction)}return!0},removeDropIndicators:function(n){n&&(Ext.fly(n).removeClass(["x-view-drag-insert-above","x-view-drag-insert-left","x-view-drag-insert-right","x-view-drag-insert-below"]),this.lastInsertClass="_noclass")},setDroppable:function(ddGroup){ddGroup&&(Ext.isArray(ddGroup)?Ext.each(ddGroup,this.setDroppable,this):this.addToGroup(ddGroup))}}),Ext.ux.form.ItemSelector=Ext.extend(Ext.form.Field,{hideNavIcons:!1,imagePath:"",iconUp:"up2.gif",iconDown:"down2.gif",iconLeft:"left2.gif",iconRight:"right2.gif",iconTop:"top2.gif",iconBottom:"bottom2.gif",drawUpIcon:!1,drawDownIcon:!1,drawLeftIcon:!0,drawRightIcon:!0,drawTopIcon:!1,drawBotIcon:!1,delimiter:",",bodyStyle:null,border:!1,defaultAutoCreate:{tag:"div"},multiselects:null,initComponent:function(){Ext.ux.form.ItemSelector.superclass.initComponent.call(this),this.addEvents({rowdblclick:!0,change:!0,migrate_from_to:!0,migrate_to_from:!0})},onRender:function(ct,position){Ext.ux.form.ItemSelector.superclass.onRender.call(this,ct,position);var msConfig=[{legend:"Available",draggable:!0,droppable:!0,width:100,height:100},{legend:"Selected",droppable:!0,draggable:!0,width:100,height:100}];this.fromMultiselect=new Ext.ux.form.MultiSelect(Ext.applyIf(this.multiselects[0],msConfig[0])),this.fromMultiselect.on("dblclick",this.onRowDblClick,this),this.toMultiselect=new Ext.ux.form.MultiSelect(Ext.applyIf(this.multiselects[1],msConfig[1])),this.toMultiselect.on("dblclick",this.onRowDblClick,this);var p=new Ext.Panel({bodyStyle:this.bodyStyle,border:this.border,layout:"table",layoutConfig:{columns:3}});p.add(this.fromMultiselect);var icons=new Ext.Panel({header:!1});p.add(icons),p.add(this.toMultiselect),p.render(this.el),icons.el.down("."+icons.bwrapCls).remove(),""!=this.imagePath&&"/"!=this.imagePath.charAt(this.imagePath.length-1)&&(this.imagePath+="/"),this.iconUp=this.imagePath+(this.iconUp||"up2.gif"),this.iconDown=this.imagePath+(this.iconDown||"down2.gif"),this.iconLeft=this.imagePath+(this.iconLeft||"left2.gif"),this.iconRight=this.imagePath+(this.iconRight||"right2.gif"),this.iconTop=this.imagePath+(this.iconTop||"top2.gif"),this.iconBottom=this.imagePath+(this.iconBottom||"bottom2.gif");var el=icons.getEl();this.toTopIcon=el.createChild({tag:"img",src:this.iconTop,style:{cursor:"pointer",margin:"2px"}}),el.createChild({tag:"br"}),this.upIcon=el.createChild({tag:"img",src:this.iconUp,style:{cursor:"pointer",margin:"2px"}}),el.createChild({tag:"br"}),this.addIcon=el.createChild({tag:"img",src:this.iconRight,style:{cursor:"pointer",margin:"2px"}}),el.createChild({tag:"br"}),this.removeIcon=el.createChild({tag:"img",src:this.iconLeft,style:{cursor:"pointer",margin:"2px"}}),el.createChild({tag:"br"}),this.downIcon=el.createChild({tag:"img",src:this.iconDown,style:{cursor:"pointer",margin:"2px"}}),el.createChild({tag:"br"}),this.toBottomIcon=el.createChild({tag:"img",src:this.iconBottom,style:{cursor:"pointer",margin:"2px"}}),this.toTopIcon.on("click",this.toTop,this),this.upIcon.on("click",this.up,this),this.downIcon.on("click",this.down,this),this.toBottomIcon.on("click",this.toBottom,this),this.addIcon.on("click",this.fromTo,this),this.removeIcon.on("click",this.toFrom,this),this.drawUpIcon&&!this.hideNavIcons||(this.upIcon.dom.style.display="none"),this.drawDownIcon&&!this.hideNavIcons||(this.downIcon.dom.style.display="none"),this.drawLeftIcon&&!this.hideNavIcons||(this.addIcon.dom.style.display="none"),this.drawRightIcon&&!this.hideNavIcons||(this.removeIcon.dom.style.display="none"),this.drawTopIcon&&!this.hideNavIcons||(this.toTopIcon.dom.style.display="none"),this.drawBotIcon&&!this.hideNavIcons||(this.toBottomIcon.dom.style.display="none");p.body.first();this.el.setWidth(p.body.first().getWidth()),p.body.removeClass(),this.hiddenName=this.name;var hiddenTag={tag:"input",type:"hidden",value:"",name:this.name};this.hiddenField=this.el.createChild(hiddenTag)},doLayout:function(){this.rendered&&(this.fromMultiselect.fs.doLayout(),this.toMultiselect.fs.doLayout())},afterRender:function(){Ext.ux.form.ItemSelector.superclass.afterRender.call(this),this.toStore=this.toMultiselect.store,this.toStore.on("add",this.valueChanged,this),this.toStore.on("remove",this.valueChanged,this),this.toStore.on("load",this.valueChanged,this),this.valueChanged(this.toStore)},toTop:function(){var selectionsArray=this.toMultiselect.view.getSelectedIndexes(),records=[];if(0<selectionsArray.length){selectionsArray.sort();for(var i=0;i<selectionsArray.length;i++)record=this.toMultiselect.view.store.getAt(selectionsArray[i]),records.push(record);selectionsArray=[];for(i=records.length-1;-1<i;i--)record=records[i],this.toMultiselect.view.store.remove(record),this.toMultiselect.view.store.insert(0,record),selectionsArray.push(records.length-1-i)}this.toMultiselect.view.refresh(),this.toMultiselect.view.select(selectionsArray)},toBottom:function(){var selectionsArray=this.toMultiselect.view.getSelectedIndexes(),records=[];if(0<selectionsArray.length){selectionsArray.sort();for(var i=0;i<selectionsArray.length;i++)record=this.toMultiselect.view.store.getAt(selectionsArray[i]),records.push(record);selectionsArray=[];for(i=0;i<records.length;i++)record=records[i],this.toMultiselect.view.store.remove(record),this.toMultiselect.view.store.add(record),selectionsArray.push(this.toMultiselect.view.store.getCount()-(records.length-i))}this.toMultiselect.view.refresh(),this.toMultiselect.view.select(selectionsArray)},up:function(){var record=null,selectionsArray=this.toMultiselect.view.getSelectedIndexes();selectionsArray.sort();var newSelectionsArray=[];if(0<selectionsArray.length){for(var i=0;i<selectionsArray.length;i++)record=this.toMultiselect.view.store.getAt(selectionsArray[i]),0<=selectionsArray[i]-1&&(this.toMultiselect.view.store.remove(record),this.toMultiselect.view.store.insert(selectionsArray[i]-1,record),newSelectionsArray.push(selectionsArray[i]-1));this.toMultiselect.view.refresh(),this.toMultiselect.view.select(newSelectionsArray)}},down:function(){var record=null,selectionsArray=this.toMultiselect.view.getSelectedIndexes();selectionsArray.sort(),selectionsArray.reverse();var newSelectionsArray=[];if(0<selectionsArray.length){for(var i=0;i<selectionsArray.length;i++)record=this.toMultiselect.view.store.getAt(selectionsArray[i]),selectionsArray[i]+1<this.toMultiselect.view.store.getCount()&&(this.toMultiselect.view.store.remove(record),this.toMultiselect.view.store.insert(selectionsArray[i]+1,record),newSelectionsArray.push(selectionsArray[i]+1));this.toMultiselect.view.refresh(),this.toMultiselect.view.select(newSelectionsArray)}},fromTo:function(){var selectionsArray=this.fromMultiselect.view.getSelectedIndexes(),records=[];if(0<selectionsArray.length){for(var i=0;i<selectionsArray.length;i++)record=this.fromMultiselect.view.store.getAt(selectionsArray[i]),this.fireEvent("migrate_from_to",record.data),records.push(record);this.allowDup||(selectionsArray=[]);for(i=0;i<records.length;i++)if(record=records[i],this.allowDup){var x=new Ext.data.Record;record.id=x.id,x=void 0,this.toMultiselect.view.store.add(record)}else this.fromMultiselect.view.store.remove(record),this.toMultiselect.view.store.add(record),selectionsArray.push(this.toMultiselect.view.store.getCount()-1)}this.toMultiselect.view.refresh(),this.fromMultiselect.view.refresh();var si=this.toMultiselect.store.sortInfo;si&&this.toMultiselect.store.sort(si.field,si.direction),this.toMultiselect.view.select(selectionsArray)},toFrom:function(){var selectionsArray=this.toMultiselect.view.getSelectedIndexes(),records=[];if(0<selectionsArray.length){for(var i=0;i<selectionsArray.length;i++)record=this.toMultiselect.view.store.getAt(selectionsArray[i]),this.fireEvent("migrate_to_from",record.data),records.push(record);selectionsArray=[];for(i=0;i<records.length;i++)record=records[i],this.toMultiselect.view.store.remove(record),this.allowDup||(this.fromMultiselect.view.store.add(record),selectionsArray.push(this.fromMultiselect.view.store.getCount()-1))}this.fromMultiselect.view.refresh(),this.toMultiselect.view.refresh();var si=this.fromMultiselect.store.sortInfo;si&&this.fromMultiselect.store.sort(si.field,si.direction),this.fromMultiselect.view.select(selectionsArray)},valueChanged:function(store){for(var record=null,values=[],i=0;i<store.getCount();i++)record=store.getAt(i),values.push(record.get(this.toMultiselect.valueField));this.hiddenField.dom.value=values.join(this.delimiter),this.fireEvent("change",this,this.getValue(),this.hiddenField.dom.value)},getValue:function(){return this.hiddenField.dom.value},onRowDblClick:function(vw,index,node,e){return vw==this.toMultiselect.view?this.toFrom():vw==this.fromMultiselect.view&&this.fromTo(),this.fireEvent("rowdblclick",vw,index,node,e)},reset:function(){range=this.toMultiselect.store.getRange(),this.toMultiselect.store.removeAll(),this.fromMultiselect.store.add(range);var si=this.fromMultiselect.store.sortInfo;si&&this.fromMultiselect.store.sort(si.field,si.direction),this.valueChanged(this.toMultiselect.store)}}),Ext.reg("itemselector",Ext.ux.form.ItemSelector),Ext.ux.ItemSelector=Ext.ux.form.ItemSelector,Number.formatFunctions={count:0},Number.prototype.NaN="NaN",Number.prototype.posInfinity="Infinity",Number.prototype.negInfinity="-Infinity",Number.prototype.numberFormat=function(format,context){return isNaN(this)?Number.prototype.NaNstring:this==1/0?Number.prototype.posInfinity:this==-1/0?Number.prototype.negInfinity:(null==Number.formatFunctions[format]&&Number.createNewFormat(format),this[Number.formatFunctions[format]](context))},Number.createNewFormat=function(format){var funcName="format"+Number.formatFunctions.count++;Number.formatFunctions[format]=funcName;var code="Number.prototype."+funcName+" = function(context){\n",formats=format.split(";");switch(formats.length){case 1:code+=Number.createTerminalFormat(format);break;case 2:code+='return (this < 0) ? this.numberFormat("'+String.escape(formats[1])+'", 1) : this.numberFormat("'+String.escape(formats[0])+'", 2);';break;case 3:code+='return (this < 0) ? this.numberFormat("'+String.escape(formats[1])+'", 1) : ((this == 0) ? this.numberFormat("'+String.escape(formats[2])+'", 2) : this.numberFormat("'+String.escape(formats[0])+'", 3));';break;default:code+="throw 'Too many semicolons in format string';"}eval(code+"}")},Number.createTerminalFormat=function(format){if(0<format.length&&-1==format.search(/[0#?]/))return"return '"+String.escape(format)+"';\n";var code="var val = (context == null) ? new Number(this) : Math.abs(this);\n",thousands=!1,lodp=format,rodp="",ldigits=0,rdigits=0,scidigits=0,scishowsign=!1,sciletter="";(m=format.match(/\..*(e)([+\-]?)(0+)/i))&&(sciletter=m[1],scishowsign="+"==m[2],scidigits=m[3].length,format=format.replace(/(e)([+\-]?)(0+)/i,""));var m=format.match(/^([^.]*)\.(.*)$/);return m&&(lodp=m[1].replace(/\./g,""),rodp=m[2].replace(/\./g,"")),0<=format.indexOf("%")&&(code+="val *= 100;\n"),(m=lodp.match(/(,+)(?:$|[^0#?,])/))&&(code+="val /= "+Math.pow(1e3,m[1].length)+"\n;"),0<=lodp.search(/[0#?],[0#?]/)&&(thousands=!0),(m||thousands)&&(lodp=lodp.replace(/,/g,"")),(m=lodp.match(/0[0#?]*/))&&(ldigits=m[0].length),(m=rodp.match(/[0#?]*/))&&(rdigits=m[0].length),0<scidigits?code+="var sci = Number.toScientific(val,"+ldigits+", "+rdigits+", "+scidigits+", "+scishowsign+");\nvar arr = [sci.l, sci.r];\n":(format.indexOf(".")<0&&(code+="val = (val > 0) ? Math.ceil(val) : Math.floor(val);\n"),code+="var arr = val.round("+rdigits+").toFixed("+rdigits+").split('.');\n",code+="arr[0] = (val < 0 ? '-' : '') + String.leftPad((val < 0 ? arr[0].substring(1) : arr[0]), "+ldigits+", '0');\n"),thousands&&(code+="arr[0] = Number.addSeparators(arr[0]);\n"),code+="arr[0] = Number.injectIntoFormat(arr[0].reverse(), '"+String.escape(lodp.reverse())+"', true).reverse();\n",0<rdigits&&(code+="arr[1] = Number.injectIntoFormat(arr[1], '"+String.escape(rodp)+"', false);\n"),0<scidigits&&(code+="arr[1] = arr[1].replace(/(\\d{"+rdigits+"})/, '$1"+sciletter+"' + sci.s);\n"),code+"return arr.join('.');\n"},Number.toScientific=function(val,ldigits,rdigits,scidigits,showsign){var result={l:"",r:"",s:""},ex="",before=Math.abs(val).toFixed(ldigits+rdigits+1).trim("0"),after=Math.round(Number(before.replace(".","").replace(new RegExp("(\\d{"+(ldigits+rdigits)+"})(.*)"),"$1.$2"))).toFixed(0);return after.length>=ldigits?after=after.substring(0,ldigits)+"."+after.substring(ldigits):after+=".",result.s=before.indexOf(".")-before.search(/[1-9]/)-after.indexOf("."),result.s<0&&result.s++,result.l=(val<0?"-":"")+String.leftPad(after.substring(0,after.indexOf(".")),ldigits,"0"),result.r=after.substring(after.indexOf(".")+1),result.s<0?ex="-":showsign&&(ex="+"),result.s=ex+String.leftPad(Math.abs(result.s).toFixed(0),scidigits,"0"),result},Number.prototype.round=function(decimals){if(0<decimals){var m=this.toFixed(decimals+1).match(new RegExp("(-?\\d*)\\.(\\d{"+decimals+"})(\\d)\\d*$"));if(m&&m.length)return Number(m[1]+"."+String.leftPad(Math.round(m[2]+"."+m[3]),decimals,"0"))}return this},Number.injectIntoFormat=function(val,format,stuffExtras){var i=0,j=0,result="",revneg="-"==val.charAt(val.length-1);for(revneg&&(val=val.substring(0,val.length-1));i<format.length&&j<val.length&&0<=format.substring(i).search(/[0#?]/);)format.charAt(i).match(/[0#?]/)?("-"!=val.charAt(j)?result+=val.charAt(j):result+="0",j++):result+=format.charAt(i),++i;return revneg&&j==val.length&&(result+="-"),j<val.length&&(stuffExtras&&(result+=val.substring(j)),revneg&&(result+="-")),i<format.length&&(result+=format.substring(i)),result.replace(/#/g,"").replace(/\?/g," ")},Number.addSeparators=function(val){return val.reverse().replace(/(\d{3})/g,"$1,").reverse().replace(/^(-)?,/,"$1")},String.prototype.reverse=function(){for(var res="",i=this.length;0<i;--i)res+=this.charAt(i-1);return res},String.prototype.trim=function(ch){return ch||(ch=" "),this.replace(new RegExp("^"+ch+"+|"+ch+"+$","g"),"")},String.leftPad=function(val,size,ch){var result=String(val);for(null==ch&&(ch=" ");result.length<size;)result=ch+result;return result},String.escape=function(string){return string.replace(/('|\\)/g,"\\$1")},Ext.ns("Ext.ux.tree"),Ext.ux.tree.MultilineTreeNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{renderElements:function(n,a,targetNode,bulkRender){this.indentMarkup=n.parentNode?n.parentNode.ui.getChildIndent():"";var nel,cb="boolean"==typeof a.checked,href=a.href?a.href:Ext.isGecko?"":"#",buf=['<li class="x-tree-node '+(0==this.node.ownerTree.lines||this.node.ownerTree.useArrows?"x-tree-multiline-node-collapsed":"x-tree-multiline-node-expanded")+'">','<div ext:tree-node-id="',n.id,'" class="x-tree-node-el x-tree-node-leaf x-unselectable ',a.cls,'" unselectable="on">','<span class="x-tree-node-indent">',this.indentMarkup,"</span>",'<img src="',this.emptyIcon,'" class="x-tree-ec-icon x-tree-elbow" />','<img src="',a.icon||this.emptyIcon,'" class="x-tree-node-icon',a.icon?" x-tree-node-inline-icon":"",a.iconCls?" "+a.iconCls:"",'" unselectable="on" />',cb?'<input class="x-tree-node-cb" type="checkbox" '+(a.checked?'checked="checked" />':"/>"):"",'<a hidefocus="on" class="x-tree-node-anchor" href="',href,'" tabIndex="1" ',a.hrefTarget?' target="'+a.hrefTarget+'"':"",">",'<span unselectable="on">',n.text,"</span></a>"].join("");if(n.attributes.details)for(var x=0;x<n.attributes.details.length;x++)buf+=["<br/>",'<span class="x-tree-node-indent">',this.indentMarkup,"</span>",!n.nextSibling&&n.hasChildNodes()?'<span style="margin-left: 16px;"></span>':"",n.nextSibling?'<img src="'+this.emptyIcon+'" class="x-tree-ec-icon x-tree-elbow-line" />':"",n.hasChildNodes()?'<img src="'+this.emptyIcon+'" class="x-tree-ec-icon x-tree-elbow-line-multiline-expanded" style="margin-right: 2px;"/>':'<span style="margin-left: 16px;"></span>',n.isLast()&&!n.isExpandable()?'<span style="margin-left: 16px;"></span>':"",'<span class="x-tree-multiline-node-details">'+n.attributes.details[x]+"</span>"].join("");buf+=["</div>",'<ul class="x-tree-node-ct" style="display:none;"></ul>',"</li>"].join(""),!0!==bulkRender&&n.nextSibling&&(nel=n.nextSibling.ui.getEl())?this.wrap=Ext.DomHelper.insertHtml("beforeBegin",nel,buf):this.wrap=Ext.DomHelper.insertHtml("beforeEnd",targetNode,buf),this.elNode=this.wrap.childNodes[0],this.ctNode=this.wrap.childNodes[1];var cs=this.elNode.childNodes;this.indentNode=cs[0],this.ecNode=cs[1],this.iconNode=cs[2];var index=3;cb&&(this.checkbox=cs[3],this.checkbox.defaultChecked=this.checkbox.checked,index++),this.anchor=cs[index],this.textNode=cs[index].firstChild},updateExpandIcon:function(){if(this.rendered){var c1,c2,n=this.node,cls=n.isLast()?"x-tree-elbow-end":"x-tree-elbow";n.isExpandable()?(c2=n.expanded?(Ext.fly(this.elNode).replaceClass("x-tree-multiline-node-collapsed","x-tree-multiline-node-expanded"),cls+="-minus",c1="x-tree-node-collapsed","x-tree-node-expanded"):(Ext.fly(this.elNode).replaceClass("x-tree-multiline-node-expanded","x-tree-multiline-node-collapsed"),cls+="-plus",c1="x-tree-node-expanded","x-tree-node-collapsed"),this.wasLeaf&&(this.removeClass("x-tree-node-leaf"),this.wasLeaf=!1),this.c1==c1&&this.c2==c2||(Ext.fly(this.elNode).replaceClass(c1,c2),this.c1=c1,this.c2=c2)):this.wasLeaf||(Ext.fly(this.elNode).replaceClass("x-tree-node-expanded","x-tree-node-leaf"),delete this.c1,delete this.c2,this.wasLeaf=!0);var ecc="x-tree-ec-icon "+cls;this.ecc!=ecc&&(this.ecNode.className=ecc,this.ecc=ecc)}}}),Ext.ns("Ext.ux.window"),Ext.ux.window.MessageWindowGroup=function(config){config=config||{};var mgr=new Ext.WindowGroup;return mgr.positions=[],Ext.apply(mgr,config),mgr},Ext.ux.window.MessageWindowMgr=Ext.ux.window.MessageWindowGroup(),Ext.ux.window.MessageWindow=Ext.extend(Ext.Window,{autoDestroy:!0,autoHide:!0,autoHeight:!1,bodyStyle:"text-align:left;padding:10px;",buttonAlign:"center",cls:"x-notification",constrain:!0,constrainHeader:!0,draggable:!0,floating:!0,frame:!0,handleHelp:Ext.emptyFn,help:!0,hideFx:{delay:5e3},hoverCls:"msg-over",iconCls:"x-icon-information",minHeight:40,minWidth:200,msgs:[],monitorResize:!0,pinOnClick:!0,pinState:"unpin",plain:!1,resizable:!1,textHelp:"Get help",textPin:"Pin this to prevent closing",textUnpin:"Unpin this to close",initHidden:!0,initComponent:function(){Ext.apply(this,{collapsible:!1,footer:!1,minHeight:20,stateful:!1}),this.interval&&this.startAutoRefresh(),this.autoHide?this.task=new Ext.util.DelayedTask(this.hide,this):this.closable=!0,Ext.ux.window.MessageWindow.superclass.initComponent.call(this),this.on({hide:{scope:this,fn:function(){this.autoDestroy&&!1!==this.fireEvent("beforeclose",this)&&(this.fireEvent("close",this),this.destroy())}},mouseout:{scope:this,fn:this.onMouseout}}),this.addEvents("afterpin","afterunpin","click")},initEvents:function(){this.manager=this.manager||Ext.ux.window.MessageWindowMgr,Ext.ux.window.MessageWindow.superclass.initEvents.call(this)},toFront:function(){return this.manager.bringToFront(this)&&this.focusOnShow&&this.focus(),this},initTools:function(){this.addTool({id:"unpin",handler:this.handlePin,hidden:!0,qtip:this.textPin,scope:this}),this.addTool({id:"pin",handler:this.handleUnpin,hidden:!this.pinState||"unpin"===this.pinState,qtip:this.textUnpin,scope:this}),this.help&&this.addTool({id:"help",handler:this.handleHelp,qtip:this.textHelp,scope:this})},onRender:function(ct,position){Ext.ux.window.MessageWindow.superclass.onRender.call(this,ct,position),this.clip&&"bottom"==this.clip&&Ext.destroy(this.getEl().child("."+this.baseCls+"-bl")),this.el.addClassOnOver(this.hoverCls),Ext.fly(this.body.dom).on("click",this.handleClick,this)},togglePinState:function(event){this.tools.unpin.isVisible()?this.handlePin(event,this.tools.unpin,this):this.handleUnpin(event,this.tools.pin,this)},createElement:function(name,pnode){if(this.shiftHeader)switch(name){case"header":return;case"tbar":return Ext.ux.window.MessageWindow.superclass.createElement.call(this,"header",pnode),void Ext.ux.window.MessageWindow.superclass.createElement.call(this,name,pnode)}Ext.ux.window.MessageWindow.superclass.createElement.call(this,name,pnode)},focus:Ext.emptyFn,getState:function(){return Ext.apply(Ext.ux.window.MessageWindow.superclass.getState.call(this)||{},this.getBox())},handleClick:function(event){this.fireEvent("click",this,this.msg),this.togglePinState(event)},handlePin:function(event,toolEl,panel){toolEl.hide(),this.tools.pin.show(),this.cancelHiding(),this.fireEvent("afterpin",this)},handleUnpin:function(event,toolEl,panel){toolEl.hide(),this.tools.unpin.show(),this.hide(),this.fireEvent("afterunpin",this)},cancelHiding:function(){this.addClass("fixed"),this.autoHide&&"unpin"===this.pinState&&this.task.cancel(),this.tools.pin.show(),this.tools.unpin.hide()},animHide:function(){this.manager.positions.remove(this.pos);var w,fx=this.hideFx||{};if(fx.useProxy){w=this.proxy,this.proxy.setOpacity(.5),this.proxy.show();var tb=this.getBox(!1);this.proxy.setBox(tb),this.el.hide(),Ext.apply(fx,tb)}else w=this.el;switch(Ext.applyIf(fx,{block:!1,callback:this.afterHide,easing:"easeOut",remove:!0,scope:this}),fx.mode){case"none":break;case"slideIn":w[fx.mode]("b",fx);break;case"custom":Ext.callback(fx.callback,fx.scope,[this,w,fx]);break;case"standard":fx.duration=fx.duration||.25,fx.opacity=0,w.shift(fx);break;default:fx.duration=fx.duration||1,w.ghost("b",fx)}},afterShow:function(){Ext.ux.window.MessageWindow.superclass.afterShow.call(this),this.on("move",function(){this.manager.positions.remove(this.pos),this.cancelHiding()},this),this.autoHide&&"unpin"===this.pinState&&this.task.delay(this.hideFx.delay)},animShow:function(){if(!this.el.isVisible()||!this.el.hasClass(this.hoverCls)){1<this.msgs.length&&this.updateMsg();var w=this.el,fx=this.showFx||{};if(this.origin=this.origin||{},Ext.applyIf(this.origin,{el:Ext.getDoc(),increment:!0,pos:"br-br",offX:-20,offY:-20,spaY:5}),this.pos=0,this.origin.increment){for(;-1<this.manager.positions.indexOf(this.pos);)this.pos++;this.manager.positions.push(this.pos)}var y=this.origin.offY-(this.getSize().height+this.origin.spaY)*this.pos;this.setSize(this.width||this.minWidth,this.height||this.minHeight),y=this.origin.increment?this.origin.offY-(this.getSize().height+this.origin.spaY)*this.pos:0,w.alignTo(this.origin.el,this.origin.pos,[this.origin.offX,y]),w.fadeIn({duration:fx.duration||1,callback:this.afterShow,scope:this})}},onMouseout:function(){},positionPanel:function(el,x,y){if(x&&"number"==typeof x[1]&&(y=x[1],x=x[0]),el.pageX=x,el.pageY=y,void 0!==x&&void 0!==y){y<0&&(y=10);var p=el.translatePoints(x,y);return el.setLocation(p.left,p.top),el}},setMessage:function(msg){this.body.update(msg)},setTitle:function(title,iconCls){Ext.ux.window.MessageWindow.superclass.setTitle.call(this,title,iconCls||this.iconCls)},startAutoRefresh:function(update){update&&this.updateMsg(!0),this.autoRefreshProcId&&clearInterval(this.autoRefreshProcId),this.autoRefreshProcId=setInterval(this.animShow.createDelegate(this,[]),this.interval)},stopAutoRefresh:function(){this.autoRefreshProcId&&clearInterval(this.autoRefreshProcId)},updateMsg:function(msg){this.el&&!this.el.hasClass(this.hoverCls)&&(msg||(this.msgIndex=this.msgs[this.msgIndex+1]?this.msgIndex+1:0,this.msg=this.msgs[this.msgIndex]),this.body.update(this.msg.text))}}),Ext.reg("message-window",Ext.ux.window.MessageWindow),Date.now=Date.now||function(){return+new Date},Ext.namespace("CCR","CCR.xdmod","CCR.xdmod.ui","CCR.xdmod.ui.dd","XDMoD","XDMoD.constants","XDMoD.Module","XDMoD.regex","XDMoD.validator","XDMoD.utils","CCR.xdmod.reporting"),XDMoD.Tracking={sequence_index:0,timestamp:(new Date).getTime(),suppress_close_handler:!1},XDMoD.TrackEvent=function(category,action,details,suppress_close_handler){if(CCR.xdmod.features&&CCR.xdmod.features.xsede){details=details||"",suppress_close_handler=suppress_close_handler||!1,XDMoD.Tracking.suppress_close_handler=suppress_close_handler,"string"!=typeof details&&(details=JSON.stringify(details));var action_details=[],i=0;for(i=0;i<3;i++)action_details.push(0<details.substr(0,150).length?details.substr(0,150):"-"),details=details.substr(150);XDMoD.Tracking.sequence_index++;var current_date=new Date,current_timestamp=current_date.getTime(),timezone_offset=current_date.getTimezoneOffset(),time_delta=current_timestamp-XDMoD.Tracking.timestamp;ga("send","event",category,action,{dimension1:XDMoD.Tracking.sequence_index,dimension2:CCR.xdmod.ui.username,dimension3:current_timestamp.toString(),dimension4:XDMoD.REST.token,dimension5:(timezone_offset/60).toString(),dimension6:action_details[0],dimension7:action_details[1],dimension8:action_details[2],metric1:time_delta.toString()}),XDMoD.Tracking.timestamp=current_timestamp,_gaq.push(["_trackEvent",CCR.xdmod.ui.username,category,action])}},XDMoD.GeneralOperations={disableButton:function(button_id){Ext.getCmp(button_id).setDisabled(!0)},contactSuccessHandler:function(window_id){Ext.getCmp(window_id).hide(),CCR.xdmod.ui.generalMessage("Message Sent","Thank you for contacting us.<br>We will get back to you as soon as possible.",!0)}},XDMoD.GlobalToolbar={},XDMoD.GlobalToolbar.Logo={xtype:"tbtext",cls:"logo93",id:"logo",width:93,height:32,border:!1},XDMoD.GlobalToolbar.CustomCenterLogo={xtype:"tbtext",cls:"custom_center_logo",height:32,border:!1},XDMoD.GlobalToolbar.Profile={text:"My Profile",scale:"small",iconCls:"user_profile_16",id:"global-toolbar-profile",tooltip:"Profile Editor",handler:function(){XDMoD.TrackEvent("Portal","My Profile Button Clicked"),(new XDMoD.ProfileEditor).init()}},XDMoD.GlobalToolbar.Dashboard={text:"Dashboard",scale:"small",iconCls:"btn_dashboard",id:"global-toolbar-dashboard",tooltip:"Internal Dashboard",handler:function(){XDMoD.TrackEvent("Portal","Dashboard Button Clicked"),CCR.xdmod.initDashboard()}},XDMoD.GlobalToolbar.SignUp={text:"Sign Up",tooltip:"New User? Sign Up Today",scale:"small",iconCls:"signup_16",id:"global-toolbar-signup",handler:function(){XDMoD.TrackEvent("Portal","Sign Up Button Clicked"),CCR.xdmod.ui.actionSignUp()}},XDMoD.GlobalToolbar.About=function(tabPanel){return{text:"About",tooltip:"About",scale:"small",iconCls:"about_16",id:"global-toolbar-about",handler:function(){XDMoD.TrackEvent("Portal","About Button Clicked"),Ext.History.add("#main_tab_panel:about_xdmod?XDMoD")}}},XDMoD.GlobalToolbar.Roadmap={text:"Roadmap",iconCls:"roadmap",id:"global-toolbar-roadmap",handler:function(){Ext.History.add("#main_tab_panel:about_xdmod?Roadmap")}},XDMoD.GlobalToolbar.Contact=function(){var contactHandler=function(){switch(XDMoD.TrackEvent("Portal","Contact Us -> "+this.text+" Button Clicked"),this.text){case"Send Message":(new XDMoD.ContactDialog).show();break;case"Request Feature":(new XDMoD.WishlistDialog).show();break;case"Submit Support Request":(new XDMoD.SupportDialog).show()}};return{text:"Contact Us",tooltip:"Contact Us",scale:"small",iconCls:"contact_16",id:"global-toolbar-contact-us",menu:new Ext.menu.Menu({items:[{text:"Send Message",iconCls:"contact_16",id:"global-toolbar-contact-us-send-message",handler:contactHandler},{text:"Request Feature",iconCls:"bulb_16",id:"global-toolbar-contact-us-request-feature",handler:contactHandler},{text:"Submit Support Request",iconCls:"help_16",id:"global-toolbar-contact-us-submit-support-request",handler:contactHandler}]})}},XDMoD.GlobalToolbar.Help=function(tabPanel){var menuItems=[{text:"User Manual",iconCls:"user_manual_16",id:"global-toolbar-help-user-manual",handler:function(){if(void 0!==tabPanel){var searchTerms=tabPanel.getActiveTab().userManualSectionName;XDMoD.TrackEvent("Portal","Help -> User Manual Button Clicked with "+searchTerms||"no tab selected"),window.open("user_manual.php?t="+encodeURIComponent(searchTerms))}else window.open("user_manual.php")}},{text:"YouTube Channel",iconCls:"youtube_16",id:"global-toolbar-help-youtube",handler:function(){XDMoD.TrackEvent("Portal","Help -> YouTube Channel Button Clicked"),window.open("https://www.youtube.com/channel/UChm_AbEcBryCdIfebN5Kkrg")}}];return CCR.xdmod.features.xsede&&menuItems.splice(1,0,{text:"FAQ",iconCls:"help_16",id:"global-toolbar-help-faq",handler:function(){XDMoD.TrackEvent("Portal","Help -> FAQ Button Clicked"),window.open("faq")}}),{text:"Help",tooltip:"Help",scale:"small",id:"help_button",iconCls:"help_16",menu:new Ext.menu.Menu({items:menuItems})}},XDMoD.constants.maxFirstNameLength=50,XDMoD.constants.maxLastNameLength=50,XDMoD.constants.maxNameLength=XDMoD.constants.maxFirstNameLength+XDMoD.constants.maxLastNameLength,XDMoD.constants.minEmailLength=6,XDMoD.constants.maxEmailLength=200,XDMoD.constants.minUsernameLength=5,XDMoD.constants.maxUsernameLength=200,XDMoD.constants.minPasswordLength=5,XDMoD.constants.maxPasswordLength=20,XDMoD.constants.maxReportNameLength=50,XDMoD.constants.maxReportTitleLength=50,XDMoD.constants.maxReportHeaderLength=40,XDMoD.constants.maxReportFooterLength=40,XDMoD.constants.maxUserPositionLength=200,XDMoD.constants.maxUserOrganizationLength=200,XDMoD.regex.noReservedCharacters=/^[^$^#<>":\/\\!]*$/,XDMoD.regex.usernameCharacters=/^[a-zA-Z0-9@.\-_+\']*$/,XDMoD.validator.email=function(email){return Ext.form.VTypes.email(email)||"You must specify a valid email address. (e.g. user@domain.com)"},XDMoD.utils.trimOnBlur=function(thisField){thisField.setValue(Ext.util.Format.trim(thisField.getValue()))},XDMoD.utils.syncWindowShadow=function(thisComponent){thisComponent.bubble(function(currentComponent){return!(currentComponent instanceof Ext.Window)||(currentComponent.syncShadow(),!1)})},XDMoD.utils.format={humanTime:function(seconds){var s=seconds,plural=function(val,unit,ignorezero){return 1<val?val+" "+unit+"s ":0===val?ignorezero?"":val+" "+unit+"s ":val+" "+unit+" "},days=Math.floor(s/86400);if(0<days)return s%=86400,plural(days,"day",0)+plural((s/3600).toFixed(1),"hour",1);var hours=Math.floor(s/3600);if(0<hours)return s%=3600,plural(hours,"hour",0)+plural((s/60).toFixed(1),"minute",1);var minutes=Math.floor(s/60);return 0<minutes?plural(minutes,"minute",0)+plural(s%60,"second",1):plural(s,"second",0)},convertToSiPrefix:function(input,units,precision){if(isNaN(input))return input;var value=Number(Number(input).toPrecision(precision));return 1e12<=value?value/1e12+" T"+units:1e9<=value?value/1e9+" G"+units:1e6<=value?value/1e6+" M"+units:1e3<=value?value/1e3+" k"+units:value+" "+units},convertToBinaryPrefix:function(val,units,precision){if(isNaN(val))return val;return 1099511627776<val?(val/1099511627776).toPrecision(precision)+" Ti"+units:1073741824<val?(val/1073741824).toPrecision(precision)+" Gi"+units:1048576<val?(val/1048576).toPrecision(precision)+" Mi"+units:1024<val?(val/1024).toPrecision(precision)+" Ki"+units:Number(val).toPrecision(precision)+" "+units}},Ext.Ajax.timeout=864e5,CCR.xdmod.ui.tokenDelimiter=":",CCR.xdmod.ui.minChartScale=.5,CCR.xdmod.ui.maxChartScale=5,CCR.xdmod.ui.deltaChartScale=.2,CCR.xdmod.ui.thumbChartScale=.76,CCR.xdmod.ui.thumbAspect=.6,CCR.xdmod.ui.thumbPadding=15,CCR.xdmod.ui.scrollBarWidth=15,CCR.xdmod.ui.deltaThumbChartScale=.3,CCR.xdmod.ui.highResScale=2.594594594594595,CCR.xdmod.ui.hd1280Scale=1.72972972972973,CCR.xdmod.ui.hd1920cale=2.594594594594595,CCR.xdmod.ui.print300dpiScale=4.662162162162162,CCR.xdmod.ui.smallChartScale=.61,CCR.xdmod.ui.thumbWidth=400,CCR.xdmod.ui.thumbHeight=CCR.xdmod.ui.thumbWidth*CCR.xdmod.ui.thumbAspect,CCR.xdmod.SSO_USER_TYPE=5,CCR.xdmod.UserTypes={ProgramOfficer:"po",CenterDirector:"cd",CenterStaff:"cs",CampusChampion:"cc",PrincipalInvestigator:"pi",User:"usr"},CCR.xdmod.reporting.dirtyState=!1,CCR.xdmod.catalog={metric_explorer:{},report_generator:{}},CCR.xdmod.ui.invertColor=function(hexTripletColor){var color=hexTripletColor;return color=parseInt(color,16),color=("000000"+(color=(color^=16777215).toString(16))).slice(-6)},CCR.xdmod.ui.login_prompt=null,CCR.xdmod.ui.createUserManualLink=function(tags){return'<div style="background-image: url(\'gui/images/user_manual.png\'); background-repeat: no-repeat; height: 36px; padding-left: 40px; padding-top: 10px">For more information, please refer to the <a href="javascript:void(0)" onClick="CCR.xdmod.ui.userManualNav(\''+tags+"')\">User Manual</a></div>"},CCR.xdmod.ui.userManualNav=function(tags){window.open("user_manual.php?t="+tags)},CCR.xdmod.ui.shortTitle=function(name){return 50<name.length?name.substr(0,47)+"...":name},CCR.xdmod.ui.randomBuffer=function(){return 300*Math.random()},CCR.ucfirst=function(str){return str.toLowerCase().replace(/\b([a-z])/gi,function(c){return c.toUpperCase()})},CCR.xdmod.enumAssignedResourceProviders=function(){for(var assignedResourceProviders={},x=0;x<CCR.xdmod.ui.allRoles.length;x++){var role_data=CCR.xdmod.ui.allRoles[x].param_value.split(":"),role_id=role_data[0];role_id!=CCR.xdmod.UserTypes.CenterDirector&&role_id!=CCR.xdmod.UserTypes.CenterStaff||(assignedResourceProviders[role_data[1]]=CCR.xdmod.ui.allRoles[x].description.split(" - ")[1])}return assignedResourceProviders},CCR.xdmod.ui.createMenuCategory=function(text){return new Ext.menu.TextItem({html:'<div style="height: 20px; vertical-align: middle; background-color: #ddd; font-weight: bold"><span style="color: #00f; position: relative; top: 4px; left: 3px">'+text+"</span></div>"})},CCR.safelyDecodeJSONResponse=function(response){var responseObject=null;try{responseObject=Ext.decode(response.responseText)}catch(e){}return responseObject},CCR.checkDecodedJSONResponseSuccess=function(responseObject){var responseSuccessful=!1;try{responseSuccessful=!0===responseObject.success}catch(e){}return responseSuccessful},CCR.checkJSONResponseSuccess=function(response){return CCR.checkDecodedJSONResponseSuccess(CCR.safelyDecodeJSONResponse(response))},CCR.submitHiddenFormImmediately=function(url,method,params){var temp=document.createElement("form");for(var param in temp.action=url,temp.method=method,temp.style.display="none",params)if(params.hasOwnProperty(param)){var opt=document.createElement("textarea");opt.name=param,opt.value=params[param],temp.appendChild(opt)}document.body.appendChild(temp),temp.submit(),document.body.removeChild(temp)},CCR.invokePostImmediately=function(url,params){CCR.submitHiddenFormImmediately(url,"POST",params)},CCR.submitHiddenForm=function(url,method,params,options){var checkDashboardUser=void 0!==(options=options||{}).checkDashboardUser&&options.checkDashboardUser,checkUrlPrefix=checkDashboardUser?"../":"";Ext.Ajax.request({url:checkUrlPrefix+"controllers/user_auth.php",params:{operation:"session_check",public_user:void 0!==params.public_user&&params.public_user,session_user_id_type:checkDashboardUser?"Dashboard":""},callback:function(options,success,response){success&&(success=CCR.checkJSONResponseSuccess(response)),success?CCR.submitHiddenFormImmediately(url,method,params):CCR.xdmod.ui.presentFailureResponse(response)}})},CCR.invokePost=function(url,params,options){CCR.submitHiddenForm(url,"POST",params,options)},CCR.xdmod.ui.AssistPanel=Ext.extend(Ext.Panel,{layout:"fit",margins:"2 2 2 0",bodyStyle:{overflow:"auto"},initComponent:function(){this.html='<div class="x-grid-empty">',this.headerText&&(this.html+='<b style="font-size: 150%">'+this.headerText+"</b><br/><br/>"),this.subHeaderText&&(this.html+=this.subHeaderText+"<br/><br/>"),this.graphic&&(this.html+='<img src="'+this.graphic+'"><br/><br/>'),this.userManualRef&&(this.html+=CCR.xdmod.ui.createUserManualLink(this.userManualRef)),this.html+="</div>",CCR.xdmod.ui.AssistPanel.superclass.initComponent.call(this)}}),CCR.WebPanel=Ext.extend(Ext.Window,{onRender:function(){this.bodyCfg={tag:"iframe",src:this.src,cls:this.bodyCls,style:{border:"0px none"}},this.frameid&&(this.bodyCfg.id=this.frameid),CCR.WebPanel.superclass.onRender.apply(this,arguments)},initComponent:function(){CCR.WebPanel.superclass.initComponent.call(this)}}),CCR.xdmod.sponsor_message="This work was sponsored by NSF under grant number OCI 1025159";var toggle_about_footer=function(o){o.innerHTML=o.innerHTML==CCR.xdmod.version?CCR.xdmod.sponsor_message:CCR.xdmod.version};CCR.BrowserWindow=Ext.extend(Ext.Window,{modal:!0,resizable:!1,closeAction:"hide",versionStamp:!1,onRender:function(){this.bodyCfg={tag:"iframe",src:this.src,cls:this.bodyCls,style:{border:"0px none"}},this.frameid&&(this.bodyCfg.id=this.frameid),CCR.BrowserWindow.superclass.onRender.apply(this,arguments)},initComponent:function(){var self=this,window_items=[];self.nbutton&&window_items.push(self.nbutton),self.versionStamp&&window_items.push({xtype:"tbtext",html:'<span style="color: #000; cursor: default" onClick="toggle_about_footer(this)">'+CCR.xdmod.sponsor_message+"</span>"}),window_items.push("->"),window_items.push(new Ext.Button({text:"Close",iconCls:"general_btn_close",handler:function(){"close"==self.closeAction?self.close():self.hide()}})),Ext.apply(this,{bbar:{items:window_items}}),CCR.BrowserWindow.superclass.initComponent.call(this)}});var logoutCallback=function(){location.href="index.php"};CCR.xdmod.ui.actionLogout=function(){XDMoD.TrackEvent("Portal","logout link clicked"),XDMoD.REST.Call({action:"auth/logout",method:"POST",callback:logoutCallback})};var presentLoginResponse=function(message,status,target,cb){var messageColor=status?"#080":"#f00",targetCmp=Ext.getCmp(target);targetCmp.update('<p style="color:'+messageColor+'">'+message+"</p>"),targetCmp.show(),cb&&cb()},clearLoginResponse=function(target){Ext.getCmp(target).hide()},presentContactFormViaLoginError=function(){XDMoD.TrackEvent("Login Window","Clicked on Conact Us"),CCR.xdmod.ui.login_prompt.close(),(new XDMoD.ContactDialog).show()},presentSignUpViaLoginPrompt=function(){XDMoD.TrackEvent("Login Window","Clicked on Sign Up button"),CCR.xdmod.ui.login_prompt.close(),CCR.xdmod.ui.actionSignUp()};CCR.xdmod.ui.actionSignUp=function(){(new XDMoD.SignUpDialog).show()},CCR.xdmod.ui.FadeInWindow=Ext.extend(Ext.Window,{animateTarget:!0,setAnimateTarget:Ext.emptyFn,animShow:function(){this.el.fadeIn({duration:.55,callback:this.afterShow.createDelegate(this,[!0],!1),scope:this})},animHide:function(){this.el.shadow&&this.el.shadow.hide(),this.el.fadeOut({duration:.55,callback:this.afterHide,scope:this})}}),CCR.xdmod.ui.actionLogin=function(config,animateTarget){XDMoD.TrackEvent("Portal","Sign In link clicked"),XDMoD.referer=document.location.hash;var txtLoginUsername=new Ext.form.TextField({width:184,height:22,id:"txt_login_username",enableKeyEvents:!0,name:"username",fieldLabel:"Username"}),txtLoginPassword=new Ext.form.TextField({width:184,height:22,enableKeyEvents:!0,id:"txt_login_password",name:"password",inputType:"password",fieldLabel:"Password"}),loginItems=[],accountName=CCR.xdmod.SSOLoginLink&&"Single Sign On"!==CCR.xdmod.SSOLoginLink.organization.en?CCR.xdmod.SSOLoginLink.organization.en:CCR.xdmod.org_name,signInWithLocalAccount=function(){if(0!==txtLoginUsername.getValue().length)if(0!==txtLoginPassword.getValue().length){var restArgs={username:txtLoginUsername.getValue(),password:txtLoginPassword.getValue()};Ext.Ajax.request({url:"/rest/v0.1/auth/login",method:"POST",params:restArgs,callback:function(options,success,response){var decodedResponse,data=CCR.safelyDecodeJSONResponse(response);if(success&&(decodedResponse=CCR.checkDecodedJSONResponseSuccess(data),Ext.isGecko&&Ext.getCmp("local_login_submit").fireEvent("click")),decodedResponse)XDMoD.TrackEvent("Login Window","Successful login",txtLoginUsername.getValue()),XDMoD.REST.token=data.results.token,presentLoginResponse("Welcome, "+Ext.util.Format.htmlEncode(data.results.name)+".",!0,"login_response"),parent.location.href="../../index.php"+parent.XDMoD.referer,parent.location.hash=parent.XDMoD.referer,parent.location.reload();else{XDMoD.TrackEvent("Login Window","Failed login",txtLoginUsername.getValue());var message=data.message||"There was an error encountered while logging in. Please try again.";message=(message=Ext.util.Format.htmlEncode(message)).replace(CCR.xdmod.support_email,'<br /><a href="mailto:'+CCR.xdmod.support_email+'?subject=Problem Logging In">'+CCR.xdmod.support_email+"</a>"),presentLoginResponse(message,!1,"login_response",function(){txtLoginPassword.focus(!0)})}}})}else presentLoginResponse("You must specify a password.",!1,"login_response",function(){txtLoginPassword.focus()});else presentLoginResponse("You must specify a username.",!1,"login_response",function(){txtLoginUsername.focus()})},localLoginItems=[txtLoginUsername,txtLoginPassword,{xtype:"tbtext",id:"login_response"},{xtype:"field",id:"local_login_submit",autoCreate:{tag:"input",type:"submit"},hidden:!0},{xtype:"container",anchor:"form",autoWidth:!0,height:38,layout:{type:"hbox"},items:[{xtype:"button",width:75,height:22,text:"Sign in",id:"btn_sign_in",handler:signInWithLocalAccount},{xtype:"container",autoEl:"div",autoWidth:!0,flex:2,height:38,id:"assistancePrompt",items:[{xtype:"tbtext",html:'<a href="javascript:CCR.xdmod.ui.forgot_password()">Forgot your password?</a>',id:"forgot_password_link"},{xtype:"tbtext",html:'<a href="javascript:presentSignUpViaLoginPrompt()">Don\'t have an account?</a>',id:"sign_up_link"}]}]}],SSOLoginFrm=CCR.xdmod.isSSOConfigured?new Ext.form.FormPanel({id:"sso_login_form",title:"Sign in with "+accountName+":",width:321,items:[{xtype:"button",text:'<img src="'+CCR.xdmod.SSOLoginLink.icon+'" alt="Login here."></img>',anchor:"100%",id:"SSOLoginLink",handler:function(){Ext.Ajax.request({url:"/rest/auth/idpredirect",method:"GET",params:{returnTo:"/gui/general/login.php"+document.location.hash},success:function(response){var destination=Ext.decode(response.responseText);document.location=destination},failure:function(response,opts){var message="Please contact the XDMoD administrator.";if(response.responseText){var decoded=Ext.decode(response.responseText);decoded.message&&(message=decoded.message+"<br />"+message)}Ext.Msg.alert("Error "+response.status+" "+response.statusText,message)}})}}]}):null,localLoginFrm=new Ext.form.FormPanel({id:"local_login_form",title:"Sign in with a local XDMoD account:",items:localLoginItems,keys:[{key:Ext.EventObject.ENTER,fn:signInWithLocalAccount}],listeners:{render:function(p){p.getKeyMap()}}});CCR.xdmod.isSSOConfigured&&(loginItems.push(SSOLoginFrm),CCR.xdmod.SSOShowLocalLogin||(localLoginFrm.collapsible=!0,localLoginFrm.collapsed=!0,localLoginFrm.titleCollapse=!0,localLoginFrm.title='<span style="cursor:pointer;">'+localLoginFrm.title+"</span>")),loginItems.push(localLoginFrm),CCR.xdmod.ui.login_prompt=new Ext.Window({title:"Sign into XDMoD",autoWidth:!0,autoHeight:!0,modal:!0,animate:!0,resizable:!1,draggable:!1,items:loginItems,padding:15,listeners:{close:function(){XDMoD.TrackEvent("Login Window","Closed Window")}}}),CCR.xdmod.ui.login_prompt.show(animateTarget),CCR.xdmod.ui.login_prompt.center()},CCR.xdmod.ui.forgot_password=function(){var txtEmailAddress=new Ext.form.TextField({emptyText:"yourname@example.edu",width:184,height:22,enableKeyEvents:!0,id:"txt_email_address",name:"fpemail",fieldLabel:"Email Address"}),panelItems=[txtEmailAddress,new Ext.Button({text:"Reset My Password",autoHeight:!0,handler:function(){var objParams={operation:"pass_reset",email:txtEmailAddress.getValue()};(new Ext.data.Connection).request({url:"/controllers/user_auth.php",params:objParams,method:"POST",callback:function(options,success,response){if(success)switch(Ext.util.JSON.decode(response.responseText).status){case"invalid_email_address":presentLoginResponse("A valid e-mail address must be specified.",!1,"reset_response");break;case"no_user_mapping":presentLoginResponse("No XDMoD user could be associated with this e-mail address. Please contact your system administrator.",!1,"reset_response");break;case"multiple_accounts_mapped":presentLoginResponse("Multiple XDMoD accounts are associated with this e-mail address. Please contact your system administrator.",!1,"reset_response");break;case"success":presentLoginResponse("Password reset instructions have been sent to this e-mail address.",!0,"reset_response");break;default:presentLoginResponse("An unknown error occured.",!1,"reset_response")}else presentLoginResponse("There was a problem connecting to the portal service provider.",!1,"reset_response");txtEmailAddress.focus()}})}}),{xtype:"tbtext",id:"reset_response"}],forgotPasswordFrm=new Ext.form.FormPanel({id:"forgot_password_form",items:panelItems,title:"To reset password, enter the address associated with your account."});CCR.xdmod.ui.forgot_password_prompt=new Ext.Window({title:"Forgot your password?",autoWidth:!0,autoHeight:!0,modal:!0,draggable:!1,resizable:!1,listeners:{close:function(){XDMoD.TrackEvent("Forgot Password Window","Closed Window")}},items:forgotPasswordFrm}),CCR.xdmod.ui.forgot_password_prompt.show(),CCR.xdmod.ui.forgot_password_prompt.center()},CCR.xdmod.ControllerBase="controllers/",CCR.xdmod.ControllerUIDataStoreHandler=function(activeStore){CCR.xdmod.ControllerResponseHandler('{"status" : "'+activeStore.reader.jsonData.status+'"}',null)},CCR.xdmod.ControllerResponseHandler=function(responseText,targetStore){var responseData=Ext.decode(responseText);return"not_logged_in"==responseData.status?((new XDMoD.LoginPrompt).show(),!1):null==targetStore||void targetStore.loadData(responseData)},CCR.xdmod.ControllerProxy=function(targetStore,parameters){null!=parameters.operation?Ext.Ajax.request({url:targetStore.url,method:"POST",params:parameters,timeout:6e4,async:!1,success:function(response){CCR.xdmod.ControllerResponseHandler(response.responseText,targetStore)},failure:function(){Ext.MessageBox.alert("Error","There has been a request error")}}):Ext.MessageBox.alert("Controller Proxy","An operation must be specified")},CCR.xdmod.initDashboard=function(){var dashboardWindow=window.open("","_blank");dashboardWindow.focus(),Ext.Ajax.request({url:"controllers/dashboard_launch.php",method:"POST",callback:function(options,success,response){success&&CCR.checkJSONResponseSuccess(response)?dashboardWindow.location.href="internal_dashboard":(dashboardWindow.close(),window.focus(),CCR.xdmod.ui.presentFailureResponse(response,{title:"XDMoD Dashboard"}))}})},CCR.xdmod.ui.generalMessage=function(msg_title,msg,success,show_delay){show_delay=show_delay||2e3;var styleColor=success?"#080":"#f00",x_offset=(Ext.getBody().getViewSize().width-300)/2*-1,y_offset=(Ext.getBody().getViewSize().height-40)/2*-1;new Ext.ux.window.MessageWindow({title:msg_title,width:300,html:'<b style="color: '+styleColor+'">'+msg+"</b>"||"No information available",origin:{offY:y_offset,offX:x_offset},iconCls:"",autoHeight:!0,draggable:!1,help:!1,hideFx:{delay:show_delay,mode:"standard"}}).show(Ext.getDoc())},CCR.xdmod.ui.userManagementMessage=function(msg,success){var styleColor=success?"#080":"#f00",x_offset=(Ext.getBody().getViewSize().width-300)/2*-1,y_offset=(Ext.getBody().getViewSize().height-40)/2*-1;new Ext.ux.window.MessageWindow({title:"User Management",width:300,html:'<b style="color: '+styleColor+'">'+msg+"</b>"||"No information available",origin:{offY:y_offset,offX:x_offset},iconCls:"user_management_message_prompt",autoHeight:!0,draggable:!1,help:!1,hideFx:{delay:2e3,mode:"standard"}}).show(Ext.getDoc())},CCR.xdmod.ui.reportGeneratorMessage=function(title,msg,success,callback){var styleColor=success?"#080":"#f00",x_offset=(Ext.getBody().getViewSize().width-200)/2*-1,y_offset=(Ext.getBody().getViewSize().height-40)/2*-1;new Ext.ux.window.MessageWindow({title:title||"You have clicked:",id:"report_generator_message",html:'<b style="color: '+styleColor+'">'+msg+"</b>"||"No information available",origin:{offY:y_offset,offX:x_offset},iconCls:"report_generator_message_prompt",autoHeight:!0,draggable:!1,help:!1,hideFx:{delay:3e3,mode:"standard"},listeners:{hide:function(){callback&&callback()}}}).show(Ext.getDoc())},CCR.xdmod.ui.toastMessage=function(title,msg){CCR.xdmod.ui.isDeveloper&&new Ext.ux.window.MessageWindow({title:title||"You have clicked:",html:msg||"No information available",origin:{offY:-5,offX:-5},autoHeight:!0,iconCls:"load_time_message_prompt",help:!1,hideFx:{delay:1e3,mode:"standard"}}).show(Ext.getDoc())},CCR.xdmod.ui.extractErrorMessageFromResponse=function(response,options){(options=void 0===options?{}:options).htmlEncode=void 0===options.htmlEncode||options.htmlEncode;var responseMessage=null,responseObject=response;try{response.responseText&&(responseObject=Ext.decode(response.responseText))}catch(e){}try{responseMessage=responseObject.message||responseObject.status||responseMessage}catch(e){}return options.htmlEncode&&(responseMessage=Ext.util.Format.htmlEncode(responseMessage)),responseMessage},CCR.xdmod.ui.presentFailureResponse=function(response,options){var title=void 0===(options=void 0===options?{}:options).title?"Error":options.title;if(!response.exceptionHandledGlobally){var outputMessage,responseMessage=CCR.xdmod.ui.extractErrorMessageFromResponse(response);null===responseMessage&&(responseMessage="Unknown Error"),outputMessage=options.wrapperMessage?options.wrapperMessage+" ("+responseMessage+")":responseMessage,Ext.MessageBox.alert(title,outputMessage)}},CCR.xdmod.ui.intersect=function(a,b){for(var result=[],i=0;i<a.length;i++)for(var j=0;j<b.length;j++)a[i]==b[j]&&result.push(a[i]);return result},CCR.xdmod.ui.getComboBox=function(data,fields,valueField,displayField,editable,emptyText){return new Ext.form.ComboBox({typeAhead:!0,triggerAction:"all",lazyRender:!0,mode:"local",emptyText:emptyText,editable:editable,store:new Ext.data.ArrayStore({id:0,fields:fields,data:data}),valueField:valueField,displayField:displayField})},CCR.xdmod.ui.gridComboRenderer=function(combo){return function(value){var idx=combo.store.find(combo.valueField,value),rec=combo.store.getAt(idx);return rec?rec.get(combo.displayField):combo.emptyText}},CCR.isBlank=function(value){return!value||"undefined"===value||!value.trim()},CCR.Types={},CCR.Types.String="[object String]",CCR.Types.Number="[object Number]",CCR.Types.Array="[object Array]",CCR.Types.Object="[object Object]",CCR.Types.Null="[object Null]",CCR.Types.Undefined="[object Undefined]",CCR.Types.Function="[object Function]",CCR.isType=function(value,type){return"string"==typeof type?Object.prototype.toString.call(value)===type:Object.prototype.toString.call(value)===Object.prototype.toString.call(type)},CCR.exists=function(value){return(!CCR.isType(value,"[object String]")||""!==value)&&null!=value},CCR.merge=function(obj1,obj2){var obj3={};for(var attrname1 in obj1)obj1.hasOwnProperty(attrname1)&&(obj3[attrname1]=obj1[attrname1]);for(var attrname in obj2)obj2.hasOwnProperty(attrname)&&(obj3[attrname]=obj2[attrname]);return obj3},CCR.getParameter=function(name,source){name=name.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var results=new RegExp("[\\?&]"+name+"=([^&#]*)").exec(source);return null===results?"":decodeURIComponent(results[1].replace(/\+/g," "))},CCR.tokenize=function(hash){var raw="string"!=typeof hash?String(hash):hash,matches=raw.match(/^#?(([^:\\?]*):?([^:\\?]*):?([^:\\?]*)\??(.*))/),tokens={raw:raw,content:matches[1],root:matches[2],tab:matches[3],subtab:matches[4],params:matches[5]};return""===tokens.tab&&(tokens.tab=tokens.root,tokens.root=""),tokens},CCR.toArray=function(value,delims){if(!CCR.exists(value)||!CCR.isType(value,CCR.Types.String)||value.length<1)return[];if((delims=delims||["&","="]).length<1)return[value];var results=[],temp=value.split(delims[0]);if(1<delims.length)for(var i=1;i<delims.length;i++)for(var delim=delims[i],j=0;j<temp.length;j++){var entry=temp[j];entry&&0<=entry.indexOf(delim)&&results.push(entry.split(delim))}return results},CCR.objectToArray=function(object){if(!CCR.exists(object))return[];var results;for(var property in object)object.hasOwnProperty(property)&&(results=[property,object[property]]);return results},CCR.join=function(values,joiners){if(!CCR.exists(values)||!CCR.isType(values,CCR.Types.Array))return"";if(joiners=joiners||["&","="],values.length<1)return"";if(joiners.length<1)return values.join("");var joinValue=function(value,joiners,joinerIndex){var isArray=CCR.isType(value,CCR.Types.Array),holdsArrays=isArray&&0<value.length&&CCR.isType(value[0],CCR.Types.Array),result=[];if(isArray&&holdsArrays)for(var i=0;i<value.length;i++)result.push(joinValue(value[i],joiners,joinerIndex+1));else isArray&&!holdsArrays?result=value:result.push(value,joiners[joinerIndex]);return result.join(joiners[joinerIndex])};return joinValue(values,joiners,0)},CCR.STR_PAD_LEFT=1,CCR.STR_PAD_RIGHT=2,CCR.STR_PAD_BOTH=3,CCR.pad=function(str,len,pad,dir){if(len=len||0,pad=pad||" ",dir=dir||CCR.STR_PAD_RIGHT,len+1>=str.length)switch(dir){case CCR.STR_PAD_LEFT:str=Array(len+1-str.length).join(pad)+str;break;case CCR.STR_PAD_BOTH:var right=Math.ceil((len-=str.length)/2);str=Array(len-right+1).join(pad)+str+Array(right+1).join(pad);break;default:str+=Array(len+1-str.length).join(pad)}return str},CCR.deepEncode=function(values,options){if(!CCR.exists(values))return"";var delim=(options=options||{}).delim||"&",left=options.left||"",right=options.right||"";return CCR.isType(values,CCR.Types.Array)?CCR._encodeArray(values,{delim:delim,left:left,right:right}):CCR.isType(values,CCR.Types.Object)?CCR._encodeObject(values,{delim:delim,left:left,right:right}):""},CCR._encodeArray=function(values,options){if(!CCR.exists(values))return JSON.stringify([]);for(var delim=(options=options||{}).delim||",",left=options.left||"[",right=options.right||"]",results=[],i=0;i<values.length;i++){var value=values[i];if(CCR.isType(value,CCR.Types.Array))results.push(CCR._encodeArray(value,options));else if(CCR.isType(value,CCR.Types.Object))results.push(CCR._encodeObject(value,options));else{var encoded=CCR.isType(value,CCR.Types.Number)?value:'"'+value+'"';results.push(encoded)}}return(left+results.join(delim)+right).trim()},CCR._encodeObject=function(value,options){if(!CCR.exists(value))return JSON.stringify({});var delim=(options=options||{}).delim||",",left=options.left||"{",right=options.right||"}",wrap=options.wrap||!1,separator=options.seperator||"=",results=[];for(var property in value)if(value.hasOwnProperty(property)){var propertyValue=value[property];if(CCR.isType(propertyValue,CCR.Types.Array))results.push(property+"="+encodeURIComponent(CCR._encodeArray(propertyValue,{wrap:!0,seperator:":"})));else if(CCR.isType(propertyValue,CCR.Types.Object))results.push(property+"="+encodeURIComponent(CCR._encodeObject(propertyValue,{wrap:!0})));else{var key=wrap?'"'+property+'"':property;results.push(key+separator+propertyValue)}}return(left+results.join(delim)+right).trim()},CCR.encode=function(values){if(CCR.exists(values)){var parameters=[];for(var property in values)if(values.hasOwnProperty(property)){var isArray=CCR.isType(values[property],CCR.Types.Array),isObject=CCR.isType(values[property],CCR.Types.Object),value=isArray||isObject?encodeURIComponent(CCR.deepEncode(values[property])):values[property];parameters.push(property+"="+value)}return parameters.join("&")}},CCR.apply=function(lhs,rhs){if("object"!=typeof lhs||"object"!=typeof rhs)return lhs;var results={};for(var property in lhs)lhs.hasOwnProperty(property)&&(results[property]=lhs[property]);for(property in rhs){if(rhs.hasOwnProperty(property))void 0!==rhs[property]&&null!==rhs[property]&&(results[property]=rhs[property])}return results},CCR.toInt=function(value){var isType=CCR.isType;return isType(value,CCR.Types.Number)?value:isType(value,CCR.Types.String)?parseInt(value):value},CCR.error=function(title,message,success,failure,buttons){buttons=buttons||Ext.MessageBox.OK,success=success||function(){},failure=failure||function(){},Ext.MessageBox.show({title:title,msg:message,buttons:buttons,icon:Ext.MessageBox.ERROR,fn:function(buttonId,text,options){var compare=CCR.compare;compare.strings(buttonId,Ext.MessageBox.buttonText.no)||compare.strings(buttonId,Ext.MessageBox.buttonText.cancel)?failure(buttonId,text,options):success(buttonId,text,options)}})},CCR.compare={method:{String:{LowerCase:"toLowerCase",UpperCase:"toUpperCase",None:"toString"}},strings:function(left,right,method){return!(!CCR.exists(left)||!CCR.exists(right))&&left[method=method||CCR.compare.method.String.LowerCase]()===right[method]()}},CCR.getInstance=function(instancePath,classPath,config){if(instancePath&&"string"==typeof instancePath&&classPath&&"string"==typeof classPath){var getReference=function(path,callback){return callback=void 0!==callback?callback:function(previous,current){return previous[current]},path.split(".").reduce(callback,window)},result=getReference(instancePath);return result||(result=getReference(instancePath,function(previous,current){return void 0===previous[current]?previous[current]=function(classPath,config){var Class=getReference(classPath);return"function"==typeof Class?new Class(config):Class}(classPath,config):previous[current]})),result}},CCR.intersect=function(left,right){for(var found=[],i=0;i<right.length;i++){var key=right[i];-1!==left.indexOf(key)&&found.push(key)}return found},Ext.override(Ext.grid.ColumnModel,{setState:function(col,state){state=Ext.applyIf(state,this.defaults),this.columns&&this.columns[col]?Ext.apply(this.columns[col],state):this.config&&this.config[col]&&Ext.apply(this.config[col],state)}}),Ext.override(Ext.form.TriggerField,{onResize:function(w,h){Ext.form.TriggerField.superclass.onResize.call(this,w,h);var tw=this.getTriggerWidth();Ext.isNumber(w)&&this.el.setWidth(w-tw),this.rendered&&!this.readOnly&&this.editable&&!this.el.getWidth()?this.wrap.setWidth(w):this.wrap.setWidth(this.el.getWidth()+tw)}}),Ext.override(Ext.Tip,{doAutoWidth:function(adjust){if(this.body){adjust=adjust||0;var bw=this.body.getTextWidth();this.title&&(bw=Math.max(bw,this.header.child("span").getTextWidth(this.title))),bw+=this.getFrameWidth()+(this.closable?20:0)+this.body.getPadding("lr")+adjust,Ext.isIE9&&(bw+=1),this.setWidth(bw.constrain(this.minWidth,this.maxWidth)),Ext.isIE7&&!this.repainted&&(this.el.repaint(),this.repainted=!0)}}}),Ext.override(Ext.ToolTip,{show:function(){this.anchor&&(this.showAt([-1e3,-1e3]),this.origConstrainPosition=this.constrainPosition,this.constrainPosition=!1,this.anchor=this.origAnchor),this.showAt(this.getTargetXY()),this.anchor?(this.anchorEl.show(),this.syncAnchor(),this.constrainPosition=this.origConstrainPosition):this.anchorEl&&this.anchorEl.hide()},showAt:function(xy){this.lastActive=new Date,this.clearTimers(),Ext.ToolTip.superclass.showAt.call(this,xy),this.dismissDelay&&!1!==this.autoHide&&(this.dismissTimer=this.hide.defer(this.dismissDelay,this)),this.anchor&&!this.anchorEl.isVisible()?(this.syncAnchor(),this.anchorEl.show()):this.anchorEl&&this.anchorEl.hide()}}),Ext.grid.GridView.prototype.processRows=Ext.grid.GridView.prototype.processRows.createInterceptor(function(){this.grid&&this.grid.stopEditing(!0)}),Ext.override(Ext.chart.CartesianChart,{createAxis:function(axis,value){var ref,old,o=Ext.apply({},value);return this[axis]&&(old=this[axis].labelFunction,this.removeFnProxy(old),this.labelFn.remove(old)),o.labelRenderer&&(ref=this.getFunctionRef(o.labelRenderer),o.labelFunction=this.createFnProxy(function(v){return ref.fn.call(ref.scope,v)}),this.labelFn.push(o.labelFunction)),-1<axis.indexOf("xAxis")&&"left"==o.position&&(o.position="bottom"),o}}),Ext.override(Ext.grid.RowSelectionModel,{acceptsNav:function(row,col,cm){return!(cm.isHidden(col)||!cm.isCellEditable(col,row))&&(!cm.getCellEditor||!!cm.getCellEditor(col,row))}}),Ext.override(Ext.menu.Item,{onRender:function(container,position){this.itemTpl||(this.itemTpl=Ext.menu.Item.prototype.itemTpl=new Ext.XTemplate('<a id="{id}" class="{cls} x-unselectable" hidefocus="true" unselectable="on" href="{href}"','<tpl if="hrefTarget">',' target="{hrefTarget}"',"</tpl>",">",'<img src="{icon}" class="x-menu-item-icon {iconCls}"/>','<span class="x-menu-item-text">{text}</span>',"</a>"));var a=this.getTemplateArgs();this.el=position?this.itemTpl.insertBefore(position,a,!0):this.itemTpl.append(container,a,!0),this.iconEl=this.el.child("img.x-menu-item-icon"),this.textEl=this.el.child(".x-menu-item-text"),this.tooltip&&(this.tooltip=new Ext.ToolTip(Ext.apply({target:this.el},Ext.isObject(this.tooltip)?this.toolTip:{html:this.tooltip}))),Ext.menu.Item.superclass.onRender.call(this,container,position)}}),Ext.namespace("XDMoD.utils"),XDMoD.utils.createChart=function(chartOptions,extraHandlers){var baseChartOptions={chart:{events:{load:function(){var eventHandlers=this.options.chart.events.loadHandlers;if(eventHandlers)for(var i=0;i<eventHandlers.length;i++)eventHandlers[i].apply(this,arguments)},redraw:function(){var eventHandlers=this.options.chart.events.redrawHandlers;if(eventHandlers)for(var i=0;i<eventHandlers.length;i++)eventHandlers[i].apply(this,arguments)},helperFunctions:{addBackgroundColor:function(element,color){var elementBBox=element.getBBox();return element.renderer.rect(elementBBox.x-3,elementBBox.y-2,elementBBox.width+6,elementBBox.height+4,1).attr({fill:color,zIndex:(element.zIndex?element.zIndex:0)-1}).add(element.parentGroup)},alignAlignedLabels:function(chart){var alignedLabels=chart.alignedLabels;if(alignedLabels)for(var i=0;i<alignedLabels.length;i++){var alignedLabel=alignedLabels[i],labelObject=alignedLabel.label,labelBackground=alignedLabel.background;labelObject.align(Highcharts.extend(labelObject.getBBox(),chart.options.alignedLabels.items[i]),null,chart.renderer.spacingBox),labelBackground&&labelBackground.align(Highcharts.extend(labelObject.getBBox(),chart.options.alignedLabels.items[i]),null,chart.renderer.spacingBox)}}},loadHandlers:[function(){var alignedLabelsOptions=this.options.alignedLabels;if(alignedLabelsOptions){this.alignedLabels=[];for(var i=0;i<alignedLabelsOptions.items.length;i++){var alignedLabel={},alignedLabelOptions=alignedLabelsOptions.items[i];alignedLabel.group=this.renderer.g().add(),alignedLabel.label=this.renderer.label(alignedLabelOptions.html).add(alignedLabel.group),alignedLabelOptions.backgroundColor&&(alignedLabel.background=this.options.chart.events.helperFunctions.addBackgroundColor(alignedLabel.label,alignedLabelOptions.backgroundColor),alignedLabel.label.toFront()),this.alignedLabels.push(alignedLabel)}this.options.chart.events.helperFunctions.alignAlignedLabels(this)}},function(){if(this.series&&!1!==this.options.chart.showWarnings)for(var i=0;i<this.series.length;i++){var series=this.series[i];series.options.isRestrictedByRoles&&this.options.chart.events.helperFunctions.addBackgroundColor(series.legendItem,"#DFDFDF")}}],redrawHandlers:[function(){this.options.chart.events.helperFunctions.alignAlignedLabels(this)}]}},plotOptions:{series:{dataLabels:{formatter:function(){var settings=this.series.userOptions.dataLabels.settings;if(!settings)return this.y.toString();if("pie"!==this.series.type)return settings.value_labels&&settings.error_labels?Highcharts.numberFormat(this.y,settings.decimals)+" [+/-"+Highcharts.numberFormat(this.percentage,settings.decimals)+"]":settings.error_labels?"+/-"+Highcharts.numberFormat(this.percentage,settings.decimals):Highcharts.numberFormat(this.y,settings.decimals);var x=this.point.name;return this.point.name.length>settings.maxL+3&&(x=this.point.name.substring(0,settings.maxL-3)),"<b>"+x.wordWrap(settings.wrap,"</b><br/><b>")+"</b><br/>"+Highcharts.numberFormat(this.y,settings.decimals)}}},errorbar:{tooltip:{pointFormatter:function(){var fErr=Highcharts.numberFormat(this.stderr,this.series.userOptions.tooltip.valueDecimals);return'<span style="color: '+this.series.userOptions.color+'">●</span> '+this.series.userOptions.name+": <b>+/-"+fErr+"</b><br/>"}}}}};chartOptions.xAxis&&"datetime"!==chartOptions.xAxis.type&&(baseChartOptions.xAxis={labels:{formatter:function(){var settings=this.chart.userOptions.xAxis.labels.settings,x=this.value;return this.value.length>settings.maxL-3&&(x=this.value.substring(0,settings.maxL-3)+"..."),settings.wrap?x.wordWrap(settings.wrap,"<br />"):x}}}),jQuery.extend(!0,baseChartOptions,chartOptions),extraHandlers&&(extraHandlers.loadHandlers&&(baseChartOptions.chart.events.loadHandlers=baseChartOptions.chart.events.loadHandlers.concat(extraHandlers.loadHandlers)),extraHandlers.redrawHandlers&&(baseChartOptions.chart.events.redrawHandlers=baseChartOptions.chart.events.redrawHandlers.concat(extraHandlers.redrawHandlers)));var addAxisFormatter=function(axis){var decimals,minval;axis.labels&&axis.labels.decimals&&(decimals=axis.labels.decimals,minval=Math.pow(10,-decimals),axis.labels.formatter=function(){return this.value<minval?this.value:Highcharts.numberFormat(this.value,decimals)})};return baseChartOptions.yAxis&&(Array.isArray(baseChartOptions.yAxis)?baseChartOptions.yAxis.forEach(addAxisFormatter):addAxisFormatter(baseChartOptions.yAxis)),baseChartOptions.legend&&baseChartOptions.legend.wordWrap&&(baseChartOptions.legend.labelFormatter=function(){var ret="",x=this.name,indexOfSQ=x.indexOf("]"),brAlready=!1;0<indexOfSQ&&(ret+=x.substring(0,indexOfSQ+1)+"<br/>",x=x.substring(indexOfSQ+1,x.length),brAlready=!0);var indexOfBr=x.indexOf("{");return 0<indexOfBr&&!brAlready&&(ret+=x.substring(0,indexOfBr)+"<br/>",x=x.substring(indexOfBr,x.length)),ret+=x.wordWrap(50,"<br/>")}),new Highcharts.Chart(baseChartOptions)},CCR.xdmod.RESTDataProxy=function(conn){CCR.xdmod.RESTDataProxy.superclass.constructor.call(this,conn)},Ext.extend(CCR.xdmod.RESTDataProxy,Ext.data.HttpProxy,{doRequest:function(action,rs,params,reader,cb,scope,arg){var o={method:this.api[action]?this.api[action].method:void 0,timeout:6e4,request:{callback:cb,scope:scope,arg:arg},reader:reader,callback:this.createCallback(action,rs),scope:this};params.jsonData?o.jsonData=params.jsonData:params.xmlData?o.xmlData=params.xmlData:o.params=params||{};var restArgumentString="";for(var argName in params)restArgumentString+="/"+argName+"="+params[argName];this.conn.url=this.url+restArgumentString+"?token="+XDMoD.REST.token,Ext.applyIf(o,this.conn),this.activeRequest[action],this.activeRequest[action]=Ext.Ajax.request(o),this.conn.url=null}}),CCR.xdmod.CustomHttpProxy=function(conn){CCR.xdmod.CustomHttpProxy.superclass.constructor.call(this,conn)},Ext.extend(CCR.xdmod.CustomHttpProxy,Ext.data.HttpProxy,{buildUrl:function(action,record){record=record||null;var url=this.conn&&this.conn.url?this.conn.url:this.api[action]?this.api[action].url:this.url;if(!url)throw new Ext.data.Api.Error("invalid-url",action);var provides=null,m=url.match(/(.*)(\.json|\.xml|\.html)$/);return m&&(provides=m[2],url=m[1]),(!0===this.restful||!0===this.prettyUrls)&&record instanceof Ext.data.Record&&!record.phantom&&(url+="&id="+record.id),null===provides?url:url+provides}}),Ext.ux.Printer={renderers:{},registerRenderer:function(xtype,renderer){this.renderers[xtype]=new renderer},getRenderer:function(xtype){return this.renderers[xtype]},print:function(component){for(var xtypes=component.getXTypes().split("/"),i=xtypes.length-1;0<=i;i--){var xtype=xtypes[i],renderer=this.getRenderer(xtype);if(null!=renderer){renderer.print(component);break}}}},Ext.override(Ext.Component,{getXTypes:function(){var tc=this.constructor;if(!tc.xtypes){for(var c=[],sc=this;sc;){var xtype=sc.constructor.xtype;null!=xtype&&c.unshift(xtype),sc=sc.constructor.superclass}tc.xtypeChain=c,tc.xtypes=c.join("/")}return tc.xtypes}}),Ext.ux.Printer.BaseRenderer=Ext.extend(Object,{print:function(component){var win=window.open("","");win.document.write(this.generateHTML(component)),win.onload=function(){win.print(),win.close()},win.document.close()},generateHTML:function(component){return new Ext.XTemplate('<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',"<html>","<head>",'<meta content="text/html; charset=UTF-8" http-equiv="Content-Type" />','<link href="'+this.stylesheetPath+'" rel="stylesheet" type="text/css" media="screen,print" />',"<title>"+this.getTitle(component)+"</title>","</head>","<body>",this.generateBody(component),"</body>","</html>").apply(this.prepareData(component))},generateBody:Ext.emptyFn,prepareData:function(component){return component},getTitle:function(component){return"function"==typeof component.getTitle?component.getTitle():component.title||"Printing"},stylesheetPath:"gui/css/viewer.css"}),Ext.ux.Printer.ColumnTreeRenderer=Ext.extend(Ext.ux.Printer.BaseRenderer,{generateBody:function(tree){var columns=this.getColumns(tree),headings=this.headerTpl.apply(columns),body=this.bodyTpl.apply(columns);return String.format('<table>{0}<tpl for=".">{1}</tpl></table>',headings,body)},getColumns:function(tree){return tree.columns},prepareData:function(tree){var root=tree.root,data=[],cols=this.getColumns(tree),padding=this.indentPadding;return root.cascade(function(node){if(!0!==node.hidden&&!0!==node.isHiddenRoot()){var row=Ext.apply({depth:node.getDepth()*padding},node.attributes);Ext.iterate(row,function(key,value){Ext.each(cols,function(column){column.dataIndex==key&&(row[key]=column.renderer?column.renderer(value):value)},this)}),row[this.getColumns(tree)[0].dataIndex]=node.attributes.text,data.push(row)}},this),data},indentPadding:15,headerTpl:new Ext.XTemplate("<tr>",'<tpl for=".">','<th width="{width}">{header}</th>',"</tpl>","</tr>"),bodyTpl:new Ext.XTemplate("<tr>",'<tpl for=".">','<td style="padding-left: {[xindex == 1 ? "\\{depth\\}" : "0"]}px">\\{{dataIndex}\\}</td>',"</tpl>","</tr>")}),Ext.ux.Printer.registerRenderer("columntree",Ext.ux.Printer.ColumnTreeRenderer),Ext.ux.Printer.GridPanelRenderer=Ext.extend(Ext.ux.Printer.BaseRenderer,{generateBody:function(grid){var columns=this.getColumns(grid),headings=this.headerTpl.apply(columns),body=this.bodyTpl.apply(columns);return String.format('<table>{0}<tpl for=".">{1}</tpl></table>',headings,body)},prepareData:function(grid){var columns=this.getColumns(grid),data=[];return grid.store.data.each(function(item){var convertedData={};Ext.iterate(item.data,function(key,value){Ext.each(columns,function(column){if(column.dataIndex==key)return convertedData[key]=column.renderer?column.renderer(value,null,item):value,!1},this)}),data.push(convertedData)}),data},getColumns:function(grid){var columns=[];return Ext.each(grid.getColumnModel().config,function(col){1!=col.hidden&&columns.push(col)},this),columns.shift(),columns},headerTpl:new Ext.XTemplate("<tr>",'<tpl for=".">',"<th>{header}</th>","</tpl>","</tr>"),bodyTpl:new Ext.XTemplate("<tr>",'<tpl for=".">',"<td>\\{{dataIndex}\\}</td>","</tpl>","</tr>")}),Ext.ux.Printer.registerRenderer("grid",Ext.ux.Printer.GridPanelRenderer),Ext.ux.Printer.PanelRenderer=Ext.extend(Ext.ux.Printer.BaseRenderer,{generateBody:function(panel){return String.format("<div class='x-panel-print'>{0}</div>",panel.body.dom.innerHTML)}}),Ext.ux.Printer.registerRenderer("panel",Ext.ux.Printer.PanelRenderer),Ext.ux.Printer.DataViewRenderer=Ext.extend(Ext.ux.Printer.BaseRenderer,{generateBody:function(view){return String.format("<div class='x-panel-print'>{0}</div>",view.el.dom.innerHTML)}}),Ext.ux.Printer.registerRenderer("dataview",Ext.ux.Printer.DataViewRenderer),Ext.ux.Printer.HTMLRenderer=Ext.extend(Ext.ux.Printer.BaseRenderer,{generateBody:function(html){return String.format("<div class='x-panel-print'>{0}</div>",html.html)}}),Ext.ux.Printer.registerRenderer("html",Ext.ux.Printer.HTMLRenderer),CCR.xdmod.ui.TGUserDropDown=Ext.extend(Ext.form.ComboBox,{controllerBase:"controllers/sab_user.php",triggerAction:"all",user_management_mode:!1,displayField:"person_name",valueField:"person_id",width:275,minListWidth:310,pageSize:300,hideTrigger:!1,forceSelection:!0,minChars:1,piOnly:!1,getValue:function(){return CCR.xdmod.ui.TGUserDropDown.superclass.getValue.call(this).split(";")[0]},setValue:function(v,def){var text=v;return CCR.xdmod.ui.TGUserDropDown.superclass.setValue.call(this,text),def&&(this.lastSelectionText=def),this},initializeWithValue:function(v,l){this.setValue(v,l),this.setRawValue(l)},initComponent:function(){var bParams={operation:"enum_tg_users",pi_only:"n",search_mode:"formal_name"};!0===this.user_management_mode&&(bParams.userManagement="y"),this.userStore=new Ext.data.JsonStore({url:this.controllerBase,autoDestroy:!1,baseParams:bParams,root:"users",fields:["person_id","person_name"],totalProperty:"total_user_count",successProperty:"success",messageProperty:"message",listeners:{exception:function(dp,type,action,options,response,arg){CCR.xdmod.ui.presentFailureResponse(response,{title:"XDMoD"})}}}),Ext.apply(this,{store:this.userStore}),this.dashboardMode&&(this.store.baseParams.dashboard_mode=1),CCR.xdmod.ui.TGUserDropDown.superclass.initComponent.apply(this,arguments)},listeners:{select:function(component,record,index){var comp,callback,valueProperty,personId=component.getValue(),cascadeOptions=this.cascadeOptions;void 0!==cascadeOptions&&(void 0!==cascadeOptions.component&&(comp=cascadeOptions.component),void 0!==cascadeOptions.callback&&(callback=cascadeOptions.callback),void 0!==cascadeOptions.valueProperty&&(valueProperty=cascadeOptions.valueProperty)),void 0!==comp&&Ext.Ajax.request({url:XDMoD.REST.prependPathBase("persons/"+personId+"/organization"),method:"GET",scope:self,callback:function(options,success,response){var json;if(success&&(json=CCR.safelyDecodeJSONResponse(response),success=CCR.checkDecodedJSONResponseSuccess(json)),success){var value=json.results[valueProperty];comp.getValue()!==value&&void 0!==callback&&callback(comp.getValue(),value),comp.setValue(value)}else CCR.xdmod.ui.presentFailureResponse(response,{title:"User Management",wrapperMessage:"Setting user mapping failed."})}})}}});var SUCCESS="#080",FAIL="#f00";function dateRangeValidator(start_date,end_date){var date_utils=new DateUtilities;return date_utils.isValidDateFormat(start_date),date_utils.isValidDateFormat(start_date)?date_utils.isValidDateFormat(end_date)?end_date<=start_date?{success:!1,message:"The start date must be earlier than the end date"}:start_date>date_utils.getCurrentDate()?{success:!1,message:"The start date cannot be ahead of today"}:{success:!0}:{success:!1,message:"Valid end date required"}:{success:!1,message:"Valid start date required"}}function dismissPlaceholder(placeholder_id){var objPlaceholder=document.getElementById(placeholder_id);objPlaceholder&&(objPlaceholder.style.display="none")}XDMoD.LoginPrompt=Ext.extend(Ext.Window,{rest_call_config:null,width:333,height:180,layout:"table",layoutConfig:{columns:1},frame:!0,modal:!0,closable:!1,closeAction:"hide",resizable:!1,title:"Session Expired",padding:"10 0 0 10",setRESTConfig:function(config){(this.rest_call_config=config).title&&this.sectionGeneral.setTitle(config.title)},initComponent:function(){var self=this,presentOverlay=function(status,message,customdelay,cb){var delay=customdelay||2e3;relogin_panel_container.showMask('<div class="overlay_message" style="color:'+status+'">'+message+"</div>"),function(){relogin_panel_container.hideMask(),cb&&cb()}.defer(delay)},minUsernameLength=XDMoD.constants.minUsernameLength,maxUsernameLength=XDMoD.constants.maxUsernameLength,usernameField=new Ext.form.TextField({fieldLabel:"Username",disabled:!0,value:CCR.xdmod.ui.username,width:180,minLength:minUsernameLength,minLengthText:"Minimum length ("+minUsernameLength+" characters) not met.",maxLength:maxUsernameLength,maxLengthText:"Maximum length ("+maxUsernameLength+" characters) exceeded.",regex:XDMoD.regex.usernameCharacters,regexText:"The username must consist of alphanumeric characters only, or it can be an e-mail address."}),minPasswordLength=XDMoD.constants.minPasswordLength,maxPasswordLength=XDMoD.constants.maxPasswordLength,passwordField=new Ext.form.TextField({fieldLabel:"Password",width:180,inputType:"password",minLength:minPasswordLength,minLengthText:"Minimum length ("+minPasswordLength+" characters) not met.",maxLength:maxPasswordLength,maxLengthText:"Maximum length ("+maxPasswordLength+" characters) exceeded.",listeners:{keydown:function(a,e){13==e.getCharCode()&&(this.blur(),processLogin())}}}),processLogin=function(){if(passwordField.validate()){var restArgs={username:usernameField.getValue(),password:encodeURIComponent(passwordField.getValue())};XDMoD.REST.Call({action:"authentication/utilities/login",arguments:restArgs,callback:loginCallback})}else presentOverlay(FAIL,passwordField.formatMessage,null,function(){passwordField.focus(!0)})};self.sectionGeneral=new Ext.FormPanel({labelWidth:95,frame:!0,title:"Log Back Into XDMoD",width:300,defaults:{width:200},defaultType:"textfield",items:[usernameField,passwordField]});var btnCancel=new Ext.Button({text:"Log in as different user",flex:1,handler:function(){location.href="index.php"}}),btnLogin=new Ext.Button({text:"Log Back In",flex:1,handler:function(){processLogin()}}),loginCallback=function(responseData){if(responseData.success){if(XDMoD.REST.token=responseData.results.token,self.hide(),passwordField.setValue(""),self.rest_call_config&&self.rest_call_config.successCallback)return void self.rest_call_config.successCallback();self.rest_call_config&&1==self.rest_call_config.resume&&XDMoD.REST.Call(self.rest_call_config)}else presentOverlay(FAIL,responseData.message,null,function(){passwordField.focus(!0)})},relogin_panel_container=new Ext.Panel({id:"panel_outer_container",baseCls:"x-plain",plugins:[new Ext.ux.plugins.ContainerMask({msg:"",masked:!1})],items:[self.sectionGeneral,{anchor:"100%",baseCls:"x-plain",layout:"hbox",padding:"10 0 0 0",items:[btnCancel,{xtype:"spacer",width:20},btnLogin]}]});this.on("show",function(){(function(){passwordField.focus(!0)}).defer(500)}),Ext.apply(this,{items:[relogin_panel_container]}),XDMoD.LoginPrompt.superclass.initComponent.call(this)}}),Ext.ns("Ext.ux.grid"),Ext.ux.grid.CheckColumn=function(config){Ext.apply(this,config),this.id||(this.id=Ext.id()),this.renderer=this.renderer.createDelegate(this)},Ext.ux.grid.CheckColumn.prototype={init:function(grid){this.grid=grid,this.grid.on("render",function(){this.grid.getView().mainBody.on("mousedown",this.onMouseDown,this)},this)},checkchange:function(){},onMouseDown:function(e,t){if(Ext.fly(t).hasClass(this.createId())){e.stopEvent();var index=this.grid.getView().findRowIndex(t),record=this.grid.store.getAt(index);this.disabledDataIndex?record.data[this.disabledDataIndex]&&(this.enabledNotDataIndex&&record.data[this.enabledNotDataIndex]||record.set(this.dataIndex,!record.data[this.dataIndex])):this.enabledNotDataIndex&&record.data[this.enabledNotDataIndex]||record.set(this.dataIndex,!record.data[this.dataIndex]),this.checkchange(record,this.dataIndex,record.data[this.dataIndex])}},renderer:function(v,p,record){return p.css+=" x-grid3-check-col-td",this.disabledDataIndex&&!record.data[this.disabledDataIndex]||this.enabledNotDataIndex&&record.data[this.enabledNotDataIndex]?String.format('<div class="{0}">&#160;</div>',this.createId()):String.format('<div class="x-grid3-check-col{0} {1}">&#160;</div>',v?"-on":"",this.createId())},createId:function(){return"x-grid3-cc-"+this.id}},Ext.preg("checkcolumn",Ext.ux.grid.CheckColumn),Ext.grid.CheckColumn=Ext.ux.grid.CheckColumn,Ext.grid.Column.types.checkcolumn=Ext.ux.grid.CheckColumn,Ext.namespace("Ext.ux.plugins"),Ext.ux.plugins.ContainerMask=function(opt){var options=opt||{};return{init:function(c){Ext.applyIf(c,{showMask:function(msg,msgClass,maskClass){var el;this.rendered&&(el=this[options.el]||Ext.get(options.el)||this.getEl?this.getEl():null)&&el.mask.call(el,msg||options.msg,msgClass||options.msgClass,maskClass||options.maskClass)},hideMask:function(){var el;this.rendered&&(el=this[options.el]||Ext.get(options.el)||this.getEl?this.getEl():null)&&el.unmask.call(el)}}),options.masked&&c.on("render",c.showMask.createDelegate(c,[null]),c,{delay:10,single:!0})}}},Ext.namespace("Ext.ux.plugins"),Ext.ux.plugins.ContainerBodyMask=function(opt){var options=opt||{};return options.maskinited=!1,{init:function(c){Ext.applyIf(c,{initMask:function(msg,msgClass,maskClass){if(!options.maskinited)return this.showMask(msg,msgClass,maskClass)},showMask:function(msg,msgClass,maskClass){var el;this.rendered&&(el=this[options.el]||Ext.get(options.el)||this.body?this.body:null)&&el.mask.call(el,msg||options.msg,msgClass||options.msgClass,maskClass||options.maskClass)},hideMask:function(){var el;options.maskinited=!0,this.rendered&&(el=this[options.el]||Ext.get(options.el)||this.body?this.body:null)&&el.unmask.call(el)}}),options.masked&&c.on("render",c.initMask.createDelegate(c,[null]),c,{delay:10,single:!0})}}},XDMoD.ProfileGeneralSettings=Ext.extend(Ext.form.FormPanel,{id:"xdmod-profile-general-settings",autoHeight:!0,border:!1,frame:!0,resizable:!1,title:"General",cls:"no-underline-invalid-fields-form",perform_logout_on_close:!1,init:function(){XDMoD.REST.connection.request({url:"/users/current",method:"GET",callback:this.cbProfile})},initComponent:function(){var sectionBottom,optPasswordUpdate,self=this,maxFirstNameLength=XDMoD.constants.maxFirstNameLength,user_profile_firstname=new Ext.form.TextField({name:"first_name",fieldLabel:"First Name",emptyText:"1 min, "+maxFirstNameLength+" max",msgTarget:"under",allowBlank:!1,blankText:"This field is required.",maxLength:maxFirstNameLength,maxLengthText:"Maximum length ("+maxFirstNameLength+" characters) exceeded.",regex:XDMoD.regex.noReservedCharacters,regexText:'This field may not contain reserved characters. ($, ^, #, <, >, ", :, \\, /, !)',listeners:{blur:XDMoD.utils.trimOnBlur,invalid:XDMoD.utils.syncWindowShadow,valid:XDMoD.utils.syncWindowShadow}}),maxLastNameLength=XDMoD.constants.maxLastNameLength,user_profile_lastname=new Ext.form.TextField({name:"last_name",fieldLabel:"Last Name",emptyText:"1 min, "+maxLastNameLength+" max",msgTarget:"under",allowBlank:!1,blankText:"This field is required.",maxLength:maxLastNameLength,maxLengthText:"Maximum length ("+maxLastNameLength+" characters) exceeded.",regex:XDMoD.regex.noReservedCharacters,regexText:'This field may not contain reserved characters. ($, ^, #, <, >, ", :, \\, /, !)',listeners:{blur:XDMoD.utils.trimOnBlur,invalid:XDMoD.utils.syncWindowShadow,valid:XDMoD.utils.syncWindowShadow}}),minEmailLength=XDMoD.constants.minEmailLength,maxEmailLength=XDMoD.constants.maxEmailLength,removeFieldHighlight=function(thisField){thisField.removeClass("user_profile_highlight_entry")},user_profile_email_addr=new Ext.form.TextField({name:"email_address",fieldLabel:"E-Mail Address",emptyText:minEmailLength+" min, "+maxEmailLength+" max",msgTarget:"under",allowBlank:!1,blankText:"This field is required.",minLength:minEmailLength,minLengthText:"Minimum length ("+minEmailLength+" characters) not met.",maxLength:maxEmailLength,maxLengthText:"Maximum length ("+maxEmailLength+" characters) exceeded.",validator:XDMoD.validator.email,listeners:{blur:XDMoD.utils.trimOnBlur,focus:removeFieldHighlight,invalid:function(thisField,msg){removeFieldHighlight(thisField),XDMoD.utils.syncWindowShadow(thisField)},valid:XDMoD.utils.syncWindowShadow}}),minPasswordLength=XDMoD.constants.minPasswordLength,maxPasswordLength=XDMoD.constants.maxPasswordLength,user_profile_new_pass=new Ext.form.TextField({name:"password",fieldLabel:"Password",width:120,inputType:"password",disabled:!0,cls:"user_profile_password_field new_password",allowBlank:!1,blankText:"This field is required.",minLength:minPasswordLength,minLengthText:"Minimum length ("+minPasswordLength+" characters) not met.",maxLength:maxPasswordLength,maxLengthText:"Maximum length ("+maxPasswordLength+" characters) exceeded.",listeners:{invalid:XDMoD.utils.syncWindowShadow,valid:XDMoD.utils.syncWindowShadow}}),user_profile_new_pass_again=new Ext.form.TextField({fieldLabel:"Password Again",width:120,inputType:"password",disabled:!0,cls:"user_profile_password_field password_again",msgTarget:"under",submitValue:!1,validator:function(value){return user_profile_new_pass.getValue()===user_profile_new_pass_again.getValue()||"This password does not match the password above."},listeners:{invalid:XDMoD.utils.syncWindowShadow,valid:XDMoD.utils.syncWindowShadow}}),active_layout_index=CCR.xdmod.ui.userIsSSO?XDMoD.ProfileEditorConstants.SSO_USER:XDMoD.ProfileEditorConstants.PASSWORD;this.cbProfile=function(options,success,response){var data,decodedSuccessResponse;success&&(data=CCR.safelyDecodeJSONResponse(response),decodedSuccessResponse=CCR.checkDecodedJSONResponseSuccess(data)),decodedSuccessResponse?(user_profile_firstname.setValue(data.results.first_name),user_profile_lastname.setValue(data.results.last_name),user_profile_email_addr.setValue(data.results.email_address),data.results.is_sso_user&&0===data.results.email_address.length&&(XDMoD.Profile.logoutOnClose=!0),!0===data.results.is_sso_user&&data.results.first_time_login&&(active_layout_index=XDMoD.ProfileEditorConstants.WELCOME_EMAIL_CHANGE,user_profile_email_addr.addClass("user_profile_highlight_entry")),lblRole.on("afterrender",function(){document.getElementById("profile_editor_most_privileged_role").innerHTML=data.results.most_privileged_role}),self.parentWindow.show()):Ext.MessageBox.alert("My Profile","There was a problem retrieving your profile information.")};optPasswordUpdate=new Ext.form.RadioGroup({fieldLabel:"Update",cls:"user_profile_option_password_update",columns:2,width:180,items:[{boxLabel:"Keep Existing",name:"group_view",inputValue:"keep",checked:!0},{boxLabel:"Update",name:"group_view",inputValue:"update",checked:!1}],listeners:{change:function(thisRadioGroup,checked){var userKeepingPassword="keep"===thisRadioGroup.getValue().getGroupValue();user_profile_new_pass.setDisabled(userKeepingPassword),user_profile_new_pass_again.setDisabled(userKeepingPassword),userKeepingPassword&&(user_profile_new_pass.setValue(""),user_profile_new_pass_again.setValue(""))}}});var lblRole=new Ext.form.Label({html:'<div style="width: 300px; font-size: 12px; padding-top: 5px">Top Role: <b style="margin-left: 45px"><span id="profile_editor_most_privileged_role"></span></b><br /></div>'}),sectionGeneral=new Ext.Panel({labelWidth:95,frame:!0,title:"User Information",bodyStyle:"padding:5px 5px 0",width:350,defaults:{width:200},cls:"user_profile_section_general",defaultType:"textfield",layout:"form",items:[user_profile_firstname,user_profile_lastname,user_profile_email_addr,lblRole]}),sectionPassword=new Ext.Panel({labelWidth:95,frame:!0,title:"Update Password",bodyStyle:"padding:5px 5px 0",width:350,defaults:{width:200},cls:"user_profile_section_password",defaultType:"textfield",layout:"form",items:[optPasswordUpdate,user_profile_new_pass,{xtype:"tbtext",cls:"user_profile_entry_password_requirements",text:minPasswordLength+" min, "+maxPasswordLength+" max"},user_profile_new_pass_again]}),sectionSSOUser=new Ext.Panel({labelWidth:95,frame:!1,bodyStyle:"padding:0px 5px",width:350,layout:"form",items:[{xtype:"tbtext",text:""}]}),bottomItems=[new Ext.Panel({labelWidth:95,frame:!1,bodyStyle:"padding:0px 5px",width:350,layout:"form",items:[{xtype:"tbtext",text:'Please ensure the email listed above is accurate. Your e-mail address is required in order to use certain features of XDMoD as well as receive important messages from the XDMoD team. Once you have validated your email, click "Update" to confirm.'},{html:'<br/>If you require elevated access (e.g. Center Director, Center Staff, etc.), please contact <a href="mailto:'+CCR.xdmod.tech_support_recipient+'">'+CCR.xdmod.tech_support_recipient+"</a> to request such privileges."}]}),sectionSSOUser];CCR.xdmod.ui.userIsSSO||bottomItems.unshift(sectionPassword),(sectionBottom=new Ext.Panel({labelWidth:95,bodyStyle:"padding:0px 0px",cls:"user_profile_section_password",defaults:{autoHeight:!0},layout:"card",activeItem:0,items:bottomItems})).on("afterrender",function(){var id,rpanel;id=active_layout_index,"card"!==(rpanel=sectionBottom.getLayout())&&rpanel.setActiveItem(id)});var btnUpdate=new Ext.Button({iconCls:"user_profile_btn_update_icon",cls:"user_profile_btn_update",text:"Update",handler:function(){optPasswordUpdate.setDisabled(!0),self.getForm().submit({url:XDMoD.REST.prependPathBase("/users/current"),method:"PATCH",success:function(form,action){XDMoD.Profile.logoutOnClose=!1,CCR.xdmod.ui.generalMessage("My Profile",action.result.message,!0);var f_name=user_profile_firstname.getValue(),l_name=user_profile_lastname.getValue();document.getElementById("welcome_message").innerHTML=Ext.util.Format.htmlEncode(f_name)+" "+Ext.util.Format.htmlEncode(l_name),self.parentWindow.close()},failure:function(form,action){optPasswordUpdate.setDisabled(!1),action.failureType!==Ext.form.Action.CLIENT_INVALID?CCR.xdmod.ui.presentFailureResponse(action.response,{title:"My Profile",wrapperMessage:"There was a problem updating your information."}):CCR.xdmod.ui.userManagementMessage("Please resolve any problems in the form and try updating again.",!1)}})}});Ext.apply(this,{items:[sectionGeneral,sectionBottom],bbar:{items:[btnUpdate,"->",self.parentWindow.getCloseButton()]}}),XDMoD.ProfileGeneralSettings.superclass.initComponent.call(this)}}),XDMoD.ProfileRoleDelegation=Ext.extend(Ext.Panel,{autoHeight:!0,border:!1,frame:!0,resizable:!1,title:"Role Delegation",cls:"role_manager",reloadEligibleUsers:function(userId){this.storeCenterStaff.on("load",function(){void 0!==userId&&void 0!==this.storeCenterStaff.getById(userId)?this.cmbCenterStaff.select(userId):(this.btnElevateUser.setVisible(!1),this.btnDowngradeUser.setVisible(!1),this.lblMemberStatus.update("Select a staff member using the list above."))},this,{single:!0}),this.storeCenterStaff.reload()},initComponent:function(){var self=this,storeCenterStaff=new Ext.data.JsonStore({url:"controllers/role_manager.php",baseParams:{operation:"enum_center_staff_members"},root:"members",autoLoad:!0,idProperty:"id",fields:["id","name"]});storeCenterStaff.on("load",function(store,records,options){var recordsFound=0<records.length;lblStatus.setVisible(!recordsFound),sectionAssign.setVisible(recordsFound),lblMemberStatus.setVisible(recordsFound),XDMoD.utils.syncWindowShadow(self)}),this.storeCenterStaff=storeCenterStaff;var cmbCenterStaff=new Ext.form.ComboBox({cls:"center_staff",editable:!1,fieldLabel:"Staff Member",store:storeCenterStaff,triggerAction:"all",displayField:"name",valueField:"id",emptyText:"No Member Selected",listeners:{select:function(combo,value,index){(new Ext.data.Connection).request({url:"controllers/role_manager.php",params:{operation:"get_member_status",member_id:combo.getValue()},method:"POST",callback:function(options,success,response){if(success){var json=Ext.util.JSON.decode(response.responseText);json.success?(!0===json.eligible?lblMemberStatus.update(""):lblMemberStatus.update("<p><b>"+combo.getRawValue()+"</b></p><p>"+json.message+"</p>"),btnElevateUser.setVisible(json.eligible),btnDowngradeUser.setVisible(!json.eligible)):(lblMemberStatus.update("<p><b>"+combo.getRawValue()+'</b></p><span style="color: #00f">'+json.message+"</span>"),lblMemberStatus.setVisible(!0),btnElevateUser.setVisible(!1),btnDowngradeUser.setVisible(!1)),XDMoD.utils.syncWindowShadow(self)}else Ext.MessageBox.alert("Role Manager","There was a problem connecting to the portal service provider.")}})}}});this.cmbCenterStaff=cmbCenterStaff;var sectionAssign=new Ext.Panel({hidden:!0,items:[new Ext.Panel({labelWidth:95,padding:"5px",frame:!0,title:"Delegate Center Staff Privileges",defaults:{width:200},layout:"form",items:[cmbCenterStaff]})]}),btnElevateUser=new Ext.Button({text:"Upgrade Staff Member To Center Staff",hidden:!0,handler:function(){(new Ext.data.Connection).request({url:"controllers/role_manager.php",params:{operation:"upgrade_member",member_id:cmbCenterStaff.getValue()},method:"POST",callback:function(options,success,response){if(success){var json=Ext.util.JSON.decode(response.responseText);json.success?(lblMemberStatus.update("<p><b>"+cmbCenterStaff.getRawValue()+"</b></p><p>"+json.message+"</p>"),btnElevateUser.setVisible(!1),btnDowngradeUser.setVisible(!0),lblMemberStatus.setVisible(!0),XDMoD.utils.syncWindowShadow(self)):Ext.MessageBox.alert("Role Manager",json.message)}else Ext.MessageBox.alert("Role Manager","There was a problem connecting to the portal service provider.")}})}});this.btnElevateUser=btnElevateUser;var btnDowngradeUser=new Ext.Button({text:"Revoke Center Staff Privileges",hidden:!0,handler:function(){(new Ext.data.Connection).request({url:"controllers/role_manager.php",params:{operation:"downgrade_member",member_id:cmbCenterStaff.getValue()},method:"POST",callback:function(options,success,response){if(success){var json=Ext.util.JSON.decode(response.responseText);json.success?(btnDowngradeUser.setVisible(!1),btnElevateUser.setVisible(!0),lblMemberStatus.update(""),XDMoD.utils.syncWindowShadow(self),self.reloadEligibleUsers(cmbCenterStaff.getValue())):Ext.MessageBox.alert("Role Manager",json.message)}else Ext.MessageBox.alert("Role Manager","There was a problem connecting to the portal service provider.")}})}});this.btnDowngradeUser=btnDowngradeUser;var lblMemberStatus=new Ext.BoxComponent({hidden:!0,cls:"lbl_member_status",autoHeight:!0,html:"Select a staff member using the list above."});this.lblMemberStatus=lblMemberStatus;var lblStatus=new Ext.BoxComponent({hidden:!0,html:'<center><div style="padding-top: 6px; color: #000">No staff members for your center could be found.<br /><br />Please contact the XDMoD portal team at<br /><a href="mailto:'+CCR.xdmod.tech_support_recipient+'?subject=Center Staff Accounts">'+CCR.xdmod.tech_support_recipient+"</a><br />to request center staff accounts.<br /><br />You will be able to use this feature once<br />center staff accounts have been established.</div></center>"});this.on("render",function(){storeCenterStaff.load()}),Ext.apply(this,{items:[sectionAssign,lblMemberStatus,new Ext.Panel({buttonAlign:"center",buttons:[btnElevateUser,btnDowngradeUser]}),lblStatus],bbar:{items:["->",self.parentWindow.getCloseButton()]}}),XDMoD.ProfileRoleDelegation.superclass.initComponent.call(this)}}),XDMoD.Profile={logoutOnClose:!1},XDMoD.ProfileEditorConstants={PASSWORD:0,WELCOME_EMAIL_CHANGE:1,SSO_USER:5},XDMoD.ProfileEditor=Ext.extend(Ext.Window,{id:"xdmod-profile-editor",width:375,border:!1,frame:!0,iconCls:"user_profile_16",modal:!0,closable:!0,closeAction:"close",resizable:!1,title:"My Profile",tooltip:"Profile Editor",init:function(){this.general_settings.init()},handleProfileClose:function(){return 1!=XDMoD.Profile.logoutOnClose||(Ext.Msg.show({maxWidth:800,minWidth:400,title:"Close profile and logout?",msg:"If you do not supply an e-mail address, you will be logged out of XDMoD.<br/><br/>Are you sure you want to do this?",buttons:Ext.Msg.YESNO,fn:function(resp){"yes"==resp&&CCR.xdmod.ui.actionLogout()},icon:Ext.MessageBox.QUESTION}),!1)},getCloseButton:function(){var self=this;return new Ext.Button({text:"Close",iconCls:"general_btn_close",handler:function(){self.close()}})},initComponent:function(){var self=this;this.general_settings=new XDMoD.ProfileGeneralSettings({parentWindow:self}),this.role_delegation=new XDMoD.ProfileRoleDelegation({parentWindow:self,id:"tab_role_delegation"}),this.on("beforeclose",self.handleProfileClose);var tabPanel=new Ext.TabPanel({frame:!1,border:!1,activeTab:0,defaults:{tabCls:"tab-strip"},items:[this.general_settings,this.role_delegation],listeners:{tabchange:function(thisTabPanel,tab){XDMoD.utils.syncWindowShadow(thisTabPanel),tab===self.general_settings&&tab.cascade(function(currentComponent){return!(currentComponent instanceof Ext.form.FormPanel)||(currentComponent.getForm().isValid(),!1)})}}});0==CCR.xdmod.ui.isCenterDirector&&tabPanel.on("afterrender",function(tp){var role_delegation_tab=tp.id+"__tab_role_delegation";document.getElementById(role_delegation_tab).style.display="none"}),Ext.apply(this,{items:[tabPanel]}),XDMoD.ProfileEditor.superclass.initComponent.call(this)}}),Ext.namespace("XDMoD.DataWarehouse"),XDMoD.DataWarehouse.createAddFilterWindow=function(dim_id,dim_label,realms,filter_store,origin_module,origin_component,config){config=Ext.isDefined(config)?config:{};var filterDimensionPanel=new CCR.xdmod.ui.FilterDimensionPanel({origin_module:origin_module,origin_component:origin_component,dimension_id:dim_id,realms:realms,dimension_label:dim_label,filtersStore:filter_store});filterDimensionPanel.on("cancel",function(){addFilterMenu.close()}),filterDimensionPanel.on("ok",function(){addFilterMenu.close()});var addFilterMenu=new Ext.Window(Ext.apply({resizable:!1,showSeparator:!1,items:[filterDimensionPanel],closable:!1,modal:!0},config));return addFilterMenu},Ext.namespace("XDMoD.DataWarehouse"),XDMoD.DataWarehouse.createFilterStore=function(config){return config=Ext.isDefined(config)?config:{},new Ext.data.GroupingStore(Ext.apply({groupField:"dimension_id",sortInfo:{field:"dimension_id",direction:"ASC"},reader:new Ext.data.JsonReader({totalProperty:"totalCount",successProperty:"success",idProperty:"id",root:"data",messageProperty:"message"},["id","value_id","value_name","dimension_id","categories","realms","checked"]),getCheckedCount:function(){var count=0;return this.each(function(record){record.get("checked")&&count++},this),count}},config))},Ext.namespace("XDMoD.DataWarehouse"),XDMoD.DataWarehouse.quickFilterStore=new Ext.data.Store({isLoaded:!1,hasMultiSort:!0,multiSortInfo:{sorters:[{field:"dimensionUserSpecificRatio",direction:"DESC"},{field:"dimensionName",direction:"ASC"},{field:"isUserSpecificFilter",direction:"DESC"}]},reader:new Ext.data.JsonReader({root:"results"},["dimensionId","dimensionName","valueId","valueName","isUserSpecificFilter","isMostPrivilegedRoleFilter","dimensionUserSpecificRatio","checked"]),listeners:{load:{fn:function(thisStore){thisStore.isLoaded=!0},single:!0}},callAfterLoaded:function(fn,scope){scope=Ext.isDefined(scope)?scope:this,this.isLoaded?fn.call(scope):this.addListener("load",fn,scope,{single:!0})}}),XDMoD.REST.connection.request({url:"warehouse/quick_filters",method:"GET",callback:function(options,success,response){var data;if(success&&(data=CCR.safelyDecodeJSONResponse(response),success=CCR.checkDecodedJSONResponseSuccess(data)),success){var filters=[];Ext.iterate(data.results.filters,function(dimensionId,dimensionFilters){if(!Ext.isEmpty(dimensionFilters)){var dimensionName=data.results.dimensionNames[dimensionId],numUserSpecificFilters=0;Ext.each(dimensionFilters,function(dimensionFilter){dimensionFilter.isUserSpecificFilter&&numUserSpecificFilters++});var dimensionUserSpecificRatio=numUserSpecificFilters/dimensionFilters.length;Ext.each(dimensionFilters,function(dimensionFilter){filters.push(Ext.apply(dimensionFilter,{dimensionId:dimensionId,dimensionName:dimensionName,dimensionUserSpecificRatio:dimensionUserSpecificRatio,checked:!1}))})}}),XDMoD.DataWarehouse.quickFilterStore.loadData({success:!0,results:filters})}else XDMoD.DataWarehouse.quickFilterStore.loadData(Ext.encode({success:!0,results:[]}))}}),Ext.namespace("XDMoD.DataWarehouse"),XDMoD.DataWarehouse.createQuickFilterButton=function(config){config=Ext.isDefined(config)?config:{};var quickFilterButton=new Ext.Button(Ext.apply({text:"Quick Filters",iconCls:"quick_filter",disabled:!0,autoAddMostPrivilegedRoleFilters:!0,menu:new Ext.menu.Menu({showSeparator:!1})},config)),quickFilterStore=new Ext.data.Store({reader:new Ext.data.JsonReader({},XDMoD.DataWarehouse.quickFilterStore.recordType),listeners:{update:function(){quickFilterButton.menu.items.each(function(menuItem){Ext.isDefined(menuItem.filterRecord)&&menuItem.setChecked(menuItem.filterRecord.get("checked"),!0)})}},findQuickFilterRecordIndex:function(quickFilterRecord){return this.findBy(function(storeRecord){return quickFilterRecord.get("dimensionId")===storeRecord.get("dimensionId")&&quickFilterRecord.get("valueId")===storeRecord.get("valueId")})},setFilterChecked:function(quickFilterRecord,checked){var quickFilterRecordIndex=this.findQuickFilterRecordIndex(quickFilterRecord);quickFilterRecordIndex<0||this.getAt(quickFilterRecordIndex).set("checked",checked)}});return quickFilterButton.quickFilterStore=quickFilterStore,XDMoD.DataWarehouse.quickFilterStore.callAfterLoaded(function(){var filterRecordCopies=[];if(XDMoD.DataWarehouse.quickFilterStore.each(function(filterRecord){filterRecordCopies.push(filterRecord.copy())}),quickFilterStore.add(filterRecordCopies),!Ext.isEmpty(filterRecordCopies)){var currentDimensionName=null;quickFilterButton.quickFilterStore.each(function(filterRecord){var dimensionName=filterRecord.get("dimensionName");if(dimensionName!==currentDimensionName){null!==currentDimensionName&&quickFilterButton.menu.add("-");var encodedDimensionName=Ext.util.Format.htmlEncode(dimensionName);quickFilterButton.menu.add(new Ext.menu.TextItem({text:encodedDimensionName,style:{"font-size":"120%","font-weight":"bold"}})),currentDimensionName=dimensionName}var filterItemStyle={};filterRecord.get("isUserSpecificFilter")&&(filterItemStyle["font-weight"]="bold"),quickFilterButton.menu.add(new Ext.menu.CheckItem({text:Ext.util.Format.htmlEncode(filterRecord.get("valueName")),style:filterItemStyle,filterRecord:filterRecord,listeners:{checkchange:function(thisItem,checked){thisItem.filterRecord.set("checked",checked)}}}))}),quickFilterButton.autoAddMostPrivilegedRoleFilters&&quickFilterStore.each(function(quickFilterRecord){quickFilterRecord.get("isMostPrivilegedRoleFilter")&&quickFilterRecord.set("checked",!0)}),quickFilterButton.enable()}}),quickFilterButton},Ext.namespace("XDMoD.DataWarehouse"),XDMoD.DataWarehouse.createQuickFilterToolbar=function(quickFilterStore,config){config=Ext.isDefined(config)?config:{};var internalFilterStore=new Ext.data.Store({hasMultiSort:!0,multiSortInfo:{sorters:[{field:"dimensionName",direction:"ASC"}]},reader:new Ext.data.JsonReader({},XDMoD.DataWarehouse.quickFilterStore.recordType),containsQuickFilterRecord:function(quickFilterRecord){return 0<=this.findQuickFilterRecordIndex(quickFilterRecord)},findQuickFilterRecordIndex:function(quickFilterRecord){return this.findBy(function(storeRecord){return quickFilterRecord.get("dimensionId")===storeRecord.get("dimensionId")&&quickFilterRecord.get("valueId")===storeRecord.get("valueId")})}}),quickFilterToolbar=new Ext.Toolbar(Ext.apply({addFilter:function(quickFilterRecord){internalFilterStore.containsQuickFilterRecord(quickFilterRecord)||internalFilterStore.addSorted(quickFilterRecord.copy())},deleteFilter:function(quickFilterRecord){var quickFilterRecordIndex=internalFilterStore.findQuickFilterRecordIndex(quickFilterRecord);quickFilterRecordIndex<0||internalFilterStore.removeAt(quickFilterRecordIndex)},onStoreChange:function(){var itemsToRemove=[];this.items.each(function(item){item.addedByQuickFilterToolbar&&itemsToRemove.push(item)},this),Ext.each(itemsToRemove,function(item){this.remove(item)},this);var currentDimensionName=null;internalFilterStore.each(function(quickFilterRecord){var dimensionName=quickFilterRecord.get("dimensionName");dimensionName!==currentDimensionName&&(0<this.items.getCount()&&this.add(new Ext.Toolbar.Separator({addedByQuickFilterToolbar:!0})),this.add(new Ext.Toolbar.TextItem({html:"<b>"+Ext.util.Format.htmlEncode(dimensionName)+":</b> ",addedByQuickFilterToolbar:!0})),currentDimensionName=dimensionName),this.add(new Ext.Toolbar.TextItem({html:Ext.util.Format.htmlEncode(quickFilterRecord.get("valueName")),addedByQuickFilterToolbar:!0})),this.add(new Ext.Button({iconCls:"delete_filter",addedByQuickFilterToolbar:!0,quickFilterRecord:quickFilterRecord,listeners:{click:function(button){quickFilterToolbar.deleteFilter(button.quickFilterRecord)}}}))},this),0<this.items.getCount()?(this.show(),this.doLayout()):this.hide()}},config));return internalFilterStore.on("add",quickFilterToolbar.onStoreChange,quickFilterToolbar),internalFilterStore.on("load",quickFilterToolbar.onStoreChange,quickFilterToolbar),internalFilterStore.on("remove",quickFilterToolbar.onStoreChange,quickFilterToolbar),internalFilterStore.on("update",quickFilterToolbar.onStoreChange,quickFilterToolbar),quickFilterStore.on("update",function(thisStore,quickFilterRecord){quickFilterRecord.get("checked")?quickFilterToolbar.addFilter(quickFilterRecord):quickFilterToolbar.deleteFilter(quickFilterRecord)}),internalFilterStore.on("remove",function(thisStore,quickFilterRecord){quickFilterStore.setFilterChecked(quickFilterRecord,!1)}),quickFilterStore.each(function(quickFilterRecord){quickFilterRecord.get("checked")&&quickFilterToolbar.addFilter(quickFilterRecord)}),quickFilterToolbar},Ext.namespace("XDMoD"),XDMoD.ChartThumbPreview=Ext.extend(Ext.Window,{initComponent:function(){var self=this,btnClose=new Ext.Button({text:"Close",iconCls:"general_btn_close",handler:function(){self.close()}});self.on("close",function(){XDMoD.TrackEvent("Report Generator","Closed chart preview window")}),Ext.apply(this,{resizable:!1,width:815,height:660,modal:!0,title:self.title,bbar:{items:[{xtype:"tbtext",text:self.timeframe_desc},"->",btnClose]},html:'<img src="'+self.ref+'">'}),XDMoD.ChartThumbPreview.superclass.initComponent.call(this)}}),Ext.namespace("XDMoD.Reporting"),XDMoD.Reporting.ReportExportMenu=Ext.extend(Ext.Button,{sendMode:!1,exportItemHandler:function(b,f){alert("handler for format "+f)},initComponent:function(){var self=this;null==self.instance_module&&(self.instance_module="");var preHandler=function(output_format){XDMoD.TrackEvent("Report Generator ("+self.instance_module+")","Clicked on "+(1==self.sendMode?"Send Now":"Download")+" -> "+output_format)};Ext.apply(this,{iconCls:1==self.sendMode?"btn_send":"btn_download",text:1==self.sendMode?"Send Now":"Download",tooltip:1==self.sendMode?"Builds and e-mails the selected report.":"Builds and presents the selected report as an attachment.",menu:new Ext.menu.Menu({items:[{iconCls:"pdf_icon",text:"As PDF",handler:function(){preHandler("As PDF"),self.exportItemHandler(!self.sendMode,"pdf")}},{iconCls:"msword_icon",text:"As Word Document",handler:function(){preHandler("As Word Document"),self.exportItemHandler(!self.sendMode,"doc")}}]})}),XDMoD.Reporting.ReportExportMenu.superclass.initComponent.call(this)}}),Ext.namespace("XDMoD.Reporting"),XDMoD.Reporting.ReportCloneMenu=Ext.extend(Ext.Button,{selectedReportHandler:Ext.emptyFn,selectedTemplateHandler:Ext.emptyFn,initComponent:function(){var self=this,mnuTemplates=new Ext.menu.Menu({items:[]}),selectedReportOption={iconCls:"btn_selected_report",text:"Selected Report",handler:function(){self.selectedReportHandler()}},reportTemplates=[];self.setSelectedReport=function(n){selectedReportOption.text="Selected Report: <b>"+n+"</b>"};var getResourceProviderSubmenu=function(template_id){var resourceProviderSubmenu=new Ext.menu.Menu,assignedRPs=CCR.xdmod.enumAssignedResourceProviders(),submenuConfig={rpCount:0};for(rp in assignedRPs)submenuConfig.rpCount++,1==submenuConfig.rpCount&&(submenuConfig.first_rp_id=rp),resourceProviderSubmenu.addItem({text:assignedRPs[rp],iconCls:"btn_resource_provider",rp_id:rp,handler:function(){XDMoD.TrackEvent("Report Generator (My Reports)","New Based On button clicked","SP Quarterly Report -> "+this.text+" (RP_ID: "+this.rp_id+")"),self.selectedTemplateHandler(template_id,this.rp_id)}});return submenuConfig.submenu=resourceProviderSubmenu,submenuConfig};self.toggleReportSelection=function(b){for(mnuTemplates.removeAll(),1==b&&(mnuTemplates.addItem(selectedReportOption),mnuTemplates.addItem("-")),i=0;i<reportTemplates.length;i++){var menuConfig=getResourceProviderSubmenu(reportTemplates[i].templateId);1<menuConfig.rpCount&&1==reportTemplates[i].useSubmenu?Ext.apply(reportTemplates[i],{menu:menuConfig.submenu}):Ext.apply(reportTemplates[i],{template_id:reportTemplates[i].templateId,template_text:reportTemplates[i].text.replace(/<\/*b>/g,""),handler:function(){XDMoD.TrackEvent("Report Generator","New Based On button clicked",this.template_text+" (RP_ID: "+menuConfig.first_rp_id+")"),self.selectedTemplateHandler(this.template_id,menuConfig.first_rp_id)}}),mnuTemplates.addItem(reportTemplates[i])}},Ext.apply(this,{iconCls:"btn_new_based_on",text:"New Based On",tooltip:"Uses a copy of the selected report or template as the basis for a new report.",menu:mnuTemplates}),XDMoD.Reporting.ReportCloneMenu.superclass.initComponent.call(this),(new Ext.data.Connection).request({url:"controllers/report_builder.php",params:{operation:"enum_templates"},method:"POST",callback:function(options,success,response){if(success){var reportData=Ext.decode(response.responseText);for(t=0;t<reportData.templates.length;t++)reportTemplates.push({iconCls:"btn_report_template",text:"Template: <b>"+reportData.templates[t].name+"</b>",templateId:reportData.templates[t].id,useSubmenu:reportData.templates[t].use_submenu});self.templateLoadHandler(reportData.templates.length)}self.toggleReportSelection(!1)}})}}),Ext.namespace("XDMoD.Reporting"),XDMoD.Reporting.ChartDateEditor=Ext.extend(Ext.Window,{title:"Edit Chart Timeframe",width:300,height:110,resizable:!1,modal:!0,draggable:!1,layout:"fit",bodyStyle:"padding: 5px;",closeAction:"hide",cls:"chart_date_editor",activeChartID:-1,reportCreatorPanel:null,setCreatorPanel:function(creatorPanel){this.reportCreatorPanel=creatorPanel},getDefaultChartTimeframe:function(chart_id){var recorded_timeframe_label=XDMoD.Reporting.getParamIn("timeframe_label",chart_id,"&"),timeframe={};if("user defined"==recorded_timeframe_label.toLowerCase())timeframe.start_date=XDMoD.Reporting.getParamIn("start_date",chart_id,"&"),timeframe.end_date=XDMoD.Reporting.getParamIn("end_date",chart_id,"&");else{var endpoints=(new DateUtilities).getEndpoints(recorded_timeframe_label);timeframe.start_date=endpoints.start_date,timeframe.end_date=endpoints.end_date}return timeframe.type=recorded_timeframe_label,timeframe},reset:function(config,store_id,record_id){var default_timeframe=this.getDefaultChartTimeframe(config.chart_id),trackingConfig=XDMoD.Reporting.GetTrackingConfig(store_id,record_id,{original_chart_timeframe_type:default_timeframe.type,original_start_date:default_timeframe.start_date,original_end_date:default_timeframe.end_date});XDMoD.TrackEvent("Report Generator (Report Editor)","Clicked on the Reset Timeframe icon",Ext.encode(trackingConfig)),this.updateChartEntry({chart_id:config.chart_id,timeframe_type:default_timeframe.type,start_date:default_timeframe.start_date,end_date:default_timeframe.end_date}),this.reportCreatorPanel.dirtyConfig()},updateChartEntry:function(config){var store=this.reportCreatorPanel.reportCharts.reportStore,localContent={queue:[]};store.data.each(function(){if(config.chart_id==this.data.chart_id){this.data.timeframe_type=config.timeframe_type,this.data.chart_date_description=config.start_date+" to "+config.end_date;var renderer_params="&start="+config.start_date+"&end="+config.end_date;this.data.thumbnail_link=this.data.thumbnail_link.replace("type=report","type=cached"+renderer_params),this.data.thumbnail_link=this.data.thumbnail_link.replace(/type=cached&start=(.+)&end=(.+)&ref=/,"type=cached"+renderer_params+"&ref="),-1==this.data.thumbnail_link.indexOf("start=")&&(this.data.thumbnail_link=this.data.thumbnail_link.replace("type=volatile","type=volatile"+renderer_params)),this.data.thumbnail_link=this.data.thumbnail_link.replace(/type=volatile&start=(.+)&end=(.+)&ref=/,"type=volatile"+renderer_params+"&ref=")}localContent.queue.push(this.data)}),store.loadData(localContent)},mnuPeriodicTimeframe:null,start_date_field:null,end_date_field:null,initComponent:function(){var self=this,today=new Date,date_utils=new DateUtilities;self.getMode=function(){return rdoGrpTimeframeMode.items.get(0).getValue()?"Specific":rdoGrpTimeframeMode.items.get(1).getValue()?"Periodic":void 0},self.present=function(config,store_id,record_id,batch_mode){var chart_config,coords=Ext.EventObject.getXY(),x_offset=coords[0],y_offset=coords[1];if(this.show(),this.setPagePosition(x_offset,y_offset-this.height-10),null==batch_mode&&(batch_mode=!1),1==(this.batchMode=batch_mode))this.setTitle("Edit Multiple Chart Timeframes"),this.batchItems=config,XDMoD.TrackEvent("Report Generator (Report Editor)","Opened Chart Date Editor (batch mode)",this.batchItems.length+" entries"),chart_config=config[0];else{var trackingConfig=XDMoD.Reporting.GetTrackingConfig(store_id,record_id);XDMoD.TrackEvent("Report Generator (Report Editor)","Opened Chart Date Editor",Ext.encode(trackingConfig)),this.setTitle("Edit Chart Timeframe"),this.activeChartID=config.chart_id,chart_config=config}chart_config.type&&"user defined"===chart_config.type.toLowerCase()?(rdoGrpTimeframeMode.items.get(0).setValue(!0),this.start_date_field.setValue(chart_config.start),this.end_date_field.setValue(chart_config.end)):(rdoGrpTimeframeMode.items.get(1).setValue(!0),this.mnuPeriodicTimeframe.setText(chart_config.window))},self.mnuPeriodicTimeframe=new Ext.Button({scope:this,width:90,text:"Month To Date",tooltip:"Set the periodic window",cls:"no-icon-menu",menu:new Ext.menu.Menu({plain:!0,showSeparator:!1,cls:"no-icon-menu",items:[{text:"Yesterday"},{text:"7 Day"},{text:"30 Day"},{text:"90 Day"},{text:'Month To Date <b style="color: #00f">('+date_utils.displayTimeframeDates("Month To Date")+")</b>"},{text:'Quarter To Date <b style="color: #00f">('+date_utils.displayTimeframeDates("Quarter To Date")+")</b>"},{text:'Year To Date <b style="color: #00f">('+date_utils.displayTimeframeDates("Year To Date")+")</b>"},{text:'Previous Month <b style="color: #00f">('+date_utils.getPreviousMonthName()+")</b>"},{text:'Previous Quarter <b style="color: #00f">('+date_utils.displayTimeframeDates("Previous Quarter")+")</b>"},{text:'Previous Year <b style="color: #00f">('+(today.getFullYear()-1)+")</b>"},{text:"1 Year"},{text:"2 Year"},{text:"3 Year"},{text:"5 Year"},{text:"10 Year"},{text:today.getFullYear()},{text:today.getFullYear()-1},{text:today.getFullYear()-2},{text:today.getFullYear()-3},{text:today.getFullYear()-4},{text:today.getFullYear()-5},{text:today.getFullYear()-6}],listeners:{itemclick:{fn:function(baseItem,e){var selectedItem=baseItem.text.toString().split(" <b")[0];XDMoD.TrackEvent("Report Generator (Report Editor)","Chart Date Editor -> Selected Periodic Timeframe from drop-down menu",selectedItem),self.mnuPeriodicTimeframe.setText(selectedItem)}}}})}),this.start_date_field=new Ext.form.DateField({height:30,width:90,format:"Y-m-d",id:"report_generator_edit_date_start_date_field"}),this.end_date_field=new Ext.form.DateField({height:30,width:90,format:"Y-m-d",id:"report_generator_edit_date_end_date_field"}),this.start_date_field.on("select",function(dp,sel_date){XDMoD.TrackEvent("Report Generator (Report Editor)","Chart Date Editor -> Selected start date from date picker",dp.getRawValue()),dp.startValue=sel_date}),this.end_date_field.on("select",function(dp,sel_date){XDMoD.TrackEvent("Report Generator (Report Editor)","Chart Date Editor -> Selected end date from date picker",dp.getRawValue()),dp.startValue=sel_date}),this.start_date_field.on("change",function(dp,new_val,old_val){XDMoD.TrackEvent("Report Generator (Report Editor)","Chart Date Editor -> Manually entered start date",dp.getRawValue())}),this.end_date_field.on("change",function(dp,new_val,old_val){XDMoD.TrackEvent("Report Generator (Report Editor)","Chart Date Editor -> Manually entered end date",dp.getRawValue())});var pnlTimeframeMode=new Ext.Panel({region:"center",height:30,layout:"card",activeItem:1,border:!1,baseCls:"x-plain",items:[new Ext.Panel({anchor:"100%",baseCls:"x-plain",layout:"hbox",defaults:{margins:"7 0 0 4"},items:[self.mnuPeriodicTimeframe]}),new Ext.Panel({anchor:"100%",baseCls:"x-plain",layout:"hbox",defaults:{margins:"8 0 0 4"},items:[self.start_date_field,{xtype:"tbtext",text:"to",margins:"10 0 0 3"},self.end_date_field]})]}),btnCancel=new Ext.Button({iconCls:"chart_date_editor_cancel_button",text:"Cancel",handler:function(){self.hide()}}),btnUpdate=new Ext.Button({iconCls:"chart_date_editor_update_button",text:"Update",handler:function(){XDMoD.TrackEvent("Report Generator (Report Editor)","Chart Date Editor -> Clicked on Update button");var message,customdelay,delay,new_start_date="",new_end_date="",new_timeframe_label="";if("Specific"==self.getMode()){var response=dateRangeValidator(self.start_date_field.getRawValue(),self.end_date_field.getRawValue());if(0==response.success)return message=response.message,delay=customdelay||2e3,btnCancel.setDisabled(!0),btnUpdate.setDisabled(!0),cPanel.getEl().mask('<div class="overlay_message" style="color: #f00">'+message+"</div>"),void function(){btnCancel.setDisabled(!1),btnUpdate.setDisabled(!1),cPanel.getEl().unmask()}.defer(delay);new_timeframe_label="User Defined",new_start_date=self.start_date_field.getRawValue(),new_end_date=self.end_date_field.getRawValue()}if("Periodic"==self.getMode()){var endpoints=date_utils.getEndpoints(self.mnuPeriodicTimeframe.getText());new_timeframe_label=self.mnuPeriodicTimeframe.getText(),new_start_date=endpoints.start_date,new_end_date=endpoints.end_date}if(XDMoD.TrackEvent("Report Generator (Report Editor)","Updated timeframe of selected chart(s)",new_start_date+" to "+new_end_date+" ("+new_timeframe_label+")"),1==self.batchMode)for(var c=0;c<self.batchItems.length;c++)self.updateChartEntry({chart_id:self.batchItems[c].chart_id,timeframe_type:new_timeframe_label,start_date:new_start_date,end_date:new_end_date});else self.updateChartEntry({chart_id:self.activeChartID,timeframe_type:new_timeframe_label,start_date:new_start_date,end_date:new_end_date});self.hide(),self.reportCreatorPanel.dirtyConfig()}}),rdoGrpTimeframeMode=new Ext.form.RadioGroup({height:200,defaultType:"radio",columns:1,cls:"custom_search_mode_group",width:70,vertical:!0,region:"west",items:[{boxLabel:"Specific",checked:!0,name:"report_creator_chart_entry",inputValue:"Specific"},{boxLabel:"Periodic",name:"report_creator_chart_entry",inputValue:"Periodic"}],listeners:{change:function(rg,rc){XDMoD.TrackEvent("Report Generator (Report Editor)","Chart Date Editor -> Selected "+rc.inputValue+" option"),"Specific"==rc.inputValue&&pnlTimeframeMode.getLayout().setActiveItem(1),"Periodic"==rc.inputValue&&pnlTimeframeMode.getLayout().setActiveItem(0)}}}),cPanel=new Ext.Panel({layout:"border",border:!1,items:[rdoGrpTimeframeMode,pnlTimeframeMode]});self.on("hide",function(){XDMoD.TrackEvent("Report Generator (Report Editor)","Closed Chart Date Editor")}),Ext.apply(this,{iconCls:"custom_date",cls:"chart_date_editor",items:[cPanel],bbar:{items:[btnUpdate,"->",btnCancel]}}),XDMoD.Reporting.ChartDateEditor.superclass.initComponent.call(this)}}),Ext.namespace("XDMoD.Reporting","XDMoD.Reporting.Singleton"),XDMoD.Reporting.GetTrackingConfigFromRecord=function(record_ref){return{chart_title:truncateText(record_ref.data.chart_title),chart_date_description:record_ref.data.chart_date_description,chart_drill_details:truncateText(record_ref.data.chart_drill_details),chart_timeframe_type:record_ref.data.timeframe_type}},XDMoD.Reporting.GetTrackingConfig=function(store_id,record_id,config){var record_ref=Ext.StoreMgr.lookup(store_id).getById(record_id),trackingConfig=XDMoD.Reporting.GetTrackingConfigFromRecord(record_ref);return config&&Ext.apply(trackingConfig,config),trackingConfig},XDMoD.Reporting.EditBarReveal=function(i,b){document.getElementById(i).style.visibility=b?"visible":"hidden"},XDMoD.Reporting.PreviewThumb=function(ref,title,timeframe_desc,store_id,record_id){var active_view="report_generator_included_charts_store"==store_id?"Report Editor":"Available Charts",trackingConfig=XDMoD.Reporting.GetTrackingConfig(store_id,record_id);XDMoD.TrackEvent("Report Generator ("+active_view+")","Clicked on preview icon for chart entry",Ext.encode(trackingConfig)),new XDMoD.ChartThumbPreview({ref:ref,title:title,timeframe_desc:timeframe_desc}).show()},XDMoD.Reporting.Singleton.ChartDateEditor=new XDMoD.Reporting.ChartDateEditor,XDMoD.Reporting.Singleton.DrillDetails=function(evt,ttid,drill_details){0==drill_details.length&&(drill_details="Category = "+CCR.xdmod.org_abbrev);for(var details=drill_details.split(" -- "),tbl='<table border=0 cellspacing=0 class="report_generator_tooltip_drill_details">',i=0;i<details.length;i++){var b=i%2?"#ddddff":"#eeeeee",param=details[i].split(" = ")[0],param_value=details[i].split(" = ")[1];tbl+=null!=param_value?'<tr bgcolor="'+b+'"><td valign=top width=160><b>'+param+"</b></td><td valign=top width=160>"+param_value+"</td></tr>":"<tr><td width=320 valign=top>"+param+"</td></tr>"}tbl+="</table>";var tt=new Ext.ToolTip({title:'<table border=0><tr><td><img src="gui/images/info.png"></td><td><b class="report_generator_tooltip_drill_details_header">Chart Details</b></td></tr></table>',anchor:"right",width:220,autoHide:!0,target:ttid,dismissDelay:1e4,html:tbl});tt.on("hide",function(t){t.destroy()}),tt.show()},XDMoD.Reporting.getParamIn=function(param,haystack,delimiter){delimiter||(delimiter="/"),-1<haystack.indexOf("?")&&(haystack=haystack.split("?")[1]);var f=haystack.split(delimiter);for(g=0;g<f.length;g++){if(-1<f[g].indexOf(param))return f[g].split("=")[1]}},XDMoD.Reporting.renderDateUsingFormat=function(d){var d_day=""+d.getDate();1==d_day.length&&(d_day="0"+d_day);var d_month=""+(d.getMonth()+1);return 1==d_month.length&&(d_month="0"+d_month),d.getFullYear()+"-"+d_month+"-"+d_day},XDMoD.Reporting.colorWrap=function(val,colorHex){return'<span style="color: '+colorHex+'">'+val+"</span>"},XDMoD.Reporting.chartDetailsRenderer=function(val,metaData,record,rowIndex,colIndex,store){var duplication_id="",entryData=store.getAt(rowIndex).data,chartTitle=entryData.chart_title.replace(/^\s+|\s+$/g,""),chartTitleColor="#00f";0==chartTitle.length&&(chartTitle="Untitled Chart",chartTitleColor="#888");var cleanedChartTitle=chartTitle;-1==chartTitle.indexOf("by")?chartTitle+="<br />&nbsp;":chartTitle=chartTitle.replace("by","<br /> by");var s_date=entryData.chart_date_description.split(" to ")[0],e_date=entryData.chart_date_description.split(" to ")[1];if("user defined"!=entryData.timeframe_type.toLowerCase()){var endpoints=(new DateUtilities).getEndpoints(entryData.timeframe_type);s_date=endpoints.start_date,e_date=endpoints.end_date,entryData.chart_date_description=s_date+" to "+e_date,entryData.thumbnail_link=entryData.thumbnail_link.replace(/start_date=\d{4}-\d{2}-\d{2}/,"start_date="+s_date),entryData.thumbnail_link=entryData.thumbnail_link.replace(/end_date=\d{4}-\d{2}-\d{2}/,"end_date="+e_date)}var chartDateEditFloater="",chart_entry_timeframe='<div style="margin-top: 2px">'+XDMoD.Reporting.colorWrap(entryData.chart_date_description,"#888")+"</div>";if("report_generator_included_charts_store"==store.storeId){entryData.thumbnail_link=entryData.thumbnail_link.replace("type=chart_pool","type=volatile"),null!=record.data.duplicate_id&&0<record.data.duplicate_id.length&&(duplication_id="&did="+record.data.duplicate_id);var editorConfig="{type:'"+entryData.timeframe_type;"user defined"==entryData.timeframe_type.toLowerCase()?editorConfig+="', start: '"+s_date+"', end: '"+e_date+"'":editorConfig+="', window: '"+entryData.timeframe_type+"'",editorConfig+=", chart_id: '"+entryData.chart_id+"'",editorConfig+="}";var recorded_timeframe_label=XDMoD.Reporting.getParamIn("timeframe_label",entryData.chart_id,"&"),reset_link="<br />&nbsp;",use_reset_link=!1;if(entryData.timeframe_type.toLowerCase()!=recorded_timeframe_label.toLowerCase()&&(use_reset_link=!0),entryData.timeframe_type.toLowerCase()==recorded_timeframe_label.toLowerCase()&&"user defined"==entryData.timeframe_type.toLowerCase()){var orig_start_date=XDMoD.Reporting.getParamIn("start_date",entryData.chart_id,"&"),orig_end_date=XDMoD.Reporting.getParamIn("end_date",entryData.chart_id,"&");use_reset_link=s_date!=orig_start_date||e_date!=orig_end_date}use_reset_link&&(reset_link='<br /><a style="text-decoration: none" href="javascript:void(0)" onClick="XDMoD.Reporting.Singleton.ChartDateEditor.reset('+editorConfig+", '"+[store.storeId,record.id].join("', '")+'\')"><img title="Reset Timeframe" style="margin-top: 3px" src="gui/images/arrow_undo.png"></a>');var thumb_details={label:"View As Chart",image:"chart_bar.png"};"datasheet"==entryData.type&&(thumb_details={label:"View As Datasheet",image:"table.png"}),thumb_details.label="";thumb_details.image="";var timeframe_selector='<a style="text-decoration: none" href="javascript:void(0)" onClick="XDMoD.Reporting.Singleton.ChartDateEditor.present('+editorConfig+", '"+[store.storeId,record.id].join("', '")+'\')"><img title="Change Timeframe" src="gui/images/date_edit.png"></a>'+reset_link;chart_entry_timeframe='<div style="margin-top: 2px">'+entryData.chart_date_description+"</div>",chartDateEditFloater='<div style="float: left; padding-right: 2px; margin-top: 0px">'+timeframe_selector+"</div>"}var img_id="imgthumb_"+Ext.id(),ttip_id="info_ttip_"+Ext.id(),ebar_id="edit_bar_"+Ext.id();return'<div><div style="float: right; border: 1px solid #bbb" onMouseOver="XDMoD.Reporting.EditBarReveal(\''+ebar_id+"', true)\" onMouseOut=\"XDMoD.Reporting.EditBarReveal('"+ebar_id+"', false)\"><img width=180 height=84 onload=\"dismissPlaceholder('"+img_id+'\')" src="'+entryData.thumbnail_link+XDMoD.REST.token+duplication_id+'"/><div id="'+ebar_id+'" style="cursor: pointer; visibility: hidden; margin-left: 156px; margin-top: -24px"><img src="gui/images/report_thumb_mag.png" onClick="XDMoD.Reporting.PreviewThumb(\''+entryData.thumbnail_link+XDMoD.REST.token+duplication_id+"', '"+cleanedChartTitle+"', '"+entryData.chart_date_description+" ("+entryData.timeframe_type+")', '"+store.storeId+"', '"+record.id+'\')"></div></div><div id="'+img_id+'" style="float: right; border: 1px solid #bbb; position: relative; left: 182px"><img width=180 height=84 src="gui/images/report_gen_thumbnail_progress.png"/></div><div class="report_generator_grid_chart_item_renderer" style="float: left;><div style="float: left; padding-right: 3px"><img id="'+ttip_id+'" src="gui/images/info.png" onmouseover="XDMoD.Reporting.Singleton.DrillDetails(event, \''+ttip_id+"', '"+entryData.chart_drill_details+"')\"></div><div>"+XDMoD.Reporting.colorWrap(chartTitle,chartTitleColor)+"</div><br />"+chartDateEditFloater+chart_entry_timeframe+'<div style="margin-top: 5px">'+XDMoD.Reporting.colorWrap(entryData.timeframe_type,"#444")+"</div></div></div>"},XDMoD.Reporting.CheckboxRegistry={},CCR.xdmod.ReportCheckbox=Ext.extend(Ext.form.Checkbox,{loadedChartArgs:"",loadedChartTitle:"",loadedChartDrillDetails:"",loadedChartDateDescription:"",storeChartArguments:function(chart_args,title,drill_details,start_date,end_date,included_in_report){var escaped_chart_args=chart_args.replace(title,encodeURIComponent(title).replace(/@/g,"%40").replace(/\*/g,"%2A").replace(/\//g,"%2F").replace(/\+/g,"%2B").replace(/%20/g,"+"));XDMoD.Reporting.CheckboxRegistry[this.module].chart_id=escaped_chart_args,XDMoD.Reporting.CheckboxRegistry[this.module].checked="y"==included_in_report||1==included_in_report,this.loadedChartArgs=chart_args,this.loadedChartTitle=title,this.loadedChartDrillDetails=drill_details,this.loadedChartDateDescription=start_date+" to "+end_date,this.un("check",this.toggleReportInclusion),this.setValue("y"==included_in_report||1==included_in_report),this.on("check",this.toggleReportInclusion)},silentCheckToggle:function(checked){this.un("check",this.toggleReportInclusion),this.setValue(checked),this.on("check",this.toggleReportInclusion),XDMoD.Reporting.CheckboxRegistry[this.module].checked=checked},toggleReportInclusion:function(checkbox,checked){XDMoD.Reporting.CheckboxRegistry[this.module].checked=checked;var conn=new Ext.data.Connection,cb_module=checkbox.module?checkbox.module:"metric_explorer",objParams={operation:checked?"add_to_queue":"remove_from_queue",chart_id:checkbox.loadedChartArgs,chart_title:checkbox.loadedChartTitle,chart_drill_details:checkbox.loadedChartDrillDetails,chart_date_desc:checkbox.loadedChartDateDescription,module:cb_module};this.fireEvent("toggled_checkbox",checked?"add_to_queue":"remove_from_queue"),conn.request({url:"controllers/chart_pool.php",params:objParams,method:"POST",callback:function(options,success,response){success&&(success=CCR.checkJSONResponseSuccess(response)),success?(CCR.xdmod.ui.reportGenerator.chartPoolStore&&CCR.xdmod.ui.reportGenerator.chartPoolStore.reload(),CCR.xdmod.ui.toastMessage("Toggle Chart","Complete")):CCR.xdmod.ui.presentFailureResponse(response,{title:"Report Builder",wrapperMessage:"There was a problem managing the report queue."})}})},initComponent:function(){this.addEvents("toggled_checkbox"),this.on("check",this.toggleReportInclusion),this.getModule=function(){return this.module},Ext.apply(this,{boxLabel:"Available For Report"}),CCR.xdmod.ReportCheckbox.superclass.initComponent.call(this),XDMoD.Reporting.CheckboxRegistry[this.module]={ref:this,chart_id:"",checked:!1}}}),Ext.namespace("XDMoD"),XDMoD.ReportManager=Ext.extend(Ext.Panel,{switchView:function(id){rpanel=this.getLayout(),"card"!=rpanel&&rpanel.setActiveItem(id)},buildReport:function(report_name,report_id,target_child,build_only,format){null==format&&(format="pdf"),build_only?XDMoD.TrackEvent("Report Generator","Attempting to build and download report"):XDMoD.TrackEvent("Report Generator","Attempting to build and send report");var action=build_only?"downloading":"sending";XDMoD.TrackEvent("Report Generator","Building report",Ext.encode({name:report_name,action:action,format:format}));var activity=build_only?"Preparing report for download":"Generating and sending report";target_child.showMask("<center>"+activity+"<br /><b>"+report_name+'</b><br /><img src="gui/images/progbar_2.gif"><br />Please Wait</center>'),new Ext.data.Connection({timeout:6e5}).request({url:"controllers/report_builder.php",params:{operation:"send_report",report_id:report_id,build_only:build_only,export_format:format},method:"POST",callback:function(options,success,response){var responseData;if(success&&(responseData=CCR.safelyDecodeJSONResponse(response),success=CCR.checkDecodedJSONResponseSuccess(responseData)),success){XDMoD.TrackEvent("Report Generator","Building of report complete",Ext.encode({name:report_name,format:format}));var location="controllers/report_builder.php/"+responseData.report_name+"?operation=download_report&report_loc="+responseData.report_loc+"&format="+format,activeTemplate='<center><br /><img src="gui/images/checkmark.png"><br /><br /><div style="color: #080; border: none">'+responseData.message+"</div></center>";if(responseData.build_only)new Ext.Window({title:"Report Built",width:220,height:120,resizable:!1,closeAction:"close",layout:"border",cls:"wnd_report_built",listeners:{close:function(){XDMoD.TrackEvent("Report Generator","Closed Report Built confirmation window")}},items:[new Ext.Panel({region:"west",width:70,html:'<img src="gui/images/report_icon_wnd.png">',baseCls:"x-plain"}),new Ext.Panel({region:"center",width:150,layout:"border",margins:"5 5 5 5",items:[new Ext.Panel({region:"center",html:"Your report has been built and can now be viewed.",baseCls:"x-plain"}),new Ext.Button({region:"south",text:"View Report",handler:function(){XDMoD.TrackEvent("Report Generator","Clicked on View Report button in Report Built window"),window.open(location)}})]})]}).show();target_child.showMask(activeTemplate),function(){target_child.hideMask()}.defer(3e3)}else CCR.xdmod.ui.presentFailureResponse(response,{title:"Report Manager",wrapperMessage:"There was a problem trying to prepare the report."}),target_child.hideMask()}})},initComponent:function(){this.reportsOverview=new XDMoD.ReportsOverview({parent:this}),this.reportCreator=new XDMoD.ReportCreator({parent:this}),this.reportCreator.on("show",function(p){XDMoD.Reporting.Singleton.ChartDateEditor.setCreatorPanel(p)}),this.reportPreview=new XDMoD.ReportPreview({parent:this}),Ext.apply(this,{layout:"card",margins:"2 5 5 2",activeItem:0,border:!1,items:[this.reportsOverview,this.reportCreator,this.reportPreview]}),XDMoD.ReportManager.superclass.initComponent.call(this)}}),Ext.namespace("XDMoD"),XDMoD.AvailableCharts=Ext.extend(Ext.Panel,{qstore:null,modal:!0,minSize:500,resizable:!0,closeAction:"close",cls:"available_charts",plugins:[new XDMoD.Plugins.ContextSensitiveHelper("available+charts")],reportStore:null,reloadQueue:function(){this.reportStore.reload()},initComponent:function(){var self=this,footer_text=new Ext.Toolbar.TextItem({cls:"fbar_report_chart_status",text:"No charts"});this.reportStore=new Ext.data.JsonStore({autoDestroy:!1,id:Ext.id(),root:"queue",baseParams:{operation:"enum_available_charts"},fields:["chart_id","thumbnail_link","chart_title","chart_drill_details","chart_date_description","type","timeframe_type"],valueField:"chart_id",proxy:new Ext.data.HttpProxy({method:"POST",url:"controllers/report_builder.php"}),listeners:{load:{fn:function(store,records,options){store.reader.jsonData.charts_in_other_roles,btnDeleteChart.setDisabled(!0),updateChartCountText()}}}});var updateChartCountText=function(){var suffix=1!=self.reportStore.getTotalCount()?"s":"",prefix=0!=self.reportStore.getTotalCount()?self.reportStore.getTotalCount():"No";footer_text.setText(prefix+" chart"+suffix)},grid_rowclick_suppression_flag=!1,checkBoxSelMod=new Ext.grid.CheckboxSelectionModel({singleSelect:!1,listeners:{beforerowselect:function(selectionModel,rowIndex,keepExisting,record){grid_rowclick_suppression_flag=!0},rowselect:function(selectionModel,rowIndex,record){var selectedRows=selectionModel.getSelections();btnDeleteChart.setDisabled(0==selectedRows.length)},rowdeselect:function(selectionModel,rowIndex,record){var selectedRows=selectionModel.getSelections();btnDeleteChart.setDisabled(0==selectedRows.length)}}}),gridEmptyText='<b>No charts have been added.</b><br/><br/>Charts can be added in one of the following ways:<br/><br/><div style="padding: 5px; background-color: #faffc2; border: 1px solid #ccc">Go to the <b>Usage</b> tab, navigate to a chart of interest, then check the <b>Available For Report</b> checkbox in the top toolbar.</div><br/><div style="padding: 5px; background-color: #faffc2; border: 1px solid #ccc">Go to the <b>Metric Explorer</b> tab to generate a chart, then check the <b>Available For Report</b> checkbox in the top toolbar.</div><br/><br/><center><img src="gui/images/available_for_report.png"></center><br /><br/>'+CCR.xdmod.ui.createUserManualLink("chart+configuration+toolbar"),queueGrid=new Ext.grid.GridPanel({store:this.reportStore,viewConfig:{forceFit:!0,emptyText:gridEmptyText},width:300,autoScroll:!0,enableHdMenu:!1,selModel:checkBoxSelMod,ddGroup:"reportChartSource",ddText:"Drag To <b>Included Charts</b>",enableDragDrop:!0,columns:[{header:"Chart ID",width:10,dataIndex:"chart_id",sortable:!1,hidden:!0},{header:"Chart",width:200,renderer:XDMoD.Reporting.chartDetailsRenderer,sortable:!0}],loadMask:!0});queueGrid.getSelectionModel().on("rowselect",function(sm,row_index,rec){var trackingConfig=XDMoD.Reporting.GetTrackingConfigFromRecord(rec);XDMoD.TrackEvent("Report Generator (Available Charts)","Entry selected",Ext.encode(trackingConfig))}),queueGrid.getSelectionModel().on("rowdeselect",function(sm,row_index,rec){var trackingConfig=XDMoD.Reporting.GetTrackingConfigFromRecord(rec);XDMoD.TrackEvent("Report Generator (Available Charts)","Entry de-selected",Ext.encode(trackingConfig))}),queueGrid.on("rowclick",function(grid,rowIndex,e){if(1!=grid_rowclick_suppression_flag){var target=e.getTarget(),sm=grid.getSelectionModel();"x-grid3-row-checker"==target.className&&sm.isSelected(rowIndex)&&sm.deselectRow(rowIndex,!1)}else grid_rowclick_suppression_flag=!1});var btnSelectMenu=new Ext.Button({iconCls:"btn_select",text:"Select",menu:new Ext.menu.Menu({items:[{text:"All Charts",iconCls:"btn_all_charts",handler:function(){XDMoD.TrackEvent("Report Generator (Available Charts)","Clicked on Select -> All Charts"),queueGrid.getSelectionModel().selectAll()}},{text:"No Charts",iconCls:"btn_no_charts",handler:function(){XDMoD.TrackEvent("Report Generator (Available Charts)","Clicked on Select -> No Charts"),queueGrid.getSelectionModel().clearSelections()}},{text:"Invert Selection",iconCls:"btn_invert_selection",handler:function(){XDMoD.TrackEvent("Report Generator (Available Charts)","Clicked on Select -> Invert Selection");for(var rowIndex=0,currentSelections=queueGrid.getSelectionModel().getSelections(),pendingSelections=[],map={},s=0;s<currentSelections.length;s++)map[currentSelections[s].id]=!0;queueGrid.getStore().each(function(rec){null==map[rec.id]&&pendingSelections.push(rowIndex),rowIndex++}),queueGrid.getSelectionModel().clearSelections(),queueGrid.getSelectionModel().selectRows(pendingSelections)}}]})}),btnDeleteChart=new Ext.Button({iconCls:"btn_delete",text:"Delete",disabled:!0,handler:function(){XDMoD.TrackEvent("Report Generator (Available Charts)","Clicked on the Delete button"),function(){var sm=queueGrid.getSelectionModel(),getData=queueGrid.getSelectionModel().getSelections();if(sm.hasSelection()){var submessage=1<getData.length?"these selected charts":"this selected chart",plural_suffix=1<getData.length?"s":"";Ext.Msg.show({maxWidth:800,minWidth:400,title:"Delete Selected Chart"+plural_suffix,msg:"Are you sure you want to delete "+submessage+"?",buttons:Ext.Msg.YESNO,fn:function(resp){if("yes"==resp){for(var objParams={operation:"remove_chart_from_pool"},i=0;i<getData.length;i++){var trackingConfig=XDMoD.Reporting.GetTrackingConfigFromRecord(getData[i]);XDMoD.TrackEvent("Report Generator (Available Charts)","Confirmed deletion of chart entry",Ext.encode(trackingConfig)),objParams["selected_chart_"+i]=getData[i].get("chart_id")}(new Ext.data.Connection).request({url:"controllers/report_builder.php",params:objParams,method:"POST",callback:function(options,success,response){var json;if(success&&(json=CCR.safelyDecodeJSONResponse(response),success=CCR.checkDecodedJSONResponseSuccess(json)),success){for(var module_id in self.reportStore.reload(),XDMoD.Reporting.CheckboxRegistry)if(void 0!==json.dropped_entries[module_id])for(d=0;d<json.dropped_entries[module_id].length;d++)json.dropped_entries[module_id][d]==XDMoD.Reporting.CheckboxRegistry[module_id].chart_id&&XDMoD.Reporting.CheckboxRegistry[module_id].ref.silentCheckToggle(!1)}else CCR.xdmod.ui.presentFailureResponse(response,{title:"Chart Pool",wrapperMessage:"There was a problem regarding the chart pool."})}})}else XDMoD.TrackEvent("Report Generator (Available Charts)","Cancelled delete confirmation dialog")},icon:Ext.MessageBox.QUESTION})}else Ext.MessageBox.show({title:"Warning",msg:"Please Select a Chart",width:150,buttons:Ext.MessageBox.OK})}()}});Ext.apply(this,{title:"Available Charts",layout:"fit",id:"chart_pool_panel",items:[queueGrid],tbar:{items:[btnSelectMenu,"->",btnDeleteChart]},bbar:{items:[footer_text]}}),this.reportStore.reload(),XDMoD.AvailableCharts.superclass.initComponent.call(this)},onRender:function(ct,position){this.reportStore.reload(),XDMoD.AvailableCharts.superclass.onRender.call(this,ct,position)}}),XDMoD.SaveReportAsDialog=Ext.extend(Ext.Window,{closable:!1,draggable:!1,resizable:!1,title:"Save Report As",initComponent:function(){var self=this,txtReportFileName=new Ext.form.TextField(Ext.apply({},{width:200,listeners:{blur:XDMoD.utils.trimOnBlur,invalid:XDMoD.utils.syncWindowShadow,valid:XDMoD.utils.syncWindowShadow}},XDMoD.ReportCreator.prototype.nameFieldConfig));self.present=function(evt,default_filename){0<default_filename.length&&txtReportFileName.setValue(default_filename+" (Copy)"),self.show();var targetLocation=evt.el.getXY();targetLocation[0]+=25,targetLocation[1]+=15,self.setPosition(targetLocation)},self.checkClick=function(event){event.within(self.getEl())||self.close()},self.on("afterrender",function(){(function(){Ext.EventManager.on(document,"click",self.checkClick,self)}).defer(400)}),self.on("close",function(){XDMoD.TrackEvent("Report Generator (Report Editor)","Dismissed Save Report As dialog via un-focus"),Ext.EventManager.un(document,"click",self.checkClick,self)});var pnlForm=new Ext.FormPanel({labelWidth:95,frame:!1,border:!1,bodyStyle:"padding:5px 7px 0",defaults:{width:200},labelAlign:"top",baseCls:"x-plain",cls:"no-underline-invalid-fields-form",items:[txtReportFileName]}),aCallback=function(success,msg){var message,styleColor;message=msg,styleColor=success?"#080":"#f00",mainContainer.getEl().mask('<div class="overlay_message" style="color:'+styleColor+'">'+message+"</div>"),function(){mainContainer.getEl().unmask()}.defer(2e3)},mainContainer=new Ext.Panel({width:223,border:!1,baseCls:"x-plain",items:[pnlForm],bbar:{items:[new Ext.Button({iconCls:"report_edit btn_save_as",text:"Save",handler:function(){pnlForm.getForm().isValid()&&(XDMoD.TrackEvent("Report Generator (Report Editor)","Clicked on Save in Save Report As dialog"),self.executeHandler(txtReportFileName.getValue(),aCallback))}}),"->",new Ext.Button({text:"Close",iconCls:"general_btn_close",handler:function(){XDMoD.TrackEvent("Report Generator (Report Editor)","Clicked on the Close button in the Save Report As dialog"),self.hide()}})]}});Ext.apply(this,{showSeparator:!1,width:237,items:[mainContainer]}),XDMoD.SaveReportAsDialog.superclass.initComponent.call(this)}}),Ext.namespace("XDMoD"),XDMoD.ReportCreatorGrid=Ext.extend(Ext.Panel,{id:"ReportCreatorGrid",qstore:null,modal:!0,resizable:!0,closeAction:"close",cls:"report_editor_charts",reportStore:null,reportChartsGrid:null,initComponent:function(){var self=this,footer_text=new Ext.Toolbar.TextItem({cls:"fbar_report_chart_status",text:"No charts"}),updateChartCountText=function(){var suffix=1!=queueGrid.store.data.length?"s":"",prefix=0!=queueGrid.store.data.length?queueGrid.store.data.length:"No";footer_text.setText(prefix+" chart"+suffix)};self.resetChartCount=function(){updateChartCountText()},this.reportStore=new Ext.data.JsonStore({storeId:"report_generator_included_charts_store",autoDestroy:!1,root:"queue",fields:["chart_id","thumbnail_link","chart_title","chart_drill_details","chart_date_description","type","timeframe_type","duplicate_id"],listeners:{load:{fn:function(store,records,options){updateChartCountText()}}}}),this.reportStore.on("beforeload",function(s,o){return!1});var grid_rowclick_suppression_flag=!1,checkBoxSelMod=new Ext.grid.CheckboxSelectionModel({singleSelect:!1,listeners:{beforerowselect:function(selectionModel,rowIndex,keepExisting,record){grid_rowclick_suppression_flag=!0},rowselect:function(selectionModel,rowIndex,record){var selectedRows=selectionModel.getSelections();btnDeleteCharts.setDisabled(0==selectedRows.length),btnTimeFrameEdit.setDisabled(selectedRows.length<1)},rowdeselect:function(selectionModel,rowIndex,record){var selectedRows=selectionModel.getSelections();btnDeleteCharts.setDisabled(0==selectedRows.length),btnTimeFrameEdit.setDisabled(selectedRows.length<1)}}}),reportChartsEmptyText='No charts are currently associated with this report.<br>To add charts, drag entries from <b>Available Charts</b> into this area.<br/><br/><img src="gui/images/adding_charts_to_report.png"><br /><br />'+CCR.xdmod.ui.createUserManualLink("selection+model"),queueGrid=new Ext.grid.GridPanel({id:"CurrentNewchartbaseTab_queueGrid",store:this.reportStore,selModel:checkBoxSelMod,width:500,height:460,autoScroll:!0,enableHdMenu:!1,columns:[{header:"Chart ID",width:0,dataIndex:"chart_id",sortable:!1,hidden:!0},{header:"Chart",width:220,renderer:XDMoD.Reporting.chartDetailsRenderer,sortable:!1}],loadMask:!0,resizable:!0,minHeight:460,ddGroup:"reportChartDestination",enableDragDrop:!0,ddText:"Move to new position in report",enableRowBody:!0,singleSelect:!0,viewConfig:{emptyText:reportChartsEmptyText,sm:new Ext.grid.RowSelectionModel({singleSelect:!0}),forceFit:!0},listeners:{render:{scope:this,fn:function(queueGrid){new Ext.dd.DropTarget(queueGrid.container,{ddGroup:"reportChartDestination",copy:!1,notifyDrop:function(dd,e,data){var ds=queueGrid.store,sm=queueGrid.getSelectionModel(),rows=sm.getSelections();if(1<rows.length)CCR.xdmod.ui.reportGeneratorMessage("Report Editor","Drag and drop re-ordering works with one chart at a time.");else{var destination_slot="";if(dd.getDragData(e)){var cindex=dd.getDragData(e).rowIndex;if(void 0!==cindex){for(destination_slot=cindex,i=0;i<rows.length;i++)ds.remove(ds.getById(rows[i].id));ds.insert(cindex,data.selections),sm.clearSelections()}self.parentRef.dirtyConfig()}else{for(destination_slot="end of list",i=0;i<rows.length;i++)ds.remove(ds.getById(rows[i].id));ds.add(data.selections[0]),sm.clearSelections(),self.parentRef.dirtyConfig()}var trackingConfig=XDMoD.Reporting.GetTrackingConfigFromRecord(data.selections[0]);trackingConfig.destination_slot=destination_slot,XDMoD.TrackEvent("Report Generator (Report Editor)","Drag-drop re-order",Ext.encode(trackingConfig))}}});queueGrid.store.load()}}}});queueGrid.getSelectionModel().on("rowselect",function(sm,row_index,rec){var trackingConfig=XDMoD.Reporting.GetTrackingConfigFromRecord(rec);XDMoD.TrackEvent("Report Generator (Report Editor)","Included Charts -> entry selected",Ext.encode(trackingConfig))}),queueGrid.getSelectionModel().on("rowdeselect",function(sm,row_index,rec){var trackingConfig=XDMoD.Reporting.GetTrackingConfigFromRecord(rec);XDMoD.TrackEvent("Report Generator (Report Editor)","Included Charts -> entry de-selected",Ext.encode(trackingConfig))}),(self.reportChartsGrid=queueGrid).store.on("add",function(){updateChartCountText()}),queueGrid.store.on("remove",function(){updateChartCountText()}),queueGrid.on("render",function(){var secondGridDropTargetEl=queueGrid.getView().scroller.dom;new Ext.dd.DropTarget(secondGridDropTargetEl,{ddGroup:"reportChartSource",notifyDrop:function(ddSource,e,data){var chartsDropped=!1;return Ext.each(data.selections,function(r){var duplicateFound=!1;if(queueGrid.store.data.each(function(){r.data.chart_id!=this.data.chart_id||(duplicateFound=!0)}),duplicateFound){chartsDropped=!0;var d=new Date,epoch="_d"+(d.getTime()-d.getMilliseconds())/1e3,duplicateRecord=r.copy();duplicateRecord.data.chart_id=duplicateRecord.data.chart_id+"&duplicate_id="+epoch,duplicateRecord.id=Ext.data.Record.id(r),duplicateRecord.data.duplicate_id=epoch,queueGrid.store.add(duplicateRecord);trackingConfig=XDMoD.Reporting.GetTrackingConfigFromRecord(duplicateRecord);XDMoD.TrackEvent("Report Generator (Report Editor)","Duplicate chart introduced via Available Charts",Ext.encode(trackingConfig))}else{chartsDropped=!0,queueGrid.store.add(r);var trackingConfig=XDMoD.Reporting.GetTrackingConfigFromRecord(r);XDMoD.TrackEvent("Report Generator (Report Editor)","Chart introduced via Available Charts",Ext.encode(trackingConfig))}}),1==chartsDropped?self.parentRef.dirtyConfig():1<data.selections.length?CCR.xdmod.ui.reportGeneratorMessage("Report Editor","All of the charts you have selected are currently present in this report."):CCR.xdmod.ui.reportGeneratorMessage("Report Editor","The chart you have selected is currently present in this report."),!0}})}),queueGrid.on("rowclick",function(grid,rowIndex,e){if(1!=grid_rowclick_suppression_flag){var target=e.getTarget(),sm=grid.getSelectionModel();"x-grid3-row-checker"==target.className&&sm.isSelected(rowIndex)&&sm.deselectRow(rowIndex,!1)}else grid_rowclick_suppression_flag=!1});var resolveDateEndpointsFromChartEntryConfig=function(chartConfig){var date_utils=new DateUtilities,s_date=chartConfig.chart_date_description.split(" to ")[0],e_date=chartConfig.chart_date_description.split(" to ")[1];if("user defined"!=chartConfig.timeframe_type.toLowerCase()){var endpoints=date_utils.getEndpoints(chartConfig.timeframe_type);s_date=endpoints.start_date,e_date=endpoints.end_date}return{start_date:s_date,end_date:e_date}},btnTimeFrameEdit=new Ext.Button({iconCls:"btn_timeframe_edit",text:"Edit Timeframe of Selected Chart(s)",disabled:!0,handler:function(){var sm=queueGrid.getSelectionModel();if(sm.hasSelection()){var getData=sm.getSelections();if(2<=getData.length)!function(selections){for(var chartEditorConfigs=[],i=0;i<selections.length;i++){var dates=resolveDateEndpointsFromChartEntryConfig(selections[i].data);chartEditorConfigs.push({chart_id:selections[i].data.chart_id,type:selections[i].data.timeframe_type,window:selections[i].data.timeframe_type,start:dates.start_date,end:dates.end_date});var trackingConfig=XDMoD.Reporting.GetTrackingConfigFromRecord(selections[i]);XDMoD.TrackEvent("Report Generator (Report Editor)","Selected Chart for batch timeframe edit",Ext.encode(trackingConfig))}XDMoD.TrackEvent("Report Generator (Report Editor)","Clicked on the Edit Timeframe of Selected Charts button"),XDMoD.Reporting.Singleton.ChartDateEditor.present(chartEditorConfigs,"","",!0)}(getData);else{var select=getData[0],dates=resolveDateEndpointsFromChartEntryConfig(select.data),config={chart_id:select.data.chart_id,type:select.data.timeframe_type,window:select.data.timeframe_type,start:dates.start_date,end:dates.end_date};XDMoD.Reporting.Singleton.ChartDateEditor.present(config,"report_generator_included_charts_store",select.id,!1)}}else Ext.MessageBox.show({title:"Warning",msg:"Please select at least 1 chart",width:150,buttons:Ext.MessageBox.OK})}}),btnSelectMenu=new Ext.Button({iconCls:"btn_select",text:"Select",menu:new Ext.menu.Menu({items:[{text:"All Charts",iconCls:"btn_all_charts",handler:function(){XDMoD.TrackEvent("Report Generator (Report Editor)","Clicked on Select -> All Charts"),queueGrid.getSelectionModel().selectAll()}},{text:"No Charts",iconCls:"btn_no_charts",handler:function(){XDMoD.TrackEvent("Report Generator (Report Editor)","Clicked on Select -> No Charts"),queueGrid.getSelectionModel().clearSelections()}},{text:"Invert Selection",iconCls:"btn_invert_selection",handler:function(){XDMoD.TrackEvent("Report Generator (Report Editor)","Clicked on Select -> Invert Selection");for(var rowIndex=0,currentSelections=queueGrid.getSelectionModel().getSelections(),pendingSelections=[],map={},s=0;s<currentSelections.length;s++)map[currentSelections[s].id]=!0;queueGrid.getStore().each(function(rec){null==map[rec.id]&&pendingSelections.push(rowIndex),rowIndex++}),queueGrid.getSelectionModel().clearSelections(),queueGrid.getSelectionModel().selectRows(pendingSelections)}}]})}),btnDeleteCharts=new Ext.Button({iconCls:"btn_delete",text:"Remove",disabled:!0,handler:function(){XDMoD.TrackEvent("Report Generator (Report Editor)","Clicked on the Remove button");var sm=queueGrid.getSelectionModel();if(sm.hasSelection()){var getData=sm.getSelections(),submessage=1<getData.length?"these selected charts":"this selected chart",plural_suffix=1<getData.length?"s":"";Ext.Msg.show({maxWidth:800,minWidth:400,title:"Remove Selected Chart"+plural_suffix,msg:"Are you sure you want to remove "+submessage+" from the report?",buttons:Ext.Msg.YESNO,fn:function(resp){if("yes"==resp){for(var getData=queueGrid.getSelectionModel().getSelections(),i=0;i<getData.length;i++){var trackingConfig=XDMoD.Reporting.GetTrackingConfigFromRecord(getData[i]);XDMoD.TrackEvent("Report Generator (Report Editor)","Confirmed deletion of chart entry",Ext.encode(trackingConfig)),self.reportStore.remove(getData[i])}self.parentRef.dirtyConfig(),self.initGridFunctions()}else XDMoD.TrackEvent("Report Generator (Report Editor)","Cancelled chart entry removal confirmation dialog")},icon:Ext.MessageBox.QUESTION})}else Ext.MessageBox.show({title:"Warning",msg:"Please Select a Chart",width:150,buttons:Ext.MessageBox.OK})}});self.initGridFunctions=function(){btnDeleteCharts.setDisabled(!0),btnTimeFrameEdit.setDisabled(!0)},Ext.apply(this,{layout:"fit",autoScroll:!0,items:[queueGrid],tbar:{items:[btnSelectMenu,"-",btnTimeFrameEdit,"->",btnDeleteCharts]},bbar:{items:[footer_text]}}),XDMoD.ReportCreatorGrid.superclass.initComponent.call(this)},onRender:function(ct,position){XDMoD.ReportCreatorGrid.superclass.onRender.call(this,ct,position)}}),Ext.namespace("XDMoD"),XDMoD.ReportCreator=Ext.extend(Ext.form.FormPanel,{nameFieldConfig:{name:"report_name",fieldLabel:"File Name",emptyText:"Required, "+XDMoD.constants.maxReportNameLength+" max",msgTarget:"under",allowBlank:!1,blankText:"This field is required.",maxLength:XDMoD.constants.maxReportNameLength,maxLengthText:"Maximum length ("+XDMoD.constants.maxReportNameLength+" characters) exceeded."},initComponent:function(){this.expandGeneralInfo=!0,this.needsSave=!1;var self=this;self.initializeFields=function(report_name){txtReportName.setValue(report_name),txtReportTitle.setValue(""),txtReportHeader.setValue(""),txtReportFooter.setValue(""),cmbFont.setValue("Arial"),cmbFormat.setValue("Pdf"),cmbSchedule.setValue("Once"),cmbDelivery.setValue("E-mail"),self.expandGeneralInfo=!0,self.reportCharts.initGridFunctions()},self.initReportGrid=function(){self.expandGeneralInfo=!0,self.reportCharts.initGridFunctions()},self.setReportName=function(value){txtReportName.setValue(value)},self.setReportTitle=function(value){txtReportTitle.setValue(value)},self.setReportHeader=function(value){txtReportHeader.setValue(value)},self.setReportFooter=function(value){txtReportFooter.setValue(value)},self.setReportFont=function(value){cmbFont.setValue(value)},self.setReportFormat=function(value){cmbFormat.setValue(value)},self.setReportSchedule=function(value){cmbSchedule.setValue(value)},self.setReportDelivery=function(value){cmbDelivery.setValue(value)},self.setReportID=function(id){self.report_id=id},self.getReportID=function(){return self.report_id};var thumbnailChartLayoutPreview="gui/images/report_generator/report_layout_1_up.png",layoutThumbnailId=Ext.id();this.setChartsPerPage=function(value){rdoChartLayout.removeListener("change",rdoChartLayout.changeEventHandler),rdoChartLayout.setValue(value+"_up"),thumbnailChartLayoutPreview="gui/images/report_generator/report_layout_"+value+"_up.png";var containerChartLayoutPreview=document.getElementById(layoutThumbnailId);containerChartLayoutPreview&&(containerChartLayoutPreview.src=thumbnailChartLayoutPreview),function(){rdoChartLayout.on("change",rdoChartLayout.changeEventHandler)}.defer(400)},this.on("activate",function(){document.getElementById(layoutThumbnailId).src=thumbnailChartLayoutPreview},this,{single:!0}),this.dirtyConfig=function(field,nv,ov){CCR.xdmod.reporting.dirtyState=!0,self.needsSave=!0,btnSaveReport.setDisabled(!1),btnSaveReportAs.setDisabled(!1)},this.isDirty=function(){return self.needsSave},this.reportCharts=new XDMoD.ReportCreatorGrid({region:"center",title:"Included Charts",parentRef:self,width:"35%"}),this.on("activate",function(){0==self.reportCharts.reportStore.data.length&&function(){self.reportCharts.reportStore.removeAll()}.defer(100)});var font_store=new Ext.data.SimpleStore({fields:["name"],data:[["Arial"]]}),cmbFont=new Ext.form.ComboBox({editable:!1,width:140,fieldLabel:"Font",mode:"local",store:font_store,triggerAction:"all",displayField:"name",hidden:!0,valueField:"name",emptyText:"No Font Selected",listeners:{change:self.dirtyConfig}});cmbFont.setValue(1);var format_store=new Ext.data.SimpleStore({fields:["name","format"],data:[["PDF","Pdf"],["Word Document","Doc"]]}),cmbFormat=new Ext.form.ComboBox({editable:!1,width:140,fieldLabel:"Delivery Format",mode:"local",store:format_store,triggerAction:"all",displayField:"name",valueField:"format",emptyText:"No Format Selected",listeners:{select:function(combo,record,index){var newValue=record.get(this.initialConfig.valueField);this.startValue!=newValue&&(XDMoD.TrackEvent("Report Generator (Report Editor)","Updated delivery format",combo.getRawValue()),self.dirtyConfig())}}});cmbFormat.setValue(0);var schedule_store=new Ext.data.SimpleStore({fields:["schedule"],data:[["Once"],["Daily"],["Weekly"],["Monthly"],["Quarterly"],["Semi-annually"],["Annually"]]}),cmbSchedule=new Ext.form.ComboBox({id:"report_generator_report_schedule",editable:!1,width:140,fieldLabel:"Schedule",mode:"local",store:schedule_store,triggerAction:"all",displayField:"schedule",valueField:"schedule",emptyText:"No Schedule Selected",listeners:{select:function(combo,record,index){var newValue=record.get(this.initialConfig.valueField);this.startValue!=newValue&&(XDMoD.TrackEvent("Report Generator (Report Editor)","Updated schedule",combo.getValue()),self.dirtyConfig())}}});cmbSchedule.setValue(0);var delivery_store=new Ext.data.SimpleStore({fields:["method"],data:[["E-mail"]]}),cmbDelivery=new Ext.form.ComboBox({editable:!1,width:140,fieldLabel:"Delivery",mode:"local",store:delivery_store,triggerAction:"all",displayField:"method",valueField:"method",emptyText:"No Format Selected",hidden:!0,listeners:{change:function(cb){XDMoD.TrackEvent("Report Generator (Report Editor)","Updated delivery type",cb.getValue()),self.dirtyConfig()}}}),lblDelivery=new Ext.form.Label({html:'<div style="font-size: 12px; padding-top: 5px">Delivery Method: <b>E-Mail</b><br /><br /></div>'});cmbDelivery.setValue(0);var saveReport=function(save_callback,override_config){var field,generateCopy=void 0!==(override_config=void 0===override_config?{}:override_config).generateCopy,copyName=override_config.generateCopy,disabledFields=[],reenableReportFields=function(){for(var numDisabledFields=disabledFields.length,i=0;i<numDisabledFields;i++)disabledFields[i].enable();disabledFields=[]};if(generateCopy&&(field=txtReportName,-1===disabledFields.indexOf(field)&&(field.disable(),disabledFields.push(field))),!self.getForm().isValid()){return override_config.callback&&override_config.callback(!1,"One or more fields are invalid."),CCR.xdmod.ui.reportGeneratorMessage("Report Editor","One or more fields are invalid.",!1),void reenableReportFields()}if(0==self.reportCharts.reportStore.data.length)return null!=override_config.callback&&override_config.callback(!1,"Report needs charts"),CCR.xdmod.ui.reportGeneratorMessage("Report Editor","You must have at least one chart in this report."),void reenableReportFields();var reportData={operation:"save_report"};reportData.phase=0<self.getReportID().length?"update":"create",reportData.report_id=self.getReportID(),reportData.report_name=txtReportName.getValue(),reportData.report_title=txtReportTitle.getValue(),reportData.report_header=txtReportHeader.getValue(),reportData.report_footer=txtReportFooter.getRawValue(),reportData.charts_per_page=rdoChartLayout.getValue().charts_per_page,reportData.report_font=cmbFont.getRawValue(),reportData.report_format=cmbFormat.getValue(),reportData.report_schedule=cmbSchedule.getRawValue(),reportData.report_delivery=cmbDelivery.getRawValue(),generateCopy&&(reportData.phase="create",reportData.report_id="",reportData.report_name=copyName);var chartCount=1;self.reportCharts.reportStore.data.each(function(){var tf_start,tf_end,cache_ref,chartData=[];if(-1!=this.data.thumbnail_link.indexOf("type=cached")&&(tf_start=XDMoD.Reporting.getParamIn("start",this.data.thumbnail_link,"&"),tf_end=XDMoD.Reporting.getParamIn("end",this.data.thumbnail_link,"&"),cache_ref=XDMoD.Reporting.getParamIn("ref",this.data.thumbnail_link,"&"),reportData["chart_cacheref_"+chartCount]=tf_start+";"+tf_end+";"+cache_ref),-1!=this.data.thumbnail_link.indexOf("type=volatile")){tf_start=this.data.chart_date_description.split(" to ")[0],tf_end=this.data.chart_date_description.split(" to ")[1],cache_ref=XDMoD.Reporting.getParamIn("ref",this.data.thumbnail_link,"&");var duplicate_id=this.data.duplicate_id?this.data.duplicate_id:"";reportData["chart_cacheref_"+chartCount]=tf_start+";"+tf_end+";xd_report_volatile_"+cache_ref+duplicate_id}chartData.push(this.data.chart_id.replace(/;/g,"%3B")),chartData.push(this.data.chart_title.replace(/;/g,"%3B")),chartData.push(this.data.chart_drill_details.replace(/;/g,"%3B")),chartData.push(this.data.chart_date_description),chartData.push(this.data.timeframe_type),chartData.push(this.data.type),reportData["chart_data_"+chartCount++]=chartData.join(";")}),Ext.Ajax.request({url:"controllers/report_builder.php",params:reportData,method:"POST",callback:function(options,success,response){var responseData,report_id,objParams;if(success&&(responseData=CCR.safelyDecodeJSONResponse(response),success=CCR.checkDecodedJSONResponseSuccess(responseData)),success)if(self.parent.reportsOverview.reportStore.reload(),generateCopy)XDMoD.TrackEvent("Report Generator (Report Editor)","Report successfully saved as a copy",reportData.report_name),void 0!==override_config.callback&&override_config.callback(!0,"Report saved successfully"),CCR.xdmod.ui.reportGeneratorMessage("Report Editor","Report successfully saved as a copy",!0);else{btnSaveReport.setDisabled(!0),self.needsSave=!1,CCR.xdmod.reporting.dirtyState=!1,self.setReportID(responseData.report_id),report_id=responseData.report_id,objParams={operation:"fetch_report_data",flush_cache:!0,selected_report:report_id},(new Ext.data.Connection).request({url:"controllers/report_builder.php",params:objParams,method:"POST",callback:function(options,success,response){var reportData;success&&(reportData=CCR.safelyDecodeJSONResponse(response),success=CCR.checkDecodedJSONResponseSuccess(reportData)),success?self.reportCharts.reportStore.loadData(reportData.results):CCR.xdmod.ui.presentFailureResponse(response,{title:"Report Pool",wrapperMessage:"There was a problem trying to prepare the report editor."})}});var action=responseData.phase.slice(0,1).toUpperCase()+responseData.phase.slice(1)+"d";XDMoD.TrackEvent("Report Generator (Report Editor)","Report "+action+" successfully",reportData.report_name),CCR.xdmod.ui.reportGeneratorMessage("Report Editor","Report "+action+" Successfully",!0,function(){save_callback&&save_callback()})}else void 0!==override_config.callback&&override_config.callback(!1,"Problem saving report"),CCR.xdmod.ui.presentFailureResponse(response,{title:"Report Editor",wrapperMessage:"There was a problem creating / updating this report."})}}),reenableReportFields()},rdoChartLayoutGroupID=Ext.id()+"-chart-layout-group",rdoChartLayout=new Ext.form.RadioGroup({defaultType:"radio",columns:1,margins:"23 0 0 0",cls:"custom_search_mode_group",flex:1,vertical:!0,items:[{boxLabel:"1 Chart Per Page",checked:!0,name:rdoChartLayoutGroupID,inputValue:"1_up",charts_per_page:1},{boxLabel:"2 Charts Per Page",name:rdoChartLayoutGroupID,inputValue:"2_up",charts_per_page:2}],changeEventHandler:function(rg,rc){XDMoD.TrackEvent("Report Generator (Report Editor)","Updated layout for report",rc.charts_per_page+" chart(s) per page"),thumbnailChartLayoutPreview="gui/images/report_generator/report_layout_"+rc.inputValue+".png",document.getElementById(layoutThumbnailId).src=thumbnailChartLayoutPreview,self.dirtyConfig()}});rdoChartLayout.on("change",rdoChartLayout.changeEventHandler);var reportConfigBox={marginLeft:"4px",marginTop:"7px"},handleTextFieldChange=function(t,newValue,oldValue,fieldTrackingName){XDMoD.utils.trimOnBlur(t);var trimmedValue=t.getValue();trimmedValue!==oldValue&&(XDMoD.TrackEvent("Report Generator (Report Editor)","Updated "+fieldTrackingName+" for report",trimmedValue),self.dirtyConfig())},txtReportName=new Ext.form.TextField(Ext.apply({},{listeners:{change:function(t,newValue,oldValue){handleTextFieldChange(t,0,oldValue,"file name")}}},self.nameFieldConfig)),maxReportTitleLength=XDMoD.constants.maxReportTitleLength,txtReportTitle=new Ext.form.TextField({name:"report_title",fieldLabel:"Report Title",emptyText:"Optional, "+maxReportTitleLength+" max",msgTarget:"under",maxLength:maxReportTitleLength,maxLengthText:"Maximum length ("+maxReportTitleLength+" characters) exceeded.",listeners:{change:function(t,newValue,oldValue){handleTextFieldChange(t,0,oldValue,"title")}}}),maxReportHeaderLength=XDMoD.constants.maxReportHeaderLength,txtReportHeader=new Ext.form.TextField({name:"report_header",fieldLabel:"Header Text",emptyText:"Optional, "+maxReportHeaderLength+" max",msgTarget:"under",maxLength:maxReportHeaderLength,maxLengthText:"Maximum length ("+maxReportHeaderLength+" characters) exceeded.",listeners:{change:function(t,newValue,oldValue){handleTextFieldChange(t,0,oldValue,"header text")}}}),maxReportFooterLength=XDMoD.constants.maxReportFooterLength,txtReportFooter=new Ext.form.TextField({name:"report_footer",fieldLabel:"Footer Text",emptyText:"Optional, "+maxReportFooterLength+" max",msgTarget:"under",maxLength:maxReportFooterLength,maxLengthText:"Maximum length ("+maxReportFooterLength+" characters) exceeded.",listeners:{change:function(t,newValue,oldValue){handleTextFieldChange(t,0,oldValue,"footer text")}}});this.reportInfo=new Ext.Panel({labelWidth:95,frame:!0,title:"General Information",width:220,defaults:{width:200},labelAlign:"top",defaultType:"textfield",style:reportConfigBox,layout:"form",items:[txtReportName,txtReportTitle,txtReportHeader,txtReportFooter]}),this.sectionChartLayout=new Ext.Panel({height:120,width:220,frame:!0,title:"Chart Layout",region:"center",cls:"report_generator_chart_layout",style:reportConfigBox,layout:{type:"hbox",pack:"start",align:"stretch"},items:[rdoChartLayout,{html:'<img id="'+layoutThumbnailId+'" src="'+thumbnailChartLayoutPreview+'">',width:70}]}),this.scheduleOptions=new Ext.Panel({labelWidth:95,frame:!0,title:"Scheduling",bodyStyle:"padding:5px 5px 0",width:220,layout:"form",style:reportConfigBox,defaults:{width:200},labelAlign:"top",cls:"user_profile_section_general",defaultType:"textfield",items:[cmbFont,cmbFormat,cmbSchedule,cmbDelivery,cmbFormat,lblDelivery]}),this.reportOptions=new Ext.Panel({region:"west",baseCls:"x-plain",width:243,autoScroll:!0,cls:"no-underline-invalid-fields-form",items:[this.reportInfo,this.sectionChartLayout,this.scheduleOptions]});var sendReport=function(build_only,format){var action=build_only?"download":"send";if(0!=self.getReportID().length)if(1!=self.isDirty()){var report_name=txtReportName.getValue();self.parent.buildReport(report_name,self.getReportID(),self,build_only,format)}else CCR.xdmod.ui.reportGeneratorMessage("Report Editor","You have made changes to this report which you must save before "+action+"ing.");else CCR.xdmod.ui.reportGeneratorMessage("Report Editor","You must save this report before you can "+action+" it.")};this.on("activate",function(p){1==p.expandGeneralInfo&&p.reportInfo.expand(),p.expandGeneralInfo=!1});var btnSaveReport=new Ext.Button({iconCls:"btn_save",text:"Save",disabled:!0,handler:function(){XDMoD.TrackEvent("Report Generator (Report Editor)","Clicked on the Save button"),saveReport()}}),btnSaveReportAs=new Ext.Button({iconCls:"btn_save",text:"Save As",tooltip:"Create and save a copy of this report.",disabled:!0,handler:function(){var el;XDMoD.TrackEvent("Report Generator (Report Editor)","Clicked on the Save As button"),el=this,new XDMoD.SaveReportAsDialog({executeHandler:function(report_filename,callback){saveReport(void 0,{generateCopy:report_filename,callback:callback})}}).present(el,txtReportName.getValue())}});this.allowSaveAs=function(b){btnSaveReportAs.setDisabled(!b)},Ext.apply(this,{title:"Report Editor",layout:"border",cls:"report_edit",items:[this.reportOptions,this.reportCharts],plugins:[new Ext.ux.plugins.ContainerMask({masked:!1})],tbar:{items:[btnSaveReport,btnSaveReportAs,{xtype:"button",iconCls:"btn_preview",text:"Preview",tooltip:"See a visual representation of the selected report.",handler:function(){if(0!=self.getReportID().length)if(self.isDirty())CCR.xdmod.ui.reportGeneratorMessage("Report Editor","You have made changes to this report which you must save before previewing.");else if(0!=self.reportCharts.reportStore.data.length){var reportData={};if(1==self.isDirty()){reportData.report_id=self.getReportID(),reportData.success=!0,reportData.charts=[];var chartCount=0,date_utils=new DateUtilities,chartData={};self.reportCharts.reportStore.data.each(function(){var s_date,e_date,chart_page_position=chartCount%rdoChartLayout.getValue().charts_per_page;if(0==chart_page_position&&((chartData={}).report_title=0==chartCount?'<span style="font-family: arial; font-size: 22px">'+Ext.util.Format.trim(txtReportTitle.getValue())+"</span><br />":"",chartData.header_text='<span style="font-family: arial; font-size: 12px">'+Ext.util.Format.trim(txtReportHeader.getValue())+"</span>",chartData.footer_text='<span style="font-family: arial; font-size: 12px">'+Ext.util.Format.trim(txtReportFooter.getRawValue())+"</span>"),chartData["chart_title_"+chart_page_position]='<span style="font-family: arial; font-size: 16px">'+this.data.chart_title+"</span>",0==this.data.chart_drill_details.length&&(this.data.chart_drill_details=CCR.xdmod.org_abbrev),chartData["chart_drill_details_"+chart_page_position]='<span style="font-family: arial; font-size: 12px">'+this.data.chart_drill_details+"</span>","user defined"==this.data.timeframe_type.toLowerCase())s_date=this.data.chart_date_description.split(" to ")[0],e_date=this.data.chart_date_description.split(" to ")[1];else{var endpoints=date_utils.getEndpoints(this.data.timeframe_type);s_date=endpoints.start_date,e_date=endpoints.end_date}this.data.chart_date_description=s_date+" to "+e_date,chartData["chart_timeframe_"+chart_page_position]='<span style="font-family: arial; font-size: 14px">'+this.data.chart_date_description+"</span>",chartData["chart_id_"+chart_page_position]=this.data.thumbnail_link,++chartCount%rdoChartLayout.getValue().charts_per_page==0&&reportData.charts.push(chartData)});var remaining_slots=chartCount%rdoChartLayout.getValue().charts_per_page;if(0!=remaining_slots){for(i=remaining_slots;i<rdoChartLayout.getValue().charts_per_page;i++)chartData["chart_title_"+i]="",chartData["chart_id_"+i]="img_placeholder.php?",chartData["chart_timeframe_"+i]="",chartData["chart_drill_details_"+i]="";reportData.charts.push(chartData)}self.parent.reportPreview.initPreview(txtReportName.getValue(),self.getReportID(),XDMoD.REST.token,1,reportData,rdoChartLayout.getValue().charts_per_page)}else self.parent.reportPreview.initPreview(txtReportName.getValue(),self.getReportID(),XDMoD.REST.token,1,void 0,rdoChartLayout.getValue().charts_per_page);self.parent.switchView(2)}else CCR.xdmod.ui.reportGeneratorMessage("Report Editor","You must have at least one chart in this report.");else CCR.xdmod.ui.reportGeneratorMessage("Report Editor","You must save this report before you can preview it.")}},new XDMoD.Reporting.ReportExportMenu({instance_module:"Report Editor",sendMode:!0,exportItemHandler:sendReport}),new XDMoD.Reporting.ReportExportMenu({instance_module:"Report Editor",exportItemHandler:sendReport}),"->",{xtype:"button",iconCls:"btn_return_to_overview",text:"Return To <b>My Reports</b>",handler:function(){XDMoD.TrackEvent("Report Generator (Report Editor)","Clicked on Return To My Reports"),1==self.isDirty()?(XDMoD.TrackEvent("Report Generator (Report Editor)","Presented with Unsaved Changes dialog"),Ext.Msg.show({maxWidth:800,minWidth:400,title:"Unsaved Changes",msg:"There are unsaved changes.<br />Do you wish to save this report before closing the Report Editor?<br /><br />If you press <b>No</b>, you will lose all your changes.",buttons:Ext.MessageBox.YESNOCANCEL,fn:function(resp){"cancel"!=resp?("yes"==resp&&(XDMoD.TrackEvent("Report Generator (Report Editor)","User chose to save changes via Unsaved Changes dialog"),saveReport(function(){self.parent.switchView(0)})),"no"==resp&&(XDMoD.TrackEvent("Report Generator (Report Editor)","User chose to not save changes via Unsaved Changes dialog"),btnSaveReport.setDisabled(!0),self.needsSave=!1,self.parent.switchView(0))):XDMoD.TrackEvent("Report Generator (Report Editor)","User cancelled Unsaved Changes dialog")},icon:Ext.MessageBox.QUESTION})):self.parent.switchView(0)}}]}}),XDMoD.ReportCreator.superclass.initComponent.call(this)}}),Ext.namespace("XDMoD"),XDMoD.ReportsOverview=Ext.extend(Ext.Panel,{firstLoad:!1,initComponent:function(){var exceptionReports,self=this,eReport=(exceptionReports=[{type:"Monthly Compliance Report",canDeriveFrom:!1,canEdit:!1,canPreview:!1,multiFormat:!1}],{isExceptionReport:function(t){var i=0;for(i=0;i<exceptionReports.length;i++)if(exceptionReports[i].type==t)return exceptionReports[i];return!1}}),footer_text=new Ext.Toolbar.TextItem({cls:"fbar_report_status",text:"No reports"});this.reportStore=new Ext.data.JsonStore({autoDestroy:!1,root:"queue",baseParams:{operation:"enum_reports"},fields:["report_id","report_name","creation_method","report_title","charts_per_page","report_format","report_schedule","report_delivery","chart_count"],proxy:new Ext.data.HttpProxy({method:"POST",url:"controllers/report_builder.php"})}),this.reportStore.on("load",function(s,r,o){mnuNewBasedOn.toggleReportSelection(!1),btnNewBasedOn.setDisabled(!0),btnEditReport.setDisabled(!0),btnPreviewReport.setDisabled(!0),mnuSendReport.setDisabled(!0),mnuDownloadReport.setDisabled(!0),btnSendReport.setVisible(!1),btnDownloadReport.setVisible(!1),mnuSendReport.setVisible(!0),mnuDownloadReport.setVisible(!0),btnDeleteReport.setDisabled(!0),s.reader.jsonData.reports_in_other_roles,updateReportCountText(),self.firstLoad&&(self.firstLoad=!1,r.length)});var updateReportCountText=function(){var suffix=1!=self.reportStore.getTotalCount()?"s":"",prefix=0!=self.reportStore.getTotalCount()?self.reportStore.getTotalCount():"No";footer_text.setText(prefix+" report"+suffix)},adjustButtonAccessibilty=function(selectionModel,rowIndex,record){var selectedRows=selectionModel.getSelections();1==selectedRows.length&&mnuNewBasedOn.setSelectedReport(record.data.report_name),mnuNewBasedOn.toggleReportSelection(1==selectedRows.length),btnNewBasedOn.setDisabled(1!=selectedRows.length),btnEditReport.setDisabled(1!=selectedRows.length),btnPreviewReport.setDisabled(1!=selectedRows.length),mnuSendReport.setDisabled(1!=selectedRows.length),mnuDownloadReport.setDisabled(1!=selectedRows.length),btnSendReport.setVisible(!1),mnuSendReport.setVisible(!0),btnDownloadReport.setVisible(!1),mnuDownloadReport.setVisible(!0),btnDeleteReport.setDisabled(0==selectedRows.length);var exceptionDetails=eReport.isExceptionReport(record.data.creation_method);1==selectedRows.length&&!1!==exceptionDetails&&(mnuNewBasedOn.toggleReportSelection(exceptionDetails.canDeriveFrom),btnEditReport.setDisabled(!exceptionDetails.canEdit),btnPreviewReport.setDisabled(!exceptionDetails.canPreview),exceptionDetails.multiFormat||(btnSendReport.setVisible(!0),mnuSendReport.setVisible(!1),btnDownloadReport.setVisible(!0),mnuDownloadReport.setVisible(!1)))},checkBoxSelMod=new Ext.grid.CheckboxSelectionModel({listeners:{rowselect:adjustButtonAccessibilty,rowdeselect:adjustButtonAccessibilty}}),reportsEmptyText='You currently have no reports.<br />To create a report, click on the <b>New</b> button above this message.<br /><br /><img src="gui/images/create_new_report.png">'+CCR.xdmod.ui.createUserManualLink("report+generator"),queueGrid=new Ext.grid.GridPanel({store:this.reportStore,viewConfig:{emptyText:reportsEmptyText,forceFit:!0},autoScroll:!0,enableHdMenu:!1,selModel:checkBoxSelMod,loadMask:!0,columns:[{header:"ID",width:10,dataIndex:"report_id",sortable:!1,hidden:!0},{header:"Name",width:200,dataIndex:"report_name",sortable:!0},{header:"Derived From",width:100,dataIndex:"creation_method",sortable:!0},{header:"Schedule",width:70,dataIndex:"report_schedule",sortable:!0},{header:"Delivery Format",width:70,dataIndex:"report_format",sortable:!0,renderer:function(v){var format="Unknown format",icon="report_general_info";return"Pdf"==v?(format="PDF",icon="pdf_icon"):"Doc"==v&&(format="Word Document",icon="msword_icon"),'<div><div style="float: left"><img src="gui/images/report_generator/'+icon+'.png"></div><div style="margin-left: 20px; padding-top: 2px">'+format+"</div></div>"}},{header:"# Charts",width:70,dataIndex:"chart_count",sortable:!0,renderer:function(val,metaData,record,rowIndex,colIndex,store){var entryData=store.getAt(rowIndex).data;return"Monthly Compliance Report"==entryData.creation_method?"Not applicable":val+' <span style="color: #00f">('+entryData.charts_per_page+" per page)</span>"}}]});queueGrid.getSelectionModel().on("rowselect",function(sm,row_index,rec){XDMoD.TrackEvent("Report Generator (My Reports)","Selected Report",Ext.encode({report_name:rec.data.report_name}))}),queueGrid.getSelectionModel().on("rowdeselect",function(sm,row_index,rec){XDMoD.TrackEvent("Report Generator (My Reports)","De-Selected Report",Ext.encode({report_name:rec.data.report_name}))}),CCR.xdmod.catalog.report_generator[1]={highlight:queueGrid.id,title:"Your reports",width:300,height:400,description:"Any reports that you have created and saved appear to the left.  In order to edit an existing report, do one of the following:<br /><br />1. Select a report from the left, then click on <b>Edit</b><br />2. Double click on a report<br /><br />It is worth noting that Compliance Reports can not be edited."},queueGrid.on("rowdblclick",function(queueGrid,rowIdx,e){var getData=queueGrid.getSelectionModel().getSelections();1==getData.length&&(XDMoD.TrackEvent("Report Generator (My Reports)","Double-clicked on report entry",getData[0].data.report_name),editReport())});var editReport=function(){var record=queueGrid.getSelectionModel().getSelected();XDMoD.TrackEvent("Report Generator (My Reports)","Attempting to edit report",record.data.report_name);var exceptionDetails=eReport.isExceptionReport(record.data.creation_method);if(!1===exceptionDetails||0!=exceptionDetails.canEdit){var objParams={operation:"fetch_report_data",selected_report:record.data.report_id};(new Ext.data.Connection).request({url:"controllers/report_builder.php",params:objParams,method:"POST",callback:function(options,success,response){var reportData;if(success&&(reportData=CCR.safelyDecodeJSONResponse(response),success=CCR.checkDecodedJSONResponseSuccess(reportData)),success){self.parent.reportCreator.setReportID(reportData.results.report_id);var reportGeneralData=reportData.results.general;self.parent.reportCreator.setReportName(reportGeneralData.name),self.parent.reportCreator.setReportTitle(reportGeneralData.title),self.parent.reportCreator.setReportHeader(reportGeneralData.header),self.parent.reportCreator.setReportFooter(reportGeneralData.footer),self.parent.reportCreator.setChartsPerPage(reportGeneralData.charts_per_page),self.parent.reportCreator.setReportFormat(reportGeneralData.format),self.parent.reportCreator.setReportFont(reportGeneralData.font),self.parent.reportCreator.setReportSchedule(reportGeneralData.schedule),self.parent.reportCreator.setReportDelivery(reportGeneralData.delivery),self.parent.reportCreator.reportCharts.reportStore.loadData(reportData.results),self.parent.reportCreator.initReportGrid(),self.parent.reportCreator.allowSaveAs(!0),self.parent.switchView(1),XDMoD.TrackEvent("Report Generator","Report opened in editor",record.data.report_name)}else CCR.xdmod.ui.presentFailureResponse(response,{title:"Report Pool",wrapperMessage:"There was a problem trying to prepare the report editor."})}})}else Ext.MessageBox.alert("Report Generator (My Reports)","You cannot edit this type of report")},newReportBasedOn=function(){XDMoD.TrackEvent("Report Generator (My Reports)","Clicked on New Based On -> Selected Report");var objParams={operation:"fetch_report_data",based_on_other:"true",selected_report:queueGrid.getSelectionModel().getSelected().data.report_id};(new Ext.data.Connection).request({url:"controllers/report_builder.php",params:objParams,method:"POST",callback:function(options,success,response){var reportData;if(success&&(reportData=CCR.safelyDecodeJSONResponse(response),success=CCR.checkDecodedJSONResponseSuccess(reportData)),success){self.parent.reportCreator.setReportID(reportData.results.report_id);var reportGeneralData=reportData.results.general;self.parent.reportCreator.setReportName(reportGeneralData.name),self.parent.reportCreator.setReportTitle(reportGeneralData.title),self.parent.reportCreator.setReportHeader(reportGeneralData.header),self.parent.reportCreator.setReportFooter(reportGeneralData.footer),self.parent.reportCreator.setReportFormat(reportGeneralData.format),self.parent.reportCreator.setReportFont(reportGeneralData.font),self.parent.reportCreator.setReportSchedule(reportGeneralData.schedule),self.parent.reportCreator.setReportDelivery(reportGeneralData.delivery),self.parent.reportCreator.setChartsPerPage(reportGeneralData.charts_per_page),self.parent.reportCreator.reportCharts.reportStore.loadData(reportData.results),self.parent.reportCreator.dirtyConfig(),self.parent.reportCreator.initReportGrid(),self.parent.switchView(1),XDMoD.TrackEvent("Report Generator","Report copy opened in editor",reportGeneralData.name)}else CCR.xdmod.ui.presentFailureResponse(response,{title:"Report Pool",wrapperMessage:"There was a problem trying to prepare the report editor."})}})},sendReport=function(build_only,format){var rowData=queueGrid.getSelectionModel().getSelected().data;self.parent.buildReport(rowData.report_name,rowData.report_id,self,build_only,format)},btnSelectMenu=new Ext.Button({iconCls:"btn_select",text:"Select",menu:new Ext.menu.Menu({items:[{text:"All Reports",iconCls:"btn_all_reports",handler:function(){XDMoD.TrackEvent("Report Generator (My Reports)","Clicked on Select -> All Reports"),queueGrid.getSelectionModel().selectAll()}},{text:"No Reports",iconCls:"btn_no_reports",handler:function(){XDMoD.TrackEvent("Report Generator (My Reports)","Clicked on Select -> No Reports"),queueGrid.getSelectionModel().clearSelections()}},{text:"Invert Selection",iconCls:"btn_invert_selection",handler:function(){XDMoD.TrackEvent("Report Generator (My Reports)","Clicked on Select -> Invert Selection");for(var rowIndex=0,currentSelections=queueGrid.getSelectionModel().getSelections(),pendingSelections=[],map={},s=0;s<currentSelections.length;s++)map[currentSelections[s].id]=!0;queueGrid.getStore().each(function(rec){null==map[rec.id]&&pendingSelections.push(rowIndex),rowIndex++}),queueGrid.getSelectionModel().clearSelections(),queueGrid.getSelectionModel().selectRows(pendingSelections)}}]})}),btnNewReport=new Ext.Button({iconCls:"btn_new",text:"New",handler:function(){XDMoD.TrackEvent("Report Generator (My Reports)","New button clicked"),(new Ext.data.Connection).request({url:"controllers/report_builder.php",params:{operation:"get_new_report_name"},method:"POST",callback:function(options,success,response){var responseData=Ext.decode(response.responseText);responseData.success&&(self.parent.reportCreator.initializeFields(responseData.report_name),self.parent.reportCreator.setReportID(""),self.parent.reportCreator.reportCharts.reportStore.removeAll(),self.parent.reportCreator.setChartsPerPage(1),self.parent.reportCreator.reportCharts.resetChartCount(),self.parent.reportCreator.allowSaveAs(!1),self.parent.switchView(1))}})}}),btnNewBasedOn=new Ext.Button({iconCls:"btn_new_based_on",text:"New Based On",tooltip:"Uses a copy of the selected report as the basis for a new report.",handler:newReportBasedOn}),mnuNewBasedOn=new XDMoD.Reporting.ReportCloneMenu({tooltip:"Uses a copy of the selected report or template as the basis for a new report.",selectedReportHandler:newReportBasedOn,selectedTemplateHandler:function(template_id,resource_provider){var objParams={operation:"build_from_template",template_id:template_id,resource_provider:resource_provider};(new Ext.data.Connection).request({url:"controllers/report_builder.php",params:objParams,method:"POST",callback:function(options,success,response){success&&(success=CCR.checkJSONResponseSuccess(response)),success?self.reportStore.reload():CCR.xdmod.ui.presentFailureResponse(response,{title:"Report Creator",wrapperMessage:"There was a problem trying to build a report from this template."})}})},templateLoadHandler:function(t){self.enableTemplateMode(0<t)}}),btnEditReport=new Ext.Button({iconCls:"btn_edit",text:"Edit",handler:function(){XDMoD.TrackEvent("Report Generator (My Reports)","Clicked on Edit button"),editReport()}}),btnPreviewReport=new Ext.Button({iconCls:"btn_preview",text:"Preview",tooltip:"See a visual representation of the selected report.",handler:function(){var rowData;XDMoD.TrackEvent("Report Generator (My Reports)","Clicked on Preview button"),rowData=queueGrid.getSelectionModel().getSelected().data,self.parent.reportPreview.initPreview(rowData.report_name,rowData.report_id,XDMoD.REST.token,0,void 0,rowData.charts_per_page),self.parent.switchView(2)}}),mnuSendReport=new XDMoD.Reporting.ReportExportMenu({instance_module:"My Reports",sendMode:!0,exportItemHandler:sendReport}),btnSendReport=new Ext.Button({text:"Send Now",iconCls:"btn_send",tooltip:"Builds and e-mails the selected report.",handler:function(){XDMoD.TrackEvent("Report Generator (My Reports)","Clicked on Send Now button"),sendReport(!1,"pdf")},hidden:!0}),mnuDownloadReport=new XDMoD.Reporting.ReportExportMenu({instance_module:"My Reports",exportItemHandler:sendReport}),btnDownloadReport=new Ext.Button({text:"Download",iconCls:"btn_download",tooltip:"Builds and presents the selected report as an attachment.",handler:function(){XDMoD.TrackEvent("Report Generator (My Reports)","Clicked on Download button"),sendReport(!0,"pdf")},hidden:!0}),btnDeleteReport=new Ext.Button({iconCls:"btn_delete",text:"Delete",handler:function(){var getData,submessage,plural_suffix;XDMoD.TrackEvent("Report Generator (My Reports)","Clicked on Delete button"),getData=queueGrid.getSelectionModel().getSelections(),submessage=1<getData.length?"these selected reports":"this selected report",plural_suffix=1<getData.length?"s":"",Ext.Msg.show({maxWidth:800,minWidth:400,title:"Delete Selected Report"+plural_suffix,msg:"Are you sure you want to delete "+submessage+"?<br><b>This action cannot be undone.</b>",buttons:Ext.Msg.YESNO,fn:function(resp){if("yes"==resp){for(var selected_report=[],i=0;i<getData.length;i++)XDMoD.TrackEvent("Report Generator (My Reports)","Confirmed deletion of report",getData[i].get("report_name")),selected_report[i]=getData[i].get("report_id");var objParams={operation:"remove_report_by_id",selected_report:selected_report.join(";")};(new Ext.data.Connection).request({url:"controllers/report_builder.php",params:objParams,method:"POST",callback:function(options,success,response){success&&(success=CCR.checkJSONResponseSuccess(response)),success?self.reportStore.reload():CCR.xdmod.ui.presentFailureResponse(response,{title:"Report Pool",wrapperMessage:"There was a problem regarding the report pool."})}})}else XDMoD.TrackEvent("Report Generator (My Reports)","Cancelled report entry delete confirmation dialog")},icon:Ext.MessageBox.QUESTION})}});self.enableTemplateMode=function(b){btnNewBasedOn.setVisible(!b),mnuNewBasedOn.setVisible(b)},Ext.apply(this,{title:"My Reports",layout:"fit",cls:"report_overview",items:[queueGrid],plugins:[new Ext.ux.plugins.ContainerMask({masked:!1}),new XDMoD.Plugins.ContextSensitiveHelper("report+generator")],tbar:{items:[btnSelectMenu,"-",btnNewReport,btnNewBasedOn,mnuNewBasedOn,btnEditReport,btnPreviewReport,mnuSendReport,btnSendReport,mnuDownloadReport,btnDownloadReport,"->",btnDeleteReport]},bbar:{items:[footer_text]}}),this.reportStore.reload(),XDMoD.ReportsOverview.superclass.initComponent.call(this)},onRender:function(ct,position){this.firstLoad=!0,this.reportStore.reload(),XDMoD.ReportsOverview.superclass.onRender.call(this,ct,position)}}),Ext.namespace("XDMoD"),XDMoD.ReportPreview=Ext.extend(Ext.Panel,{prevViewIndex:0,iconCls:"report_preview_top_icon",initComponent:function(){var self=this;self.initPreview=function(file_name,report_id,token,previous_view_index,preview_meta_data,charts_per_page){XDMoD.TrackEvent("Report Generator (Preview)","Previewing report",file_name),this.report_file_name=file_name,this.report_id=report_id,preview_meta_data&&(file_name+=", Unsaved"),this.setTitle('Report Preview (<span style="color: #00f">'+file_name+"</span>)");var return_label="";0==(this.prevViewIndex=previous_view_index)&&(return_label="Reports Overview"),1==previous_view_index&&(return_label="Report Editor"),btnSwitchToPrevious.setText("Return To <b>"+return_label+"</b>"),mnuSendReport.setDisabled(!!preview_meta_data),mnuDownloadReport.setDisabled(!!preview_meta_data),this.setTemplate(charts_per_page),preview_meta_data?this.previewStore.loadData(preview_meta_data):this.previewStore.load({params:{report_id:report_id,token:token,charts_per_page:charts_per_page}})},self.previewStore=new Ext.data.JsonStore({storeId:"chart_store_"+this.id,autoDestroy:!1,root:"charts",totalProperty:"totalCount",successProperty:"success",messageProperty:"message",fields:["report_title","chart_title_0","chart_drill_details_0","chart_timeframe_0","chart_id_0","chart_title_1","chart_drill_details_1","chart_timeframe_1","chart_id_1","header_text","footer_text"],baseParams:{operation:"get_preview_data"},proxy:new Ext.data.HttpProxy({method:"POST",url:"controllers/report_builder.php"})});var activePage_width=850,activePage_height=1100,templatePresets={onePerPage:['<tpl for=".">',"<center>","<table width="+activePage_width+" height="+activePage_height+' border=0 style="border: 1px solid #999; background-color: #fff; padding: 10px">','<tr><td valign="top" style="padding-top: 10px" height=35 align="center"><i>{header_text}</i></td></tr>','<tr><td valign="top" height=50 align="center"><div style="width: 600px; word-wrap: break-word">{report_title}</div></td></tr>',"<tr><td valign=top align=center>",'<h2><span style="color: #000">{chart_title_0}</span></h2>','<span class="date_range">{chart_drill_details_0}</span><br /><br />','<span style="font-size: 10px">{chart_timeframe_0}</span><br />','<img width=600 height=450 src="{chart_id_0}&width=600&height=450" style="border: 0px solid #bbb"/>',"</td></tr>",'<tr><td valign="bottom" style="padding-bottom: 10px" align="center"><i>{footer_text}</i></td></tr>',"</table>","</center><br />","</tpl>"],twoPerPage:['<tpl for=".">',"<center>","<table width="+activePage_width+" height="+activePage_height+' border=0 style="border: 1px solid #999; background-color: #fff; padding: 10px">','<tr><td valign="top" style="padding-top: 10px" height=35 align="center"><i>{header_text}</i></td></tr>','<tr><td valign="top" height=50 align="center"><div style="width: 600px; word-wrap: break-word">{report_title}</div></td></tr>',"<tr><td valign=top align=center>",'<h2><span style="color: #000">{chart_title_0}</span></h2>','<span class="date_range">{chart_drill_details_0}</span><br /><br />','<img width=500 height=375 src="{chart_id_0}&width=500&height=375" style="border: 0px solid #bbb"/>',"</td></tr>",'<tr><td style="background-color: #fff"><div style="height: 3px"></div></td></tr>',"<tr><td valign=top align=center>",'<h2><span style="color: #000">{chart_title_1}</span></h2>','<span class="date_range">{chart_drill_details_1}</span><br /><br />','<img width=500 height=375 src="{chart_id_1}&width=500&height=375" style="border: 0px solid #bbb"/>',"</td></tr>",'<tr><td valign="bottom" style="padding-bottom: 10px" align="center"><i>{footer_text}</i></td></tr>',"</table>","</center><br />","</tpl>"]},xtOnePerPage=new Ext.XTemplate(templatePresets.onePerPage),xtTwoPerPage=new Ext.XTemplate(templatePresets.twoPerPage),view=new Ext.DataView({id:"dv_report_preview",title:"Chart",cls:"custom_report_viewer",loadingText:"Loading...",emptyText:"sorry, no preview yet",itemSelector:"",style:"overflow:auto",store:self.previewStore,autoScroll:!0,height:400});self.setTemplate=function(id){1==id&&(view.tpl=xtOnePerPage),2==id&&(view.tpl=xtTwoPerPage)};var sendReport=function(build_only,format){self.parent.buildReport(self.report_file_name,self.report_id,self,build_only,format)},mnuSendReport=new XDMoD.Reporting.ReportExportMenu({instance_module:"Preview",sendMode:!0,exportItemHandler:sendReport}),mnuDownloadReport=new XDMoD.Reporting.ReportExportMenu({instance_module:"Preview",exportItemHandler:sendReport}),btnSwitchToPrevious=new Ext.Button({iconCls:"btn_return_to_previous",handler:function(){XDMoD.TrackEvent("Report Generator (Preview)","Clicked on "+btnSwitchToPrevious.getText().replace(/<\/*b>/g,"")),self.parent.switchView(self.prevViewIndex)}});Ext.apply(this,{title:"Report Preview",layout:"fit",cls:"report_preview",items:[view],plugins:[new Ext.ux.plugins.ContainerMask({masked:!1})],tbar:{items:[mnuSendReport,mnuDownloadReport,"->",btnSwitchToPrevious]}}),XDMoD.ReportPreview.superclass.initComponent.call(this)}}),CCR.xdmod.ui.HighChartPanel=function(config){CCR.xdmod.ui.HighChartPanel.superclass.constructor.call(this,config)},Highcharts.setOptions({lang:{thousandsSep:","}}),Ext.extend(CCR.xdmod.ui.HighChartPanel,Ext.Panel,{credits:!0,isEmpty:!0,chartOptions:{},initComponent:function(){Ext.apply(this,{layout:"fit"}),CCR.xdmod.ui.HighChartPanel.superclass.initComponent.apply(this,arguments);var self=this;this.baseChartOptions=jQuery.extend(!0,{},{chart:{renderTo:this.id,width:this.width,height:this.height,animation:!1,events:{selection:function(event){self.fireEvent("timeseries_zoom",event)}}},plotOptions:{series:{animation:!1,turboThreshold:0}},title:"",loading:{labelStyle:{top:"45%"}},exporting:{enabled:!1},credits:{enabled:!0}},this.baseChartOptions),this.on("render",function(){this.initNewChart.call(this),this.on("resize",function(t,adjWidth,adjHeight,rawWidth,rawHeight){this.chart&&this.chart.setSize(adjWidth,adjHeight),this.baseChartOptions.chart.width=adjWidth,this.baseChartOptions.chart.height=adjHeight}),this.store&&this.store.on("load",function(t,records,options){if(!(t.getCount()<=0)&&(this.chartOptions=jQuery.extend(!0,{},this.baseChartOptions,t.getAt(0).data),this.chartOptions.exporting.enabled=!0===this.exporting,this.chartOptions.credits.enabled=!0===this.credits,this.chartOptions.title.text=this.highChartsTextEncode(this.chartOptions.title.text),this.isEmpty=this.chartOptions.series&&0===this.chartOptions.series.length,this.initNewChart.call(this),this.isEmpty)){var ch_width=.8*this.chartOptions.chart.width,ch_height=.8*this.chartOptions.chart.height;this.chart.renderer.image("gui/images/report_thumbnail_no_data.png",53,30,ch_width,ch_height).add()}},this)},this,{single:!0}),this.addEvents("timeseries_zoom")},initNewChart:function(chartOptions){this.chart&&(this.chart.destroy(),this.chart=null);var finalChartOptions={};chartOptions?jQuery.extend(!0,finalChartOptions,this.baseChartOptions,chartOptions):jQuery.extend(!0,finalChartOptions,this.baseChartOptions,this.chartOptions),this.chart=XDMoD.utils.createChart(finalChartOptions)},displayError:function(mainMessage,detailMessage){var errorChartOptions={title:{text:mainMessage,verticalAlign:"middle"}};detailMessage&&(errorChartOptions.subtitle={text:detailMessage,verticalAlign:"middle",y:32}),this.initNewChart.call(this,errorChartOptions)}}),CCR.xdmod.ui.HighChartPanel.prototype.highChartsTextEncode=function(text){return text?String(text).replace(/>/g,"&gt;").replace(/</g,"&lt;"):text},CCR.xdmod.CustomJsonStore=Ext.extend(Ext.data.JsonStore,{constructor:function(config){CCR.xdmod.CustomJsonStore.superclass.constructor.call(this,config)}}),Ext.reg("xdmodstore",CCR.xdmod.CustomJsonStore),Ext.ux.Portal=Ext.extend(Ext.Panel,{layout:"column",autoScroll:!0,cls:"x-portal",defaultType:"portalcolumn",initComponent:function(){Ext.ux.Portal.superclass.initComponent.call(this),this.addEvents({validatedrop:!0,beforedragover:!0,dragover:!0,beforedrop:!0,drop:!0})},initEvents:function(){Ext.ux.Portal.superclass.initEvents.call(this),this.dd=new Ext.ux.Portal.DropZone(this,this.dropConfig)},beforeDestroy:function(){this.dd&&this.dd.unreg(),Ext.ux.Portal.superclass.beforeDestroy.call(this)}}),Ext.reg("portal",Ext.ux.Portal),Ext.ux.Portal.DropZone=Ext.extend(Ext.dd.DropTarget,{constructor:function(portal,cfg){this.portal=portal,Ext.dd.ScrollManager.register(portal.body),Ext.ux.Portal.DropZone.superclass.constructor.call(this,portal.bwrap.dom,cfg),portal.body.ddScrollConfig=this.ddScrollConfig},ddScrollConfig:{vthresh:50,hthresh:-1,animate:!0,increment:200},createEvent:function(dd,e,data,col,c,pos){return{portal:this.portal,panel:data.panel,columnIndex:col,column:c,position:pos,data:data,source:dd,rawEvent:e,status:this.dropAllowed}},notifyOver:function(dd,e,data){var xy=e.getXY(),portal=this.portal,px=dd.proxy;this.grid||(this.grid=this.getGrid());var cw=portal.body.dom.clientWidth;this.lastCW?this.lastCW!=cw&&(this.lastCW=cw,portal.doLayout(),this.grid=this.getGrid()):this.lastCW=cw;for(var col=0,xs=this.grid.columnX,cmatch=!1,len=xs.length;col<len;col++)if(xy[0]<xs[col].x+xs[col].w){cmatch=!0;break}cmatch||col--;var p,match=!1,pos=0,c=portal.items.itemAt(col),items=c.items.items,overSelf=!1;for(len=items.length;pos<len;pos++){var h=(p=items[pos]).el.getHeight();if(0===h)overSelf=!0;else if(p.el.getY()+h/2>xy[1]){match=!0;break}}pos=(match&&p?pos:c.items.getCount())+(overSelf?-1:0);var overEvent=this.createEvent(dd,e,data,col,c,pos);return!1!==portal.fireEvent("validatedrop",overEvent)&&!1!==portal.fireEvent("beforedragover",overEvent)&&(px.getProxy().setWidth("auto"),p?px.moveProxy(p.el.dom.parentNode,match?p.el.dom:null):px.moveProxy(c.el.dom,null),this.lastPos={c:c,col:col,p:!!(overSelf||match&&p)&&pos},this.scrollPos=portal.body.getScroll(),portal.fireEvent("dragover",overEvent)),overEvent.status},notifyOut:function(){delete this.grid},notifyDrop:function(dd,e,data){if(delete this.grid,this.lastPos){var c=this.lastPos.c,col=this.lastPos.col,pos=this.lastPos.p,panel=dd.panel,dropEvent=this.createEvent(dd,e,data,col,c,!1!==pos?pos:c.items.getCount());if(!1!==this.portal.fireEvent("validatedrop",dropEvent)&&!1!==this.portal.fireEvent("beforedrop",dropEvent)){dd.proxy.getProxy().remove(),panel.el.dom.parentNode.removeChild(dd.panel.el.dom),!1!==pos?c.insert(pos,panel):c.add(panel),c.doLayout(),this.portal.fireEvent("drop",dropEvent);var st=this.scrollPos.top;if(st){var d=this.portal.body.dom;setTimeout(function(){d.scrollTop=st},10)}}delete this.lastPos}},getGrid:function(){var box=this.portal.bwrap.getBox();return box.columnX=[],this.portal.items.each(function(c){box.columnX.push({x:c.el.getX(),w:c.el.getWidth()})}),box},unreg:function(){Ext.dd.ScrollManager.unregister(this.portal.body),Ext.ux.Portal.DropZone.superclass.unreg.call(this)}}),Ext.ux.PortalColumn=Ext.extend(Ext.Container,{layout:"anchor",defaultType:"portlet",cls:"x-portal-column"}),Ext.reg("portalcolumn",Ext.ux.PortalColumn),Ext.ux.Portlet=Ext.extend(Ext.Panel,{anchor:"100%",frame:!0,collapsible:!0,draggable:!0,cls:"x-portlet"}),Ext.reg("portlet",Ext.ux.Portlet),Ext.override(Ext.tree.TreeNodeUI,{grayedValue:null,onDisableChange:function(node,state){this.disabled=state,this[state?"addClass":"removeClass"]("x-tree-node-disabled")},initEvents:function(){this.node.on("move",this.onMove,this),this.node.disabled&&(this.disabled=!0,this.addClass("x-tree-node-disabled")),this.node.hidden&&this.hide();var ot=this.node.getOwnerTree();!(ot.enableDD||ot.enableDrag||ot.enableDrop)||this.node.isRoot&&!ot.rootVisible||Ext.dd.Registry.register(this.elNode,{node:this.node,handles:this.getDDHandles(),isHandle:!1})},onDblClick:function(e){e.preventDefault(),this.disabled||(this.animating||!this.node.isExpandable()||e.getTarget(".x-tree-checkbox",1)||this.node.toggle(),this.fireEvent("dblclick",this.node,e))},onCheckChange:function(){var checked=this.isChecked();checked!==this.node.attributes.checked&&(this.node.attributes.checked=checked,this.fireEvent("checkchange",this.node,checked))},toggleCheck:function(checked){var cb=this.checkbox;return!!cb&&(void 0===checked&&(checked=!1===this.isChecked()),!0===checked?Ext.fly(cb).replaceClass("x-tree-node-grayed","x-tree-node-checked"):!1!==checked?Ext.fly(cb).replaceClass("x-tree-node-checked","x-tree-node-grayed"):Ext.fly(cb).removeClass(["x-tree-node-checked","x-tree-node-grayed"]),this.onCheckChange(),checked)},onCheckboxClick:function(){this.disabled||this.toggleCheck()},onCheckboxOver:function(){this.addClass("x-tree-checkbox-over")},onCheckboxOut:function(){this.removeClass("x-tree-checkbox-over")},onCheckboxDown:function(){this.addClass("x-tree-checkbox-down")},onCheckboxUp:function(){this.removeClass("x-tree-checkbox-down")},renderElements:function(n,a,targetNode,bulkRender){this.indentMarkup=n.parentNode?n.parentNode.ui.getChildIndent():"";var nel,cb=void 0!==a.checked,href=a.href?a.href:Ext.isGecko?"":"#",buf=['<li class="x-tree-node"><div ext:tree-node-id="',n.id,'" class="x-tree-node-el x-tree-node-leaf x-unselectable ',a.cls,'" unselectable="on">','<span class="x-tree-node-indent">',this.indentMarkup,"</span>",'<img src="',this.emptyIcon,'" class="x-tree-ec-icon x-tree-elbow" />','<img src="',a.icon||this.emptyIcon,'" class="x-tree-node-icon',a.icon?" x-tree-node-inline-icon":"",a.iconCls?" "+a.iconCls:"",'" unselectable="on" />',cb?'<img src="'+this.emptyIcon+'" class="x-tree-checkbox'+(!0===a.checked?" x-tree-node-checked":!1!==a.checked?" x-tree-node-grayed":"")+'" />':"",'<a hidefocus="on" class="x-tree-node-anchor" href="',href,'" tabIndex="1" ',a.hrefTarget?' target="'+a.hrefTarget+'"':"",'><span unselectable="on">',n.text,"</span></a></div>",'<ul class="x-tree-node-ct" style="display:none;"></ul>',"</li>"].join("");!0!==bulkRender&&n.nextSibling&&(nel=n.nextSibling.ui.getEl())?this.wrap=Ext.DomHelper.insertHtml("beforeBegin",nel,buf):this.wrap=Ext.DomHelper.insertHtml("beforeEnd",targetNode,buf),this.elNode=this.wrap.childNodes[0],this.ctNode=this.wrap.childNodes[1];var cs=this.elNode.childNodes;this.indentNode=cs[0],this.ecNode=cs[1],this.iconNode=cs[2];var index=3;cb&&(this.checkbox=cs[3],index++),this.anchor=cs[index],this.textNode=cs[index].firstChild},isChecked:function(){return!!this.checkbox&&(!!Ext.fly(this.checkbox).hasClass("x-tree-node-checked")||!!Ext.fly(this.checkbox).hasClass("x-tree-node-grayed")&&this.grayedValue)},getChecked:function(){return this.node.attributes.checked}}),Ext.override(Ext.tree.TreeEventModel,{initEvents:function(){var el=this.tree.getTreeEl();el.on("click",this.delegateClick,this),!1!==this.tree.trackMouseOver&&(el.on("mouseover",this.delegateOver,this),el.on("mouseout",this.delegateOut,this)),el.on("mousedown",this.delegateDown,this),el.on("mouseup",this.delegateUp,this),el.on("dblclick",this.delegateDblClick,this),el.on("contextmenu",this.delegateContextMenu,this)},delegateOver:function(e,t){this.beforeEvent(e)&&(this.lastEcOver&&(this.onIconOut(e,this.lastEcOver),delete this.lastEcOver),this.lastCbOver&&(this.onCheckboxOut(e,this.lastCbOver),delete this.lastCbOver),e.getTarget(".x-tree-ec-icon",1)?(this.lastEcOver=this.getNode(e),this.onIconOver(e,this.lastEcOver)):e.getTarget(".x-tree-checkbox",1)&&(this.lastCbOver=this.getNode(e),this.onCheckboxOver(e,this.lastCbOver)),this.getNodeTarget(e)&&this.onNodeOver(e,this.getNode(e)))},delegateOut:function(e,t){var n;this.beforeEvent(e)&&(e.getTarget(".x-tree-ec-icon",1)?(n=this.getNode(e),this.onIconOut(e,n),n==this.lastEcOver&&delete this.lastEcOver):e.getTarget(".x-tree-checkbox",1)&&(n=this.getNode(e),this.onCheckboxOut(e,n),n==this.lastCbOver&&delete this.lastCbOver),(t=this.getNodeTarget(e))&&!e.within(t,!0)&&this.onNodeOut(e,this.getNode(e)))},delegateDown:function(e,t){this.beforeEvent(e)&&e.getTarget(".x-tree-checkbox",1)&&this.onCheckboxDown(e,this.getNode(e))},delegateUp:function(e,t){this.beforeEvent(e)&&e.getTarget(".x-tree-checkbox",1)&&this.onCheckboxUp(e,this.getNode(e))},delegateClick:function(e,t){this.beforeEvent(e)&&(e.getTarget(".x-tree-checkbox",1)?this.onCheckboxClick(e,this.getNode(e)):e.getTarget(".x-tree-ec-icon",1)?this.onIconClick(e,this.getNode(e)):this.getNodeTarget(e)&&this.onNodeClick(e,this.getNode(e)))},onCheckboxClick:function(e,node){node.ui&&node.ui.onCheckboxClick()},onCheckboxOver:function(e,node){node.ui&&node.ui.onCheckboxOver()},onCheckboxOut:function(e,node){node.ui&&node.ui.onCheckboxOut()},onCheckboxDown:function(e,node){node.ui&&node.ui.onCheckboxDown()},onCheckboxUp:function(e,node){node.ui&&node.ui.onCheckboxUp()}}),Ext.override(Ext.tree.TreePanel,{getChecked:function(a,startNode){startNode=startNode||this.root;var r=[];return startNode.cascade(function(){if(this.ui.getChecked())return r.push(a?"id"==a?this.id:this.attributes[a]:this),this.isLeaf()}),r}}),Ext.tree.TriStateNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{onCheckChange:function(){Ext.tree.TriStateNodeUI.superclass.onCheckChange.apply(this,arguments);for(var p=this.node;(p=p.parentNode)&&p.getUI().updateParent&&p.getUI().checkbox&&!p.getUI().isUpdating;)p.getUI().updateParent()},toggleCheck:function(){var checked=Ext.tree.TriStateNodeUI.superclass.toggleCheck.apply(this,arguments);return this.updateChild(checked),checked},renderElements:function(n,a,targetNode,bulkRender){Ext.tree.TriStateNodeUI.superclass.renderElements.apply(this,arguments),this.updateChild(this.node.attributes.checked)},updateParent:function(){var checked;this.node.eachChild(function(n){if(void 0===checked)checked=n.attributes.checked;else if(checked!==n.attributes.checked)return checked=this.grayedValue,!1},this),this.toggleCheck(checked)},updateChild:function(checked){if("boolean"==typeof checked){if(this.isUpdating=!0,this.node.childrenRendered)this.node.eachChild(function(n){n.getUI().toggleCheck(checked)},this);else if(this.node.attributes.children)for(var i=0;i<this.node.attributes.children.length;i++)this.node.attributes.children[i].checked=checked;delete this.isUpdating}}}),XDMoD.RESTTree=Ext.extend(Ext.tree.TreePanel,{restAction:null,determineArguments:null,nodeClickHandler:null,cbTreeData:null,initComponent:function(){var self=this;this.cbTreeData=this.cbTreeData||function(response,args){response.success?args.cachedNode.appendChild(response.results):Ext.MessageBox.alert("XDMoD.RESTTree",response.message)};var myTreeLoader=new Ext.tree.TreeLoader({dataUrl:"rest_override",requestData:function(node,callback,scope){!1!==this.fireEvent("beforeload",this,node,callback)?this.transId=XDMoD.REST.Call({scope:this,action:self.restAction,callback:cbData,callbackArguments:{cachedNode:node},success:this.handleResponse,failure:this.handleFailure,argument:{callback:callback,node:node,scope:scope},arguments:this.call_arguments,resume:!0}):this.runCallback(callback,scope||node,[])}});myTreeLoader.on("beforeload",function(loader,node,callback){return loader.call_arguments=this.determineArguments(node),!0},this),this.nodeClickHandler&&this.getSelectionModel().on("selectionchange",function(model,node){this.nodeClickHandler(node)},this);var cbData=this.cbTreeData;Ext.apply(this,function(){var setupConfig,argumentsToCheck=[];for(argumentsToCheck.push(new Array(self.restAction,"restAction")),argumentsToCheck.push(new Array(self.determineArguments,"determineArguments")),i=0;i<argumentsToCheck.length;i++)if(!argumentsToCheck[i][0])return setupConfig={root:new Ext.tree.AsyncTreeNode({text:"Error Creating Tree: <b>"+argumentsToCheck[i][1]+"</b> not defined",leaf:!0})},Ext.MessageBox.alert("XDMoD.RESTTree","You must define <b>"+argumentsToCheck[i][1]+"</b> in your <b>XDMoD.RESTTree</b> constructor"),self.rootVisible=!0,setupConfig;return setupConfig={loader:myTreeLoader,useArrows:!0,autoScroll:!0,animate:!0,root:self.root||new Ext.tree.AsyncTreeNode}}()),XDMoD.RESTTree.superclass.initComponent.call(this)}}),Ext.ns("Ext.ux.grid"),Ext.ux.grid.BufferView=Ext.extend(Ext.grid.GridView,{rowHeight:19,borderHeight:2,scrollDelay:100,cacheSize:20,cleanDelay:500,initTemplates:function(){Ext.ux.grid.BufferView.superclass.initTemplates.call(this);var ts=this.templates;ts.rowHolder=new Ext.Template('<div class="x-grid3-row {alt}" style="{tstyle}"></div>'),ts.rowHolder.disableFormats=!0,ts.rowHolder.compile(),ts.rowBody=new Ext.Template('<table class="x-grid3-row-table" border="0" cellspacing="0" cellpadding="0" style="{tstyle}">',"<tbody><tr>{cells}</tr>",this.enableRowBody?'<tr class="x-grid3-row-body-tr" style="{bodyStyle}"><td colspan="{cols}" class="x-grid3-body-cell" tabIndex="0" hidefocus="on"><div class="x-grid3-row-body">{body}</div></td></tr>':"","</tbody></table>"),ts.rowBody.disableFormats=!0,ts.rowBody.compile(),ts.hcell=new Ext.Template('<td class="x-grid3-hd x-grid3-cell x-grid3-td-{id} {css}" style="{style}">','<div {tooltip} {attr} class="x-grid3-hd-inner x-grid3-hd-{id}" unselectable="on" style="{istyle}">',this.grid.enableHdMenu?'<a class="x-grid3-hd-btn" href="#"></a>':"",'<img alt="" class="x-grid3-sort-icon" src="',Ext.BLANK_IMAGE_URL,'" />',"{value}","</div>","</td>"),ts.hcell.disableFormats=!0,ts.hcell.compile()},getStyleRowHeight:function(){return Ext.isBorderBox?this.rowHeight+this.borderHeight:this.rowHeight},getCalculatedRowHeight:function(){return this.rowHeight+this.borderHeight},getVisibleRowCount:function(){var rh=this.getCalculatedRowHeight(),visibleHeight=this.scroller.dom.clientHeight;return visibleHeight<1?0:Math.ceil(visibleHeight/rh)},getVisibleRows:function(){var count=this.getVisibleRowCount(),sc=this.scroller.dom.scrollTop,start=0===sc?0:Math.floor(sc/this.getCalculatedRowHeight())-1;return{first:Math.max(start,0),last:Math.min(start+count+2,this.ds.getCount()-1)}},doRender:function(cs,rs,ds,startRow,colCount,stripe,onlyBody){for(var cb,c,r,ts=this.templates,ct=ts.cell,rt=ts.row,rb=ts.rowBody,last=colCount-1,rh=this.getStyleRowHeight(),vr=this.getVisibleRows(),buf=[],p={},rp={tstyle:"width:"+this.getTotalWidth()+";height:"+rh+"px;"},j=0,len=rs.length;j<len;j++){r=rs[j],cb=[];var rowIndex=j+startRow,visible=rowIndex>=vr.first&&rowIndex<=vr.last;if(visible)for(var i=0;i<colCount;i++)c=cs[i],p.id=c.id,p.css=0===i?"x-grid3-cell-first ":i==last?"x-grid3-cell-last ":"",p.attr=p.cellAttr="",p.value=c.renderer(r.data[c.name],p,r,rowIndex,i,ds),p.style=c.style,void 0!==p.value&&""!==p.value||(p.value="&#160;"),r.dirty&&void 0!==r.modified[c.name]&&(p.css+=" x-grid3-dirty-cell"),cb[cb.length]=ct.apply(p);var alt=[];stripe&&(rowIndex+1)%2==0&&(alt[0]="x-grid3-row-alt"),r.dirty&&(alt[1]=" x-grid3-dirty-row"),rp.cols=colCount,this.getRowClass&&(alt[2]=this.getRowClass(r,rowIndex,rp,ds)),rp.alt=alt.join(" "),rp.cells=cb.join(""),buf[buf.length]=visible?onlyBody?rb.apply(rp):rt.apply(rp):ts.rowHolder.apply(rp)}return buf.join("")},isRowRendered:function(index){var row=this.getRow(index);return row&&0<row.childNodes.length},syncScroll:function(){Ext.ux.grid.BufferView.superclass.syncScroll.apply(this,arguments),this.update()},update:function(){this.scrollDelay?(this.renderTask||(this.renderTask=new Ext.util.DelayedTask(this.doUpdate,this)),this.renderTask.delay(this.scrollDelay)):this.doUpdate()},onRemove:function(ds,record,index,isUpdate){Ext.ux.grid.BufferView.superclass.onRemove.apply(this,arguments),!0!==isUpdate&&this.update()},doUpdate:function(){if(0<this.getVisibleRowCount()){for(var row,g=this.grid,cm=g.colModel,ds=g.store,cs=this.getColumnData(),vr=this.getVisibleRows(),i=vr.first;i<=vr.last;i++)if(!this.isRowRendered(i)&&(row=this.getRow(i))){var html=this.doRender(cs,[ds.getAt(i)],ds,i,cm.getColumnCount(),g.stripeRows,!0);row.innerHTML=html}this.clean()}},clean:function(){this.cleanTask||(this.cleanTask=new Ext.util.DelayedTask(this.doClean,this)),this.cleanTask.delay(this.cleanDelay)},doClean:function(){if(0<this.getVisibleRowCount()){var vr=this.getVisibleRows();vr.first-=this.cacheSize,vr.last+=this.cacheSize;var i=0,rows=this.getRows();vr.first<=0&&(i=vr.last+1);for(var len=this.ds.getCount();i<len;i++)(i<vr.first||i>vr.last)&&rows[i].innerHTML&&(rows[i].innerHTML="")}},removeTask:function(name){var task=this[name];task&&task.cancel&&(task.cancel(),this[name]=null)},destroy:function(){this.removeTask("cleanTask"),this.removeTask("renderTask"),Ext.ux.grid.BufferView.superclass.destroy.call(this)},layout:function(){Ext.ux.grid.BufferView.superclass.layout.call(this),this.update()}}),Ext.ux.Spinner=Ext.extend(Ext.util.Observable,{incrementValue:1,alternateIncrementValue:5,triggerClass:"x-form-spinner-trigger",splitterClass:"x-form-spinner-splitter",alternateKey:Ext.EventObject.shiftKey,defaultValue:0,accelerate:!1,constructor:function(config){Ext.ux.Spinner.superclass.constructor.call(this,config),Ext.apply(this,config),this.mimicing=!1},init:function(field){(this.field=field).afterMethod("onRender",this.doRender,this),field.afterMethod("onEnable",this.doEnable,this),field.afterMethod("onDisable",this.doDisable,this),field.afterMethod("afterRender",this.doAfterRender,this),field.afterMethod("onResize",this.doResize,this),field.afterMethod("onFocus",this.doFocus,this),field.beforeMethod("onDestroy",this.doDestroy,this)},doRender:function(ct,position){var el=this.el=this.field.getEl(),f=this.field;f.wrap?this.wrap=f.wrap.addClass("x-form-field-wrap"):f.wrap=this.wrap=el.wrap({cls:"x-form-field-wrap"}),this.trigger=this.wrap.createChild({tag:"img",src:Ext.BLANK_IMAGE_URL,cls:"x-form-trigger "+this.triggerClass}),f.width||this.wrap.setWidth(el.getWidth()+this.trigger.getWidth()),this.splitter=this.wrap.createChild({tag:"div",cls:this.splitterClass,style:"width:13px; height:2px;"}),this.splitter.setRight(Ext.isIE?1:2).setTop(10).show(),this.proxy=this.trigger.createProxy("",this.splitter,!0),this.proxy.addClass("x-form-spinner-proxy"),this.proxy.setStyle("left","0px"),this.proxy.setSize(14,1),this.proxy.hide(),this.dd=new Ext.dd.DDProxy(this.splitter.dom.id,"SpinnerDrag",{dragElId:this.proxy.id}),this.initTrigger(),this.initSpinner()},doAfterRender:function(){var y;Ext.isIE&&this.el.getY()!=(y=this.trigger.getY())&&(this.el.position(),this.el.setY(y))},doEnable:function(){this.wrap&&this.wrap.removeClass(this.field.disabledClass)},doDisable:function(){this.wrap&&(this.wrap.addClass(this.field.disabledClass),this.el.removeClass(this.field.disabledClass))},doResize:function(w,h){"number"==typeof w&&this.el.setWidth(w-this.trigger.getWidth()),this.wrap.setWidth(this.el.getWidth()+this.trigger.getWidth())},doFocus:function(){this.mimicing||(this.wrap.addClass("x-trigger-wrap-focus"),this.mimicing=!0,Ext.get(Ext.isIE?document.body:document).on("mousedown",this.mimicBlur,this,{delay:10}),this.el.on("keydown",this.checkTab,this))},checkTab:function(e){e.getKey()==e.TAB&&this.triggerBlur()},mimicBlur:function(e){!this.wrap.contains(e.target)&&this.field.validateBlur(e)&&this.triggerBlur()},triggerBlur:function(){this.mimicing=!1,Ext.get(Ext.isIE?document.body:document).un("mousedown",this.mimicBlur,this),this.el.un("keydown",this.checkTab,this),this.field.beforeBlur(),this.wrap.removeClass("x-trigger-wrap-focus"),this.field.onBlur.call(this.field)},initTrigger:function(){this.trigger.addClassOnOver("x-form-trigger-over"),this.trigger.addClassOnClick("x-form-trigger-click")},initSpinner:function(){this.field.addEvents({spin:!0,spinup:!0,spindown:!0}),this.keyNav=new Ext.KeyNav(this.el,{up:function(e){e.preventDefault(),this.onSpinUp()},down:function(e){e.preventDefault(),this.onSpinDown()},pageUp:function(e){e.preventDefault(),this.onSpinUpAlternate()},pageDown:function(e){e.preventDefault(),this.onSpinDownAlternate()},scope:this}),this.repeater=new Ext.util.ClickRepeater(this.trigger,{accelerate:this.accelerate}),this.field.mon(this.repeater,"click",this.onTriggerClick,this,{preventDefault:!0}),this.field.mon(this.trigger,{mouseover:this.onMouseOver,mouseout:this.onMouseOut,mousemove:this.onMouseMove,mousedown:this.onMouseDown,mouseup:this.onMouseUp,scope:this,preventDefault:!0}),this.field.mon(this.wrap,"mousewheel",this.handleMouseWheel,this),this.dd.setXConstraint(0,0,10),this.dd.setYConstraint(1500,1500,10),this.dd.endDrag=this.endDrag.createDelegate(this),this.dd.startDrag=this.startDrag.createDelegate(this),this.dd.onDrag=this.onDrag.createDelegate(this)},onMouseOver:function(){if(!this.disabled){var middle=this.getMiddle();this.tmpHoverClass=Ext.EventObject.getPageY()<middle?"x-form-spinner-overup":"x-form-spinner-overdown",this.trigger.addClass(this.tmpHoverClass)}},onMouseOut:function(){this.trigger.removeClass(this.tmpHoverClass)},onMouseMove:function(){if(!this.disabled){var middle=this.getMiddle();Ext.EventObject.getPageY()>middle&&"x-form-spinner-overup"==this.tmpHoverClass||Ext.EventObject.getPageY()<middle&&this.tmpHoverClass}},onMouseDown:function(){if(!this.disabled){var middle=this.getMiddle();this.tmpClickClass=Ext.EventObject.getPageY()<middle?"x-form-spinner-clickup":"x-form-spinner-clickdown",this.trigger.addClass(this.tmpClickClass)}},onMouseUp:function(){this.trigger.removeClass(this.tmpClickClass)},onTriggerClick:function(){if(!this.disabled&&!this.el.dom.readOnly){var middle=this.getMiddle();this["onSpin"+(Ext.EventObject.getPageY()<middle?"Up":"Down")]()}},getMiddle:function(){return this.trigger.getTop()+this.trigger.getHeight()/2},isSpinnable:function(){return!this.disabled&&!this.el.dom.readOnly||(Ext.EventObject.preventDefault(),!1)},handleMouseWheel:function(e){if(0!=this.wrap.hasClass("x-trigger-wrap-focus")){var delta=e.getWheelDelta();0<delta?(this.onSpinUp(),e.stopEvent()):delta<0&&(this.onSpinDown(),e.stopEvent())}},startDrag:function(){this.proxy.show(),this._previousY=Ext.fly(this.dd.getDragEl()).getTop()},endDrag:function(){this.proxy.hide()},onDrag:function(){if(!this.disabled){var y=Ext.fly(this.dd.getDragEl()).getTop(),ud="";this._previousY>y&&(ud="Up"),this._previousY<y&&(ud="Down"),""!=ud&&this["onSpin"+ud](),this._previousY=y}},onSpinUp:function(){0!=this.isSpinnable()&&(1!=Ext.EventObject.shiftKey?(this.spin(!1,!1),this.field.fireEvent("spin",this),this.field.fireEvent("spinup",this)):this.onSpinUpAlternate())},onSpinDown:function(){0!=this.isSpinnable()&&(1!=Ext.EventObject.shiftKey?(this.spin(!0,!1),this.field.fireEvent("spin",this),this.field.fireEvent("spindown",this)):this.onSpinDownAlternate())},onSpinUpAlternate:function(){0!=this.isSpinnable()&&(this.spin(!1,!0),this.field.fireEvent("spin",this),this.field.fireEvent("spinup",this))},onSpinDownAlternate:function(){0!=this.isSpinnable()&&(this.spin(!0,!0),this.field.fireEvent("spin",this),this.field.fireEvent("spindown",this))},spin:function(down,alternate){var v=parseFloat(this.field.getValue()),startValue=v,incr=1==alternate?this.alternateIncrementValue:this.incrementValue;1==down?v-=incr:v+=incr,v=isNaN(v)?this.defaultValue:v,v=this.fixBoundries(v),this.field.setRawValue(v),this.field.fireEvent("change",this.field,v,startValue)},fixBoundries:function(value){var v=value;return null!=this.field.minValue&&v<this.field.minValue&&(v=this.field.minValue),null!=this.field.maxValue&&v>this.field.maxValue&&(v=this.field.maxValue),this.fixPrecision(v)},fixPrecision:function(value){var nan=isNaN(value);return this.field.allowDecimals&&-1!=this.field.decimalPrecision&&!nan&&value?parseFloat(parseFloat(value).toFixed(this.field.decimalPrecision)):nan?"":value},doDestroy:function(){this.trigger&&this.trigger.remove(),this.wrap&&(this.wrap.remove(),delete this.field.wrap),this.splitter&&this.splitter.remove(),this.dd&&(this.dd.unreg(),this.dd=null),this.proxy&&this.proxy.remove(),this.repeater&&this.repeater.purgeListeners()}}),Ext.form.Spinner=Ext.ux.Spinner,Ext.ns("Ext.ux.form"),Ext.ux.form.SpinnerField=Ext.extend(Ext.form.NumberField,{actionMode:"wrap",deferHeight:!0,autoSize:Ext.emptyFn,adjustSize:Ext.BoxComponent.prototype.adjustSize,constructor:function(config){var spinnerConfig=Ext.copyTo({},config,"incrementValue,alternateIncrementValue,accelerate,defaultValue,triggerClass,splitterClass"),spl=this.spinner=new Ext.ux.Spinner(spinnerConfig),plugins=config.plugins?Ext.isArray(config.plugins)?config.plugins.push(spl):[config.plugins,spl]:spl;Ext.ux.form.SpinnerField.superclass.constructor.call(this,Ext.apply(config,{plugins:plugins}))},getResizeEl:function(){return this.wrap},getPositionEl:function(){return this.wrap},alignErrorIcon:function(){this.wrap&&this.errorIcon.alignTo(this.wrap,"tl-tr",[2,0])},validateBlur:function(){return!0}}),Ext.reg("spinnerfield",Ext.ux.form.SpinnerField),Ext.form.SpinnerField=Ext.ux.form.SpinnerField,CCR.xdmod.ui.CustomCheckItem=Ext.extend(Ext.menu.CheckItem,{wasChecked:!1,initComponent:function(){CCR.xdmod.ui.CustomCheckItem.superclass.initComponent.call(this),wasChecked=null},setChecked:function(checked,supress){CCR.xdmod.ui.CustomCheckItem.superclass.setChecked.call(this,checked,supress)},setDisabled:function(disabled){1==disabled?(this.wasChecked=this.checked,this.setChecked(!1,!0)):null!=this.wasChecked&&(this.setChecked(this.wasChecked,!0),this.wasChecked=null),CCR.xdmod.ui.CustomCheckItem.superclass.setDisabled.apply(this,arguments)}}),Ext.reg("customcheckitem",CCR.xdmod.ui.CustomCheckItem),CCR.xdmod.ui.CustomDateField=Ext.extend(Ext.form.DateField,{initComponent:function(){var self=this,previousValue=self.value.format("Y-m-d");self.didChange=function(){return previousValue!=self.getRawValue()},self.updatePreviousValue=function(v){previousValue=self.getRawValue()},CCR.xdmod.ui.CustomDateField.superclass.initComponent.call(this),Ext.getDoc().on("mousedown",function(e){if(this.menu&&this.menu.isVisible()){var menuBox=this.menu.getBox(),ex=e.getPageX(),ey=e.getPageY();(ex>menuBox.x+menuBox.width||ex<menuBox.x||ey>menuBox.y+menuBox.height||ey<menuBox.y)&&this.menu.hide()}},this)}}),Ext.reg("customdatefield",CCR.xdmod.ui.CustomDateField),CCR.xdmod.ui.CustomSplitButton=Ext.extend(Ext.Button,{initComponent:function(){CCR.xdmod.ui.CustomSplitButton.superclass.initComponent.call(this),this.menuAlign="tl-bl?",Ext.menu.MenuMgr.unregister(this.menu),Ext.getDoc().on("mousedown",function(e){if(this.menu&&this.menu.isVisible()){var menuBox=this.menu.getBox(),ex=e.getPageX(),ey=e.getPageY();(ex>menuBox.x+menuBox.width||ex<menuBox.x||ey>menuBox.y+menuBox.height||ey<menuBox.y)&&this.menu.hide()}},this)}}),Ext.reg("customsplitbutton",CCR.xdmod.ui.CustomSplitButton),CCR.xdmod.ui.CustomTwinTriggerField=Ext.extend(Ext.form.TwinTriggerField,{initComponent:function(){var config={validationEvent:!1,validateOnBlur:!1,trigger1Class:"x-form-clear-trigger",trigger2Class:"x-form-search-trigger",hideTrigger1:!0,hasSearch:!1,enableKeyEvents:!0,listeners:{specialkey:function(field,e){e.getKey()==e.ENTER&&this.onTrigger2Click()}},onTrigger1Click:function(){this.hasSearch&&(this.el.dom.value="",this.store.baseParams.search_text="",this.store.load(),this.triggers[0].hide(),this.hasSearch=!1)},onTrigger2Click:function(){var v=this.getRawValue();v.length<1?this.onTrigger1Click():(this.store.baseParams.search_text=v,this.store.load(),this.hasSearch=!0,this.triggers[0].show())}};Ext.apply(this,config),Ext.apply(this.initialConfig,config),CCR.xdmod.ui.CustomTwinTriggerField.superclass.initComponent.call(this)}}),CCR.xdmod.ui.CustomRowNumberer=Ext.extend(Object,{header:"",width:25,sortable:!1,constructor:function(config){Ext.apply(this,config),this.rowspan&&(this.renderer=this.renderer.createDelegate(this))},fixed:!0,hideable:!1,menuDisabled:!0,dataIndex:"",id:"numberer",rowspan:void 0,renderer:function(v,p,record,rowIndex){return this.rowspan&&(p.cellAttr='rowspan="'+this.rowspan+'"'),(this.scope&&this.scope.offset?this.scope.offset:record.store.lastOptions&&record.store.lastOptions.params&&record.store.lastOptions.params.start?record.store.lastOptions.params.start:0)+rowIndex+1}}),function(){var T=Ext.Toolbar;CCR.xdmod.ui.CustomPagingToolbar=Ext.extend(Ext.PagingToolbar,{_pagingEnabled:!0,initComponent:function(){this.pagingItems=[this.first=new T.Button({tooltip:this.firstText,overflowText:this.firstText,iconCls:"x-tbar-page-first",disabled:!0,handler:this.moveFirst,scope:this}),this.prev=new T.Button({tooltip:this.prevText,overflowText:this.prevText,iconCls:"x-tbar-page-prev",disabled:!0,handler:this.movePrevious,scope:this}),"-",this.beforePageText,this.inputItem=new Ext.form.NumberField({cls:"x-tbar-page-number",allowDecimals:!1,allowNegative:!1,enableKeyEvents:!0,selectOnFocus:!0,submitValue:!1,listeners:{scope:this,keydown:this.onPagingKeyDown,blur:this.onPagingBlur}}),this.afterTextItem=new T.TextItem({text:String.format(this.afterPageText,1)}),"-",this.next=new T.Button({tooltip:this.nextText,overflowText:this.nextText,iconCls:"x-tbar-page-next",disabled:!0,handler:this.moveNext,scope:this}),this.last=new T.Button({tooltip:this.lastText,overflowText:this.lastText,iconCls:"x-tbar-page-last",disabled:!0,handler:this.moveLast,scope:this})],this.refresh=new T.Button({tooltip:this.refreshText,overflowText:this.refreshText,iconCls:"x-tbar-loading",handler:this.doRefresh,scope:this}),this.showRefresh&&(this.pagingItems.push("-"),this.pagingItems.push(this.refresh));var userItems=this.items||this.buttons||[];this.items=this.pagingItems.concat(userItems),this.preItems&&0<this.preItems.length&&(this.preItems.push("-"),this.items=this.preItems.concat(this.items)),delete this.buttons,this.displayInfo&&(this.items.push("->"),this.items.push(this.displayItem=new T.TextItem({}))),Ext.PagingToolbar.superclass.initComponent.call(this),this.addEvents("change","beforechange"),this.on("afterlayout",this.onFirstLayout,this,{single:!0}),this.cursor=0,this.bindStore(this.store,!0)},_disableComponentSilently:function(component){component.disable(!0)},setPagingEnabled:function(pagingEnabled){pagingEnabled!==this._pagingEnabled&&(Ext.each(this.pagingItems,function(pagingItem){pagingItem instanceof Ext.Component&&(pagingEnabled?pagingItem.removeListener("enable",this._disableComponentSilently):pagingItem.addListener("enable",this._disableComponentSilently),pagingItem.setDisabled(!pagingEnabled))},this),this._pagingEnabled=pagingEnabled)}})}(),Ext.reg("custompaging",CCR.xdmod.ui.CustomPagingToolbar),Ext.ux.DynamicGridPanel=Ext.extend(Ext.grid.GridPanel,{initComponent:function(){var config={viewConfig:{forceFit:!1},enableColLock:!0,enableHdMenu:this.showHdMenu||!1,border:!1,stripeRows:!0,autoScroll:!0,ds:new CCR.xdmod.CustomJsonStore({url:this.storeUrl,remoteSort:this.remoteSort||!1,baseParams:this.baseParams||{}}),colModel:this.lockingView?new Ext.ux.grid.LockingColumnModel({}):new Ext.grid.ColumnModel({}),view:this.lockingView?new Ext.ux.grid.LockingGridView({}):new Ext.ux.grid.BufferView({scrollDelay:!1,cacheSize:36}),selModel:new Ext.grid.CellSelectionModel({})};this.searchField&&(config.tbar=["Search ",new CCR.xdmod.ui.CustomTwinTriggerField({store:config.ds})]),this.usePaging&&(this.defaultPageSize||(this.defaultPageSize=100),this.pageSizeField=new Ext.form.NumberField({id:"page_size_field_"+this.id,fieldLabel:"Grid Size",name:"page_size",minValue:1,maxValue:200,allowDecimals:!1,decimalPrecision:0,incrementValue:1,alternateIncrementValue:2,accelerate:!0,width:30,value:this.defaultPageSize,listeners:{change:function(t,newValue,oldValue){t.isValid(!1)&&newValue!=t.ownerCt.pageSize&&(t.ownerCt.pageSize=newValue,t.ownerCt.doRefresh())},specialkey:function(t,e){t.isValid(!1)&&e.getKey()==e.ENTER&&t.getValue()!=t.ownerCt.pageSize&&(t.ownerCt.cursor=0,t.ownerCt.pageSize=t.getValue(),t.ownerCt.doRefresh())}}}),config.bbar=new Ext.PagingToolbar({pageSize:this.defaultPageSize,store:config.ds,displayInfo:!0,beforePageText:"Datasheet Page",displayMsg:"Datasheet Rows {0} - {1} of {2}",emptyMsg:"No data",items:["-","Sheet Size",this.pageSizeField,"Rows"]})),Ext.apply(this,config),Ext.apply(this.initialConfig,config),Ext.ux.DynamicGridPanel.superclass.initComponent.apply(this,arguments),this.addEvents("load")},onRender:function(ct,position){this.colModel.defaultSortable=!0,Ext.ux.DynamicGridPanel.superclass.onRender.call(this,ct,position),this.store.on("beforeload",function(){this.pageSizeField&&(this.store.baseParams.limit=this.pageSizeField.getValue())},this),this.store.on("load",function(){if("object"==typeof this.store.reader.jsonData.columns){var columns=[];if(this.rowNumberer){var rowNumbererWidth=25;99<this.store.reader.jsonData.total&&this.store.reader.jsonData.total<1e3?rowNumbererWidth=30:999<this.store.reader.jsonData.total?rowNumbererWidth=38:9999<this.store.reader.jsonData.total&&(rowNumbererWidth=46),columns.push(new CCR.xdmod.ui.CustomRowNumberer({width:rowNumbererWidth,offset:this.bottomToolbar?this.bottomToolbar.cursor:0,locked:!1}))}this.checkboxSelModel&&columns.push(new Ext.grid.CheckboxSelectionModel),Ext.each(this.store.reader.jsonData.columns,function(column){columns.push(column)}),this.getColumnModel().setConfig(columns)}this.el.unmask(),this.fireEvent("load",this)},this)}}),CCR.xdmod.ui.DurationToolbar=function(config){CCR.xdmod.ui.DurationToolbar.superclass.constructor.call(this,config)},Ext.apply(CCR.xdmod.ui.DurationToolbar,{getDateRanges:function(){var today=new Date,yesterday=today.add(Date.DAY,-1),lastWeek=today.add(Date.DAY,-7),lastMonth=today.add(Date.DAY,-30),lastQuarter=today.add(Date.DAY,-90),lastYear=today.add(Date.YEAR,-1),thisYearStart=(today.add(Date.DAY,-1*today.getDayOfYear()),today.add(Date.DAY,-1*today.getDayOfYear())),thisYearEnd=new Date(thisYearStart.getFullYear(),11,31,23,59,59,999),last2Year=today.add(Date.YEAR,-2),last3Year=today.add(Date.YEAR,-3),last5Year=today.add(Date.YEAR,-5),last10Year=today.add(Date.YEAR,-10),thisMonthStart=new Date(today.getFullYear(),today.getMonth(),1),thisQuarterStart=new Date(today.getFullYear(),today.getMonth()-today.getMonth()%3,1),lastQuarterStart=(new Date(today.getMonth()<9?today.getFullYear():today.getFullYear()+1,(today.getMonth()-today.getMonth()%3+3)%12,1).add(Date.DAY,-1),new Date(today.getMonth()<3?today.getFullYear()-1:today.getFullYear(),(today.getMonth()-today.getMonth()%3+9)%12,1)),lastQuarterEnd=new Date(thisQuarterStart).add(Date.DAY,-1),lastFullMonthStart=new Date(today.getMonth()<1?today.getFullYear()-1:today.getFullYear(),today.getMonth()<1?11:today.getMonth()-1,1),lastFullMonthEnd=thisMonthStart.add(Date.DAY,-1),oneYearAgoStart=new Date(today.getFullYear()-1,0,1),oneYearAgoEnd=new Date(today.getFullYear()-1,11,31),twoYearAgoStart=new Date(today.getFullYear()-2,0,1),twoYearAgoEnd=new Date(today.getFullYear()-2,11,31),threeYearAgoStart=new Date(today.getFullYear()-3,0,1),threeYearAgoEnd=new Date(today.getFullYear()-3,11,31),fourYearAgoStart=new Date(today.getFullYear()-4,0,1),fourYearAgoEnd=new Date(today.getFullYear()-4,11,31),fiveYearAgoStart=new Date(today.getFullYear()-5,0,1),fiveYearAgoEnd=new Date(today.getFullYear()-5,11,31),sixYearAgoStart=new Date(today.getFullYear()-6,0,1),sixYearAgoEnd=new Date(today.getFullYear()-6,11,31);return[{text:"Yesterday",start:yesterday,end:yesterday},{text:"7 day",start:lastWeek,end:today},{text:"30 day",start:lastMonth,end:today},{text:"90 day",start:lastQuarter,end:today},{text:"Month to date",start:thisMonthStart,end:today},{text:"Previous month",start:lastFullMonthStart,end:lastFullMonthEnd},{text:"Quarter to date",start:thisQuarterStart,end:today},{text:"Previous quarter",start:lastQuarterStart,end:lastQuarterEnd},{text:"Year to date",start:thisYearStart,end:today},{text:"Previous year",start:oneYearAgoStart,end:oneYearAgoEnd},{text:"1 year",start:lastYear,end:today},{text:"2 year",start:last2Year,end:today},{text:"3 year",start:last3Year,end:today},{text:"5 year",start:last5Year,end:today},{text:"10 year",start:last10Year,end:today},{text:thisYearStart.getFullYear(),start:thisYearStart,end:thisYearEnd},{text:""+oneYearAgoStart.getFullYear(),start:oneYearAgoStart,end:oneYearAgoEnd},{text:""+twoYearAgoStart.getFullYear(),start:twoYearAgoStart,end:twoYearAgoEnd},{text:""+threeYearAgoStart.getFullYear(),start:threeYearAgoStart,end:threeYearAgoEnd},{text:""+fourYearAgoStart.getFullYear(),start:fourYearAgoStart,end:fourYearAgoEnd},{text:""+fiveYearAgoStart.getFullYear(),start:fiveYearAgoStart,end:fiveYearAgoEnd},{text:""+sixYearAgoStart.getFullYear(),start:sixYearAgoStart,end:sixYearAgoEnd}]}}),Ext.extend(CCR.xdmod.ui.DurationToolbar,Ext.Toolbar,{defaultCannedDateIndex:5,defaultAggregationUnit:"Auto",singleRow:!0,showRefresh:!0,alignRight:!1,showAggregationUnit:!0,disable:function(){this.cannedDateButton.menu.isVisible()&&(this.cannedDateButton.menu.wasVisible=this.cannedDateButton.menu.isVisible(),this.cannedDateButton.menu.wasVisible&&(this.cannedDateButton.menu.pos=this.cannedDateButton.menu.getPosition(!1),this.cannedDateButton.menu.temporaryInvisible=!0,this.cannedDateButton.menu.setVisible(!1)),this.cannedDateButton.menu.setDisabled(!0))},enable:function(){this.cannedDateButton.menu.setDisabled(!1),this.cannedDateButton.menu.wasVisible&&(this.cannedDateButton.menu.wasVisible=!1,this.cannedDateButton.menu.showAt(this.cannedDateButton.menu.pos))},findCustomDateMenuItem:function(customDateRange){return this.cannedDateButton.menu.items.find(function(i){return i.group=="canned_date"+this.id&&i.text==customDateRange},this)},getStartDate:function(){return this.startDateField.getValue()},getEndDate:function(){return this.endDateField.getValue()},getDurationLabel:function(){return this.cannedDateButton.getText()},onHandle:function(refreshButtonClicked){var changed=!0;refreshButtonClicked&&(changed=this.startDateField.didChange()||this.endDateField.didChange());var refreshBtn=Ext.getCmp("refresh_button_"+this.id);refreshBtn&&refreshBtn.removeClass("dateframe_refresh_button_highlight"),Ext.getCmp("start_field_"+this.id).updatePreviousValue(),Ext.getCmp("end_field_"+this.id).updatePreviousValue();for(var errorMessage="",errors=this.startDateField.getErrors(),i=0;i<errors.length;i++)errorMessage+=errors[i]+".<br/>";errors=this.endDateField.getErrors();for(i=0;i<errors.length;i++)errorMessage+=errors[i]+".<br/>";""==errorMessage&&""==(errorMessage=this.validateAggregationUnit())&&this.handler&&this.handler.call(this.scope||this,{preset:this.getDurationLabel(),changed:changed,aggregation_unit:this.getAggregationUnit(),start_date:this.getStartDate().format("Y-m-d"),end_date:this.getEndDate().format("Y-m-d")})},setValues:function(startDate,endDate,aggregationUnit,label,triggerHandler){if(null==aggregationUnit&&(aggregationUnit=this.getAggregationUnit()),this.startDateField.setDisabled(!1),this.endDateField.setDisabled(!1),!this.selectCustomDateRange(label)){var parsedStartDate=Date.parseDate(startDate,"Y-m-d"),parsedEndDate=Date.parseDate(endDate,"Y-m-d");this.endDateField.setValue(parsedEndDate),this.startDateField.setValue(parsedStartDate)}this.validate(),aggregationUnit=!aggregationUnit||aggregationUnit.length<1?"Auto":aggregationUnit.charAt(0).toUpperCase()+aggregationUnit.slice(1),this.setAggregationUnit(aggregationUnit),triggerHandler&&!0===triggerHandler&&this.onHandle()},selectCustomDateRange:function(label){var customDateRange,customDateMenuItem;label&&(customDateRange=label,customDateMenuItem=this.findCustomDateMenuItem(customDateRange)),customDateMenuItem||(customDateRange="User Defined",customDateMenuItem=this.findCustomDateMenuItem(customDateRange)),customDateMenuItem.setChecked(!0);var presetDateRangeSelected="User Defined"!==customDateRange;return presetDateRangeSelected&&(this.startDateField.setValue(customDateMenuItem.start),this.endDateField.setValue(customDateMenuItem.end)),this.cannedDateButton.setText(customDateRange),presetDateRangeSelected},validate:function(){return this.startDateField.validate()&&this.endDateField.validate()},validateAggregationUnit:function(targetAggregationUnit){null==targetAggregationUnit&&(targetAggregationUnit=this.getAggregationUnit());var startDate=this.startDateField.getValue(),dateDiff=this.endDateField.getValue().add(Date.HOUR,23).add(Date.MINUTE,59).add(Date.SECOND,59)-startDate,errorMessage="";if(!CCR.xdmod.ui.isManager){("Day"==targetAggregationUnit&&dateDiff<864e5-1||"Week"==targetAggregationUnit&&dateDiff<6048e5-1||"Month"==targetAggregationUnit&&dateDiff<24192e5-1||"Quarter"==targetAggregationUnit&&dateDiff<10368e6-1||"Year"==targetAggregationUnit&&dateDiff<31536e6-1)&&(errorMessage='The aggregation unit cannot be of greater duration than the selected date range.<br/>Using "Auto" unit instead.',this.setAggregationUnit("Auto"),this.onHandle());var diffInDays=dateDiff/864e5;750<diffInDays&&"Day"==targetAggregationUnit&&(errorMessage='The aggregation unit cannot be set to "Day" for durations greater than 750 days.<br/>Using "Auto" unit instead.',this.setAggregationUnit("Auto"),this.onHandle()),3660<diffInDays&&"Month"==targetAggregationUnit&&(errorMessage='The aggregation unit cannot be set to "Month" for durations greater than 10 years.<br/>Using "Auto" unit instead.',this.setAggregationUnit("Auto"),this.onHandle())}return errorMessage},setAggregationUnit:function(unitName){this.aggregationUnitButton.menu.items.find(function(i){return!0===i.checked});this.aggregationUnitButton.menu.items.find(function(i){return i.group=="aggregation_unit"+this.id&&i.text==unitName},this).setChecked(!0,!0),this.aggregationUnitButton.setText(unitName)},getAggregationUnit:function(){return this.aggregationUnitButton.getText()},getCannedDateText:function(){return this.cannedDateButton.getText()},serialize:function(includeCannedLabel){var ret=this.getStartDate().format("Y-m-d")+"/"+this.getEndDate().format("Y-m-d")+"/"+this.getAggregationUnit();return 1==includeCannedLabel&&(ret+="/"+this.getCannedDateText()),ret},unserialize:function(s){var values=s.split("/");3==values.length?this.setValues(values[0],values[1],values[2]):4==values.length?this.setValues(values[0],values[1],values[2],values[3]):Ext.MessageBox.alert("Duration Selector","unserialize error: string passed in must have 3 or 4 sections split by /")},initComponent:function(){this.dateRanges=CCR.xdmod.ui.DurationToolbar.getDateRanges(),this.defaultCannedDate=this.dateRanges[this.defaultCannedDateIndex].text;Date.parseDate(this.minDateString,"Y-m-d"),Date.parseDate(this.maxDateString,"Y-m-d"),this.minDateString,this.maxDateString;var self=this,dateFieldValidator=function(field_id,label){var validDates={startDateField:Date.parseDate(self.startDateField.getRawValue(),"Y-m-d"),endDateField:Date.parseDate(self.endDateField.getRawValue(),"Y-m-d")};return null==validDates[field_id]?"Invalid "+label+" (must be of the form YYYY-MM-DD)":null==validDates.startDateField||null==validDates.endDateField||(!(validDates.endDateField<validDates.startDateField)||"Start date must be less than or equal to the end date")};function dateFieldKeyupHandler(e,f){1==self.startDateField.didChange()||1==self.endDateField.didChange()?self.refreshButton.addClass("dateframe_refresh_button_highlight"):self.refreshButton.removeClass("dateframe_refresh_button_highlight"),self.selectCustomDateRange(),e&&e.getKey()==e.ENTER&&1==f.didChange()&&(self.startDateField.setValue(self.startDateField.getRawValue()),self.endDateField.setValue(self.endDateField.getRawValue()),self.onHandle())}var startDateFieldEventHandler=function(e,f){self.endDateField.validate(),f.isValid()&&self.endDateField.isValid()&&dateFieldKeyupHandler(e,f)},endDateFieldEventHandler=function(e,f){self.startDateField.validate(),f.isValid()&&self.startDateField.isValid()&&dateFieldKeyupHandler(e,f)};this.startDateField=new CCR.xdmod.ui.CustomDateField({id:"start_field_"+this.id,tooltip:"Configure start date",format:"Y-m-d",altFormats:"m/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|Y-m-d|Y-n-j|Y-n-d|Y-m-j",fieldLabel:"Start Date",value:this.dateRanges[this.defaultCannedDateIndex].start,allowBlank:!1,enableKeyEvents:!0,validator:function(s){return dateFieldValidator("startDateField","start date")},listeners:{keyup:function(f,e){startDateFieldEventHandler(e,f)},select:function(f){startDateFieldEventHandler(void 0,f)}}}),this.endDateField=new CCR.xdmod.ui.CustomDateField({id:"end_field_"+this.id,tooltip:"Configure end date",format:"Y-m-d",altFormats:"m/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|Y-m-d|Y-n-j|Y-n-d|Y-m-j",fieldLabel:"End Date",value:this.dateRanges[this.defaultCannedDateIndex].end,allowBlank:!1,enableKeyEvents:!0,validator:function(e){return dateFieldValidator("endDateField","end date")},listeners:{keyup:function(f,e){endDateFieldEventHandler(e,f)},select:function(f){endDateFieldEventHandler(void 0,f)}}}),this.startDateField.endDateField=this.endDateField,this.endDateField.startDateField=this.startDateField,((this.startDateField.parent=this).endDateField.parent=this).aggregationUnitItems=['<b class="menu-title">Aggregation Units:</b><br/>',{xtype:"menucheckitem",text:"Auto",scope:this,group:"aggregation_unit"+this.id,checked:"Auto"==this.defaultAggregationUnit,checkHandler:function(t,checked){checked&&(this.aggregationUnitButton.setText("Auto"),this.onHandle())}},{xtype:"menucheckitem",text:"Day",scope:this,group:"aggregation_unit"+this.id,checked:"Day"==this.defaultAggregationUnit,checkHandler:function(t,checked){if(checked){var errorMessage=this.validateAggregationUnit("Day");""==errorMessage?(this.aggregationUnitButton.setText("Day"),this.onHandle()):Ext.MessageBox.alert("Aggregation unit selection error",errorMessage)}}},{xtype:"menucheckitem",text:"Month",scope:this,group:"aggregation_unit"+this.id,checked:"Month"==this.defaultAggregationUnit,checkHandler:function(t,checked){if(checked){var errorMessage=this.validateAggregationUnit("Month");""==errorMessage?(this.aggregationUnitButton.setText("Month"),this.onHandle()):Ext.MessageBox.alert("Aggregation unit selection error",errorMessage)}}},{xtype:"menucheckitem",text:"Quarter",scope:this,group:"aggregation_unit"+this.id,checked:"Quarter"==this.defaultAggregationUnit,checkHandler:function(t,checked){if(checked){var errorMessage=this.validateAggregationUnit("Quarter");""==errorMessage?(this.aggregationUnitButton.setText("Quarter"),this.onHandle()):Ext.MessageBox.alert("Aggregation unit selection error",errorMessage)}}},{xtype:"menucheckitem",text:"Year",scope:this,group:"aggregation_unit"+this.id,checked:"Year"==this.defaultAggregationUnit,checkHandler:function(t,checked){if(checked){var errorMessage=this.validateAggregationUnit("Year");""==errorMessage?(this.aggregationUnitButton.setText("Year"),this.onHandle()):Ext.MessageBox.alert("Aggregation unit selection error",errorMessage)}}}],this.aggregationUnitButton=new Ext.Button({id:"aggregation_unit_"+this.id,scope:this,width:100,text:"Auto",fieldLabel:"Aggregation Unit",tooltip:"Aggregation Unit - the resolution of data aggregation",handler:function(){var errorMessage=this.validateAggregationUnit(this.aggregationUnitButton.getText());""==errorMessage||Ext.MessageBox.alert("Aggregation unit selection error",errorMessage)},menu:new Ext.menu.Menu({ignoreParentClicks:!0,showSeparator:!1,items:this.aggregationUnitItems})}),this.cannedDateItems=[],this.cannedDateItems.push({xtype:"menucheckitem",text:"User Defined",scope:this,group:"canned_date"+this.id,checked:"User Defined"==this.defaultCannedDate,handler:function(m){this.cannedDateButton.setText("User Defined"),this.startDateField.focus(!0)}}),this.cannedDateItems.push("-"),this.cannedDateItems.push('<b class="menu-title">Duration Presets:</b><br/>');for(var i=0;i<this.dateRanges.length;i++)this.cannedDateItems.push({xtype:"menucheckitem",text:this.dateRanges[i].text,scope:this,group:"canned_date"+this.id,checked:this.defaultCannedDate==this.dateRanges[i].text,start:this.dateRanges[i].start,end:this.dateRanges[i].end,handler:function(b,e){this.endDateField.setValue(b.end),this.startDateField.setValue(b.start),this.cannedDateButton.setText(b.text),this.onHandle()}});this.showAggregationUnit&&(this.cannedDateItems.push("-"),this.cannedDateItems.push({text:"Aggregation Unit",menu:this.aggregationUnitButton.menu})),this.cannedDateMenu=new Ext.menu.Menu({ignoreParentClicks:!0,showSeparator:!1,items:this.cannedDateItems,listeners:{}}),this.cannedDateButton=new Ext.Button({id:"canned_dates_"+this.id,scope:this,width:100,text:this.defaultCannedDate,tooltip:"Configure time frame",fieldLabel:"Predefined Duration",iconCls:"custom_date",menu:this.cannedDateMenu}),this.refreshButton=new Ext.Button({id:"refresh_button_"+this.id,rows:2,iconCls:"refresh",text:"Refresh",tooltip:"Refresh using selected time frame",scope:this,handler:function(){this.onHandle(!0)}}),this.dateSlider=new Ext.slider.MultiSlider({width:300,values:[25,75],minValue:0,maxValue:100});var items=this.items||[];items.push("Duration:"),items.push({xtype:"tbspacer",width:2}),items.push(this.cannedDateButton),items.push({xtype:"tbspacer",width:2}),items.push(new Ext.form.Label({text:"Start:"})),items.push({xtype:"tbspacer",width:2}),items.push(this.startDateField),items.push({xtype:"tbspacer",width:2}),items.push(new Ext.form.Label({text:"End:"})),items.push({xtype:"tbspacer",width:2}),items.push(this.endDateField),this.showRefresh&&(this.alighRight?items.push("->"):items.push("-"),items.push(this.refreshButton)),this.showSlider&&(items.push("-"),items.push(this.dateSlider)),Ext.apply(this,{enableOverflow:!0,border:!1,items:items}),CCR.xdmod.ui.DurationToolbar.superclass.initComponent.apply(this,arguments)}}),CCR.xdmod.ui.ChartConfigMenu=function(config){CCR.xdmod.ui.ChartConfigMenu.superclass.constructor.call(this,config)},Ext.extend(CCR.xdmod.ui.ChartConfigMenu,Ext.menu.Menu,{legendParam:"y",datasetParam:"aggregate",displayParam:"auto",dataCombineMethodParam:"auto",logScaleParam:"n",errorBarsParam:"y",guideLinesParam:"y",trendLineParam:"y",aggregateLabelsParam:"y",errorLabelsParams:"y",enableErrorsParam:!1,enableTrendLineParam:!1,persist:!1,hideTooltipParam:!1,hideTooltipFunction:function(item,checked){this.hideTooltipParam=checked,item?this.fireEvent("paramchange","hide_tooltip",this.hideTooltipParam):this.hideTooltipItem.setChecked(checked,!0)},setHideTooltipParam:function(p){!0!==this.persist&&this.hideTooltipFunction(null,"y"==p||"true"==p||!0===p)},persistFunction:function(item,checked){this.persist=checked},onLegendItemCheck:function(item,checked){this.legendParam=1==checked?"y":"n",item?this.fireEvent("paramchange","show_legend",this.legendparam):this.legendItem.setChecked(checked,!0)},setLegendParam:function(p){!0!==this.persist&&this.onLegendItemCheck(null,"y"==p||"true"==p||!0===p)},onLogScaleItemCheck:function(item,checked){this.logScaleParam=1==checked?"y":"n",item?this.fireEvent("paramchange","log_scale",this.logScaleParam):this.logScaleItem.setChecked(checked,!0)},setLogScaleParam:function(p){!0!==this.persist&&this.onLogScaleItemCheck(null,"y"==p||"true"==p||!0===p)},onDatasetItemCheck:function(item,checked){var displayTypeItem;(this.datasetParam=1==checked?"timeseries":"aggregate",!checked||"pie"!=this.displayParam&&"h_bar"!=this.displayParam)||(displayTypeItem=this.items.find(function(i){return"display_type"==i.group&&"line"==i.param}))&&(displayTypeItem.setChecked(!0,!0),this.displayParam=displayTypeItem.param);checked||"area"!=this.displayParam||(displayTypeItem=this.items.find(function(i){return"display_type"==i.group&&"bar"==i.param}))&&(displayTypeItem.setChecked(!0,!0),this.displayParam=displayTypeItem.param);item?this.fireEvent("paramchange","dataset_type",this.datasetParam):this.datasetItem.setChecked(checked,!0),this.aggregateLabelsItem.setDisabled("datasheet"==this.displayParam),this.errorLabelsItem.setDisabled(1!=this.enableErrorsParam||"datasheet"==this.displayParam),this.legendItem.setDisabled("datasheet"==this.displayParam),this.errorBarsItem.setDisabled(1!=this.enableErrorsParam||"pie"==this.displayParam||"datasheet"==this.displayParam),this.logScaleItem.setDisabled("pie"==this.displayParam||"datasheet"==this.displayParam),this.guideLinesItem.setDisabled("pie"==this.displayParam||"datasheet"==this.displayParam);var tl="percentage"==this.dataCombineMethodParam||"datasheet"==this.displayParam||1!=this.enableTrendLineParam;if(this.trendLineItem.setDisabled(tl),tl&&(this.trendLineParam="n"),checked){this.vBarsDisplayType.setDisabled(!1),this.hBarsDisplayType.setDisabled(!0),this.lineDisplayType.setDisabled(!1),this.areaDisplayType.setDisabled(!1),this.pieDisplayType.setDisabled(!0);var disableCombineMethods="line"==this.displayParam||"datasheet"==this.displayParam;disableCombineMethods&&(this.dataCombineMethodParam="side"),this.sideCombineMethod.setDisabled(disableCombineMethods),this.stackCombineMethod.setDisabled(disableCombineMethods),this.percentageCombineMethod.setDisabled(disableCombineMethods),this.overlayCombineMethod.setDisabled(disableCombineMethods)}else this.trendLineParam="n",this.trendLineItem.setDisabled(!0),this.vBarsDisplayType.setDisabled(!1),this.hBarsDisplayType.setDisabled(!1),this.lineDisplayType.setDisabled(!1),this.areaDisplayType.setDisabled(!0),this.pieDisplayType.setDisabled(!1),this.dataCombineMethodParam="side",this.sideCombineMethod.setDisabled(!0),this.stackCombineMethod.setDisabled(!0),this.percentageCombineMethod.setDisabled(!0),this.overlayCombineMethod.setDisabled(!0)},setDatasetParam:function(p){!0!==this.persist&&this.onDatasetItemCheck(null,"timeseries"==p)},onDisplayItemChange:function(item,e){if(item&&item.param)if(this.displayParam=item.param,e)this.fireEvent("paramchange","display_type",item.param);else{var displayTypeItem=this.items.find(function(i){return"display_type"==i.group&&i.param==item.param});displayTypeItem&&(displayTypeItem.setChecked(!0,!0),this.displayParam=displayTypeItem.param)}},setDisplayParam:function(p){!0!==this.persist&&this.onDisplayItemChange({param:p},null)},onDataCombineMethodItemChange:function(item,e){if(item&&item.param)if(this.dataCombineMethodParam=item.param,e)this.fireEvent("paramchange","data_combine_method",item.param);else{var dataCombineMethodItem=this.items.find(function(i){return"data_combine_method"==i.group&&i.param==item.param});dataCombineMethodItem&&(dataCombineMethodItem.setChecked(!0,!0),this.dataCombineMethodParam=dataCombineMethodItem.param)}},setDataCombineMethodParam:function(p){!0!==this.persist&&this.onDataCombineMethodItemChange({param:p},null)},onErrorBarsItemCheck:function(item,checked){this.errorBarsParam=1==checked?"y":"n",item?this.fireEvent("paramchange","show_error_bars",this.errorBarsParam):this.errorBarsItem.setChecked(checked,!0)},setErrorBarsParam:function(p){!0!==this.persist&&this.onErrorBarsItemCheck(null,"y"==p||"true"==p||!0===p)},onGuideLinesItemCheck:function(item,checked){this.guideLinesParam=1==checked?"y":"n",item?this.fireEvent("paramchange","show_guide_lines",this.guideLinesParam):this.guideLinesItem.setChecked(checked,!0)},setGuideLinesParam:function(p){!0!==this.persist&&this.onGuideLinesItemCheck(null,"y"==p||"true"==p||!0===p)},onTrendLineItemCheck:function(item,checked){this.trendLineParam=1==checked?"y":"n",item?this.fireEvent("paramchange","show_trend_line",this.trendLineParam):this.trendLineItem.setChecked(checked,!0)},setTrendLineParam:function(p){!0!==this.persist&&this.onTrendLineItemCheck(null,"y"==p||"true"==p||!0===p)},onAggregateLabelsItemCheck:function(item,checked){this.aggregateLabelsParam=1==checked?"y":"n",item?this.fireEvent("paramchange","show_aggregate_labels",this.aggregateLabelsParam):this.aggregateLabelsItem.setChecked(checked,!0)},setAggregateLabelsParam:function(p){!0!==this.persist&&this.onAggregateLabelsItemCheck(null,"y"==p||"true"==p||!0===p)},onErrorLabelsItemCheck:function(item,checked){this.errorLabelsParam=1==checked?"y":"n",item?this.fireEvent("paramchange","show_error_labels",this.errorLabelsParam):this.errorLabelsItem.setChecked(checked,!0)},setErrorLabelsParam:function(p){!0!==this.persist&&this.onErrorLabelsItemCheck(null,"y"==p||"true"==p||!0===p)},setEnableErrorsParam:function(p){this.enableErrorsParam="y"==p||"true"==p||!0===p},setEnableTrendLineParam:function(p){this.enableTrendLineParam="y"==p||"true"==p||!0===p},initComponent:function(){this.legendItem=new CCR.xdmod.ui.CustomCheckItem({id:"legend_item_"+this.id,scope:this,text:"Legend",checked:"y"==this.legendParam||"true"==this.legendParam||1==this.legendParam,checkHandler:this.onLegendItemCheck}),this.logScaleItem=new CCR.xdmod.ui.CustomCheckItem({id:"log_scale_item_"+this.id,scope:this,text:"Log Scale",checked:"y"==this.logScaleParam||"true"==this.logScaleParam||1==this.logScaleParam,checkHandler:this.onLogScaleItemCheck}),this.errorBarsItem=new CCR.xdmod.ui.CustomCheckItem({id:"error_bars_item_"+this.id,scope:this,text:"Std Err Bars",checked:"y"==this.errorBarsParam||"true"==this.errorBarsParam||1==this.errorBarsParam,checkHandler:this.onErrorBarsItemCheck}),this.guideLinesItem=new CCR.xdmod.ui.CustomCheckItem({id:"guide_lines_item"+this.id,scope:this,text:"Guide Lines",checked:"y"==this.guideLinesParam||"true"==this.guideLinesParam||1==this.guideLinesParam,checkHandler:this.onGuideLinesItemCheck}),this.trendLineItem=new CCR.xdmod.ui.CustomCheckItem({id:"trend_line_item_"+this.id,scope:this,text:"Trend Line",checked:"y"==this.trendLineParam||"true"==this.trendLineParam||1==this.trendLineParam,checkHandler:this.onTrendLineItemCheck}),this.aggregateLabelsItem=new CCR.xdmod.ui.CustomCheckItem({id:"aggregate_labels_item_"+this.id,scope:this,text:"Value Labels",checked:"y"==this.aggregateLabelsParam||"true"==this.aggregateLabelsParam||1==this.aggregateLabelsParam,checkHandler:this.onAggregateLabelsItemCheck}),this.errorLabelsItem=new CCR.xdmod.ui.CustomCheckItem({id:"error_labels_item_"+this.id,scope:this,text:"Std Err Labels",checked:"y"==this.errorLabelsParam||"true"==this.errorLabelsParam||1==this.errorLabelsParam,checkHandler:this.onErrorLabelsItemCheck}),this.datasetItem=new CCR.xdmod.ui.CustomCheckItem({id:"dataset_item_"+this.id,scope:this,text:"Timeseries",param:this.datasetParam,checked:"timeseries"==this.datasetParam,checkHandler:this.onDatasetItemCheck}),this.autoDisplayType=new CCR.xdmod.ui.CustomCheckItem({id:"auto_display_type_"+this.id,scope:this,text:"Auto",param:"auto",checked:"auto"==this.displayParam,group:"display_type",handler:this.onDisplayItemChange}),this.datasheetDisplayType=new CCR.xdmod.ui.CustomCheckItem({id:"datasheet_display_type_"+this.id,scope:this,text:"Datasheet",param:"datasheet",checked:"datasheet"==this.displayParam,group:"display_type",handler:this.onDisplayItemChange}),this.vBarsDisplayType=new CCR.xdmod.ui.CustomCheckItem({id:"v_bar_display_type_"+this.id,scope:this,text:"Bar - Vertical",param:"bar",checked:"bar"==this.displayParam,group:"display_type",handler:this.onDisplayItemChange}),this.hBarsDisplayType=new CCR.xdmod.ui.CustomCheckItem({id:"h_bar_display_type_"+this.id,scope:this,text:"Bar - Horizontal",param:"h_bar",checked:"h_bar"==this.displayParam,group:"display_type",handler:this.onDisplayItemChange}),this.lineDisplayType=new CCR.xdmod.ui.CustomCheckItem({id:"line_display_type_"+this.id,scope:this,text:"Line",param:"line",group:"display_type",checked:"line"==this.displayParam,handler:this.onDisplayItemChange}),this.areaDisplayType=new CCR.xdmod.ui.CustomCheckItem({id:"area_display_type_"+this.id,scope:this,text:"Area",param:"area",checked:"area"==this.displayParam,group:"display_type",handler:this.onDisplayItemChange}),this.pieDisplayType=new CCR.xdmod.ui.CustomCheckItem({id:"pie_display_type_"+this.id,scope:this,text:"Pie",param:"pie",checked:"pie"==this.displayParam,group:"display_type",handler:this.onDisplayItemChange}),this.autoCombineMethod=new CCR.xdmod.ui.CustomCheckItem({id:"auto_combine_method_"+this.id,scope:this,text:"Auto",param:"auto",checked:"auto"==this.dataCombineMethodParam,group:"data_combine_method",handler:this.onDataCombineMethodItemChange}),this.sideCombineMethod=new CCR.xdmod.ui.CustomCheckItem({id:"side_combine_method_"+this.id,scope:this,disabled:!1,text:"Side",param:"side",checked:"side"==this.dataCombineMethodParam,group:"data_combine_method",handler:this.onDataCombineMethodItemChange}),this.stackCombineMethod=new CCR.xdmod.ui.CustomCheckItem({id:"stack_combine_method_"+this.id,scope:this,disabled:!0,text:"Stack",param:"stack",checked:"stack"==this.dataCombineMethodParam,group:"data_combine_method",handler:this.onDataCombineMethodItemChange}),this.percentageCombineMethod=new CCR.xdmod.ui.CustomCheckItem({id:"percentage_combine_method_"+this.id,scope:this,disabled:!0,text:"Percentage",param:"percentage",checked:"percentage"==this.dataCombineMethodParam,group:"data_combine_method",handler:this.onDataCombineMethodItemChange}),this.overlayCombineMethod=new CCR.xdmod.ui.CustomCheckItem({id:"overlay_combine_method_"+this.id,scope:this,disabled:!0,text:"Overlay",param:"overlay",checked:"overlay"==this.dataCombineMethodParam,group:"data_combine_method",handler:this.onDataCombineMethodItemChange}),this.resetButton=new Ext.menu.Item({id:"reset_button_"+this.id,scope:this,text:"Reset",handler:this.resetFunction||function(){}}),this.persistItem=new CCR.xdmod.ui.CustomCheckItem({id:"persist_item_"+this.id,scope:this,checked:!1,text:"Persist",checkHandler:this.persistFunction||Ext.EmptyFn}),this.hideTooltipItem=new CCR.xdmod.ui.CustomCheckItem({id:"hide_tooltip_item_"+this.id,scope:this,checked:!1,text:"Hide Tooltip",checkHandler:this.hideTooltipFunction||Ext.EmptyFn});var items=[this.datasetItem,this.logScaleItem,this.aggregateLabelsItem,this.errorBarsItem,this.errorLabelsItem,this.guideLinesItem,this.trendLineItem,this.hideTooltipItem,"-",this.vBarsDisplayType,this.hBarsDisplayType,this.lineDisplayType,this.areaDisplayType,this.pieDisplayType,this.datasheetDisplayType,"-",'<span class="menu-title">Combine Modes:</span><br/>',this.sideCombineMethod,this.stackCombineMethod,this.percentageCombineMethod,"-",this.resetButton,this.persistItem];Ext.apply(this,{items:items,listeners:{beforehide:function(t){if(t.el){var menuBox=t.getBox(),ex=Ext.EventObject.getPageX(),ey=Ext.EventObject.getPageY();return this.temporaryInvisible?!(this.temporaryInvisible=!1):ex>menuBox.x+menuBox.width||ex<menuBox.x||ey>menuBox.y+menuBox.height||ey<menuBox.y}return!0}}}),CCR.xdmod.ui.ChartConfigMenu.superclass.initComponent.apply(this,arguments),this.addEvents("paramchange")}}),CCR.xdmod.ui.ChartToolbar=function(config){CCR.xdmod.ui.ChartToolbar.superclass.constructor.call(this,config)},Ext.extend(CCR.xdmod.ui.ChartToolbar,Ext.Toolbar,{show_legend:"y",dataset_type:"aggregate",display_type:"auto",data_combine_method:"auto",log_scale:"n",resetValues:function(){this.setValues("aggregate","auto","auto","y",20,0,"n","y","y","y","y","y","y","y",!1)},toJSON:function(){var settings={dataset_type:this.getDatasetType(),display_type:this.getDisplayType(),combine_type:this.getDataCombineMethod(),show_legend:"y"==this.getShowLegend(),show_guide_lines:this.getShowGuideLines(),limit:this.getLimit(),offset:this.getOffset(),log_scale:"y"==this.getLogScale(),show_trend_line:this.getShowTrendLine(),show_error_bars:this.getShowErrorBars(),show_aggregate_labels:this.getShowAggregateLabels(),show_error_labels:this.getShowErrorLabels(),enable_errors:this.getEnableErrors(),enable_trend_line:this.getEnableTrendLine(),hide_tooltip:this.getHideTooltip()};return Ext.util.JSON.encode(settings)},disable:function(){this.chartConfigButton.menu.isVisible()&&(this.chartConfigButton.menu.wasVisible=this.chartConfigButton.menu.isVisible(),this.chartConfigButton.menu.wasVisible&&(this.chartConfigButton.menu.pos=this.chartConfigButton.menu.getPosition(!1),this.chartConfigButton.menu.temporaryInvisible=!0,this.chartConfigButton.menu.setVisible(!1)),this.chartConfigButton.menu.setDisabled(!0))},enable:function(){this.chartConfigButton.menu.setDisabled(!1),this.chartConfigButton.menu.wasVisible&&(this.chartConfigButton.menu.wasVisible=!1,this.chartConfigButton.menu.showAt(this.chartConfigButton.menu.pos))},fromJSON:function(chartSettingsString){var chartSettingsObject=Ext.util.JSON.decode(chartSettingsString);this.setValues(chartSettingsObject.dataset_type,chartSettingsObject.display_type,chartSettingsObject.combine_type,chartSettingsObject.show_legend,chartSettingsObject.limit,chartSettingsObject.offset,chartSettingsObject.log_scale,chartSettingsObject.show_guide_lines,chartSettingsObject.show_trend_line,chartSettingsObject.show_error_bars,chartSettingsObject.show_aggregate_labels,chartSettingsObject.show_error_labels,chartSettingsObject.enable_errors,chartSettingsObject.enable_trend_line,chartSettingsObject.hide_tooltip)},setValues:function(dataset_type,display_type,data_combine_method,show_legend,limit,offset,log_scale,show_guide_lines,show_trend_line,show_error_bars,show_aggregate_labels,show_error_labels,enable_errors,enable_trend_line,hide_tooltip){this.chartConfigButton.menu.setLegendParam(show_legend),this.chartConfigButton.menu.setLogScaleParam(log_scale),this.chartConfigButton.menu.setGuideLinesParam(show_guide_lines),this.chartConfigButton.menu.setTrendLineParam(show_trend_line),this.chartConfigButton.menu.setErrorBarsParam(show_error_bars),this.chartConfigButton.menu.setAggregateLabelsParam(show_aggregate_labels),this.chartConfigButton.menu.setErrorLabelsParam(show_error_labels),this.chartConfigButton.menu.setEnableErrorsParam(enable_errors),this.chartConfigButton.menu.setEnableTrendLineParam(enable_trend_line),this.chartConfigButton.menu.setHideTooltipParam(hide_tooltip),this.limitField.setValue(limit),this.offsetField.setValue(offset),this.chartConfigButton.menu.setDisplayParam(display_type),this.chartConfigButton.menu.setDataCombineMethodParam(data_combine_method),this.chartConfigButton.menu.setDatasetParam(dataset_type)},onHandle:function(){this.handler&&this.handler(this.toJSON())},getDatasetType:function(){return this.chartConfigButton.menu.datasetParam},getDisplayType:function(){return this.chartConfigButton.menu.displayParam},getDataCombineMethod:function(){return this.chartConfigButton.menu.dataCombineMethodParam},getShowLegend:function(){return this.chartConfigButton.menu.legendParam},getLogScale:function(){return this.chartConfigButton.menu.logScaleParam},getShowTrendLine:function(){return this.chartConfigButton.menu.trendLineParam},getShowErrorBars:function(){return this.chartConfigButton.menu.errorBarsParam},getShowGuideLines:function(){return this.chartConfigButton.menu.guideLinesParam},getShowAggregateLabels:function(){return this.chartConfigButton.menu.aggregateLabelsParam},getShowErrorLabels:function(){return this.chartConfigButton.menu.errorLabelsParam},getHideTooltip:function(){return this.chartConfigButton.menu.hideTooltipParam},getLimit:function(){return this.limitField.getValue()},getOffset:function(){return 0},getEnableErrors:function(){return this.chartConfigButton.menu.enableErrorsParam},getEnableTrendLine:function(){return this.chartConfigButton.menu.enableTrendLineParam},getStatus:function(){var text="Dataset: "+CCR.ucfirst(this.dataset_type);return"auto"!=this.display_type&&(text+=" | Display: "+CCR.ucfirst(this.display_type.replace("-"," "))),text},initComponent:function(){this.addEvents("chart_limit_field_updated"),this.limitField=new Ext.form.NumberField({fieldLabel:"End Index",name:"limit",minValue:1,maxValue:40,allowDecimals:!1,decimalPrecision:0,incrementValue:1,alternateIncrementValue:2,accelerate:!0,width:24,emptyText:"Auto",defaultValue:20,listeners:{change:function(t,newValue,oldValue){t.isValid(!1)&&newValue!=oldValue&&(this.parent.fireEvent("chart_limit_field_updated",newValue),this.parent.onHandle())},specialkey:function(t,e){t.isValid(!1)&&e.getKey()==e.ENTER&&this.parent.onHandle()}}}),this.offsetField=new Ext.ux.form.SpinnerField({fieldLabel:"Start Index",name:"offset",minValue:0,allowDecimals:!1,decimalPrecision:0,incrementValue:1,alternateIncrementValue:2,accelerate:!0,emptyText:"Auto",defaultValue:0,width:60,listeners:{change:function(t,newValue,oldValue){t.isValid(!1)&&newValue!=oldValue&&this.parent.onHandle()},specialkey:function(field,e){t.isValid(!1)&&e.getKey()==e.ENTER&&this.parent.onHandle()}}});((this.offsetField.parent=this).limitField.parent=this).items&&this.items;var chartConfigMenu=new CCR.xdmod.ui.ChartConfigMenu({id:"chart_config_menu_"+this.id,resetFunction:this.resetFunction||function(){}});this.chartConfigButton=new Ext.Button({text:"Display",iconCls:"custom_chart",menu:chartConfigMenu,tooltip:"Configure display parameters"}),this.chartConfigButton.menu.on("paramchange",function(paramName,paramValue){this.onHandle()},this),CCR.xdmod.ui.ChartToolbar.superclass.initComponent.apply(this,arguments)}}),CCR.xdmod.ui.DrillDownMenu=function(config){CCR.xdmod.ui.DrillDownMenu.superclass.constructor.call(this,config)},Ext.extend(CCR.xdmod.ui.DrillDownMenu,Ext.menu.Menu,{node:null,handler:function(drillDown){},drillDownGroupBys:[],initComponent:function(){var items=[];if(0!==this.drillDownGroupBys.length)for(var groupByDescripter=this.drillDownGroupBys,i=0;i<groupByDescripter.length;i++){var gbd=groupByDescripter[i];if(2==gbd.length&&(null==this.node.attributes.parameters||null==this.node.attributes.parameters[gbd[0]]&&("provider"!=gbd[0]||null==this.node.attributes.parameters.resource&&-1==this.node.getPath("text").search("by Resource")))){for(var disabled=!1,j=0;j<CCR.xdmod.ui.disabledMenus.length;j++)CCR.xdmod.ui.disabledMenus[j].group_by==gbd[0]&&CCR.xdmod.ui.disabledMenus[j].realm==this.realm&&(disabled=!0);['<b class="menu-title">Available metrics:</b>'].push({text:"test",iconCls:"chart"}),items.push(new Ext.menu.Item({scope:this,drillDown:gbd,paramLabel:gbd[1],text:gbd[1],iconCls:"drill",disabled:disabled,handler:function(b,e){this.handler(b.drillDown)}}))}}if(0==this.valueParam)(items=[]).push('<b class="menu-title">Further drilldown is not available for this bar.<br/>'),Ext.apply(this,{showSeparator:!1,items:items});else if(this.groupByIdParam<-9999){(items=[]).push('<b class="menu-title">Drilldown for this bar is not available at this time.</b><br/>'),Ext.apply(this,{showSeparator:!1,items:items})}else if(0<items.length)items.sort(function(a,b){return a.text==b.text?0:a.text<b.text?-1:a.text>b.text?1:void 0}),null!==this.label?items.unshift('<b class="menu-title">For '+this.label.wordWrap(40,"<br/>")+", Drilldown to:</b><br/>"):items.unshift('<b class="menu-title">Drilldown to:</b><br/>'),Ext.apply(this,{showSeparator:!1,items:items});else{(items=[]).push('<b class="menu-title">No further drilldowns available.</b><br/>'),Ext.apply(this,{showSeparator:!1,items:items})}CCR.xdmod.ui.DrillDownMenu.superclass.initComponent.apply(this,arguments)}});var chartDropNotification=new Ext.menu.Menu({items:[{text:"Drop Here",iconCls:"down_arrow"}]}),resetDropStyling=function(){Ext.get("main_tab_panel__report_tab_panel").removeClass("highlighted_tab"),chartDropNotification.hide()};function rds(evt){alert("done")}var chartDroppedAtTarget=function(dd,e,data){return resetDropStyling(),!0};ImageDragZone=function(view,config){this.view=view,ImageDragZone.superclass.constructor.call(this,view.getEl(),config)},Ext.extend(ImageDragZone,Ext.dd.DragZone,{getDragData:function(e){if(2==e.button)return!1;if(CCR.xdmod.ui.dd.target=e.getTarget(".single-chart-container"),CCR.xdmod.ui.dd.target){var view=this.view;view.isSelected(CCR.xdmod.ui.dd.target)||view.onClick(e);var selNodes=view.getSelectedNodes(),dragData={nodes:selNodes};if(1==selNodes.length){var n=Ext.get("main_tab_panel__report_tab_panel");n.addClass("highlighted_tab"),chartDropNotification.show(n,"bl-tl");var div=document.createElement("div"),dragThumb=CCR.xdmod.ui.dd.target.firstChild.cloneNode(!0);dragThumb.width=200,dragThumb.height=100,div.appendChild(dragThumb),div.appendChild(document.createElement("br"));var caption=document.createElement("div");caption.innerHTML="Drag to the <b>Report Generator</b> tab to use<br>this chart during report building.",div.appendChild(caption),dragData.ddel=div,dragData.single=!0}return dragData}return!1},afterRepair:function(){resetDropStyling();for(var i=0,len=this.dragData.nodes.length;i<len;i++)Ext.fly(this.dragData.nodes[i]).frame("#8db2e3",1);this.dragging=!1},getRepairXY:function(e){return!1}}),Ext.DataView.LabelEditor=Ext.extend(Ext.Editor,{alignment:"tl-tl",hideEl:!1,cls:"x-small-editor",shim:!1,completeOnEnter:!0,cancelOnEsc:!0,labelSelector:"span.x-editable",constructor:function(cfg,field){Ext.DataView.LabelEditor.superclass.constructor.call(this,field||new Ext.form.TextField({allowBlank:!1,growMin:90,growMax:240,grow:!0,selectOnFocus:!0}),cfg)},init:function(view){(this.view=view).on("render",this.initEditor,this),this.on("complete",this.onSave,this)},initEditor:function(){this.view.on({scope:this,containerclick:this.doBlur,click:this.doBlur}),this.view.getEl().on("mousedown",this.onMouseDown,this,{delegate:this.labelSelector})},doBlur:function(){this.editing&&this.field.blur()},onMouseDown:function(e,target){if(e.ctrlKey||e.shiftKey)e.preventDefault();else{var item=this.view.findItemFromChild(target);e.stopEvent();var record=this.view.store.getAt(this.view.indexOf(item));this.startEdit(target,record.data[this.dataIndex]),this.activeRecord=record}},onSave:function(ed,value){this.activeRecord.set(this.dataIndex,value)}}),Ext.DataView.DragSelector=function(cfg){var view,proxy,tracker;cfg=cfg||{};var rs,bodyRegion,dragRegion=new Ext.lib.Region(0,0,0,0),dragSafe=!0===cfg.dragSafe;function cancelClick(){return!1}function onBeforeStart(e){return!dragSafe||e.target==view.el.dom}function onStart(e){view.on("containerclick",cancelClick,view,{single:!0}),proxy?(proxy.dom.parentNode!==view.el.dom&&view.el.dom.appendChild(proxy.dom),proxy.setDisplayed("block")):proxy=view.el.createChild({cls:"x-view-selector"}),rs=[],view.all.each(function(el){rs[rs.length]=el.getRegion()}),bodyRegion=view.el.getRegion(),view.clearSelections()}function onDrag(e){var startXY=tracker.startXY,xy=tracker.getXY(),x=Math.min(startXY[0],xy[0]),y=Math.min(startXY[1],xy[1]),w=Math.abs(startXY[0]-xy[0]),h=Math.abs(startXY[1]-xy[1]);dragRegion.left=x,dragRegion.top=y,dragRegion.right=x+w,dragRegion.bottom=y+h,dragRegion.constrainTo(bodyRegion),proxy.setRegion(dragRegion);for(var i=0,len=rs.length;i<len;i++){var r=rs[i],sel=dragRegion.intersect(r);sel&&!r.selected?(r.selected=!0,view.select(i,!0)):!sel&&r.selected&&(r.selected=!1,view.deselect(i))}}function onEnd(e){Ext.isIE||view.un("containerclick",cancelClick,view),proxy&&proxy.setDisplayed(!1)}function onRender(view){(tracker=new Ext.dd.DragTracker({onBeforeStart:onBeforeStart,onStart:onStart,onDrag:onDrag,onEnd:onEnd})).initEl(view.el)}this.init=function(dataView){(view=dataView).on("render",onRender)}},CCR.xdmod.ui.FilterDimensionPanel=function(config){CCR.xdmod.ui.FilterDimensionPanel.superclass.constructor.call(this,config)},Ext.extend(CCR.xdmod.ui.FilterDimensionPanel,Ext.Panel,{dimension_id:"",defaultPageSize:10,filtersStore:null,getSelectedFilterIds:function(){var ret=[];return this.filtersStore.each(function(record){record.data.dimension_id===this.dimension_id&&record.data.checked&&ret.push(record.data.id)},this),Ext.each(this.filterQueue,function(queuedFilterChange){var filterId=queuedFilterChange.id;if(queuedFilterChange.checked)ret.push(filterId);else{var removedFilterIndex=ret.indexOf(filterId);if(-1===removedFilterIndex)return;ret.splice(removedFilterIndex,1)}}),ret},filterEquals:function(f1,other){return f1.id==other.id&&f1.value_id==other.value_id&&f1.value_name==other.value_name&&f1.dimension_id==other.dimension_id&&f1.realms.join("")==other.realms.join("")},initComponent:function(){var self=this;if(this.filterQueue=[],this.originalFiltersStoreData={data:[],total:0},this.filtersStore){var ret=[];this.filtersStore.each(function(record){ret.push(record.data)}),this.originalFiltersStoreData={data:ret,total:ret.length}}var origin_module=this.origin_module?this.origin_module:"",origin=this.origin_component?this.origin_component+" -> ":"",store=new CCR.xdmod.CustomJsonStore({url:"controllers/metric_explorer.php",fields:["checked","name","id"],root:"data",totalProperty:"totalCount",idProperty:"name",messageProperty:"message",scope:this,baseParams:{operation:"get_dimension",dimension_id:this.dimension_id,realm:this.realms.join(","),public_user:CCR.xdmod.publicUser}});store.on("beforeload",function(t,op){t.baseParams.selectedFilterIds=this.getSelectedFilterIds().join(","),dimensionGrid.showMask()},this),store.on("load",function(t,op){dimensionGrid.hideMask(),self.getFooterToolbar().getComponent("select_all").setDisabled(150<t.getTotalCount())},this),store.on("exception",function(proxy,type,action,options,response){dimensionGrid.hideMask(),CCR.xdmod.ui.presentFailureResponse(response,{title:"Filter List"})},this);var onCheckChange=function(record){self.filterQueue.push({id:self.dimension_id+"="+record.data.id,value_id:record.data.id,value_name:record.data.name,dimension_id:self.dimension_id,realms:self.realms,checked:record.data.checked})},applyQueuedFilters=function(){var index,i,addList={},modifyList={},qLen=self.filterQueue.length;for(i=0;i<qLen;++i)(index=self.filtersStore.findExact("id",self.filterQueue[i].id))<0?addList[self.filterQueue[i].id]=self.filterQueue[i]:modifyList[self.filterQueue[i].id]={index:index,record:self.filterQueue[i]};var recordsToAdd=[];for(i in addList)addList.hasOwnProperty(i)&&addList[i].checked&&recordsToAdd.push(new self.filtersStore.recordType(addList[i]));var record,recordsToRemove=[],removeIndexes={};for(i in modifyList)if(modifyList.hasOwnProperty(i)){if(record=self.filtersStore.getAt(modifyList[i].index),modifyList[i].record.checked===record.data.checked)continue;modifyList[i].record.checked?record.set("checked",modifyList[i].record.checked):(recordsToRemove.push(record),removeIndexes[i]=!0)}recordsToRemove.length<20?self.filtersStore.remove(recordsToRemove):(self.filtersStore.getRange().forEach(function(item){removeIndexes[item.data.id]||recordsToAdd.push(item)}),self.filtersStore.removeAll()),self.filtersStore.add(recordsToAdd),self.filterQueue=[]},checkColumn=new Ext.grid.CheckColumn({id:"checked",width:35,dataIndex:"checked",scope:this,onMouseDown:function(e,t){if(Ext.fly(t).hasClass(this.createId())){e.stopEvent();var index=this.grid.getView().findRowIndex(t),record=this.grid.store.getAt(index);record.set(this.dataIndex,!record.data[this.dataIndex]),XDMoD.TrackEvent(origin_module,origin+"Filter Pane -> Toggled item in list",Ext.encode(record.data)),onCheckChange.call(this.scope,record)}}}),dimensionGrid=new Ext.grid.GridPanel({id:"filter_dimensions_"+this.id,store:store,autoScroll:!0,rowNumberer:!0,border:!0,stripeRows:!0,enableHdMenu:!1,hideHeaders:!0,disableSelection:!0,autoExpandColumn:"name",scope:this,viewConfig:{forceFit:!0,scrollOffset:2},plugins:[checkColumn,new Ext.ux.plugins.ContainerBodyMask({msg:"Loading...",masked:!0})],columns:[checkColumn,{header:"",width:300,sortable:!1,dataIndex:"name",id:"name"}],listeners:{rowmousedown:function(t,rowIndex,e){var record=t.store.getAt(rowIndex);record.set("checked",!record.data.checked),XDMoD.TrackEvent(origin_module,origin+"Filter Pane -> Toggled item in list",Ext.encode(record.data)),onCheckChange.call(t.scope,record)}}}),pagingToolbar=new Ext.PagingToolbar({pageSize:this.defaultPageSize,store:store,displayInfo:!0,displayMsg:"Items {0} - {1} of {2}",emptyMsg:"No data"});pagingToolbar.on("change",function(total,pageObj){XDMoD.TrackEvent(origin_module,origin+"Filter Pane -> Loaded page of data",pageObj.activePage+" of "+pageObj.pages)}),store.baseParams.start=pagingToolbar.start,store.baseParams.limit=pagingToolbar.pageSize,store.load();var searchField=new Ext.form.TwinTriggerField({xtype:"twintriggerfield",validationEvent:!1,validateOnBlur:!1,trigger1Class:"x-form-clear-trigger",trigger2Class:"x-form-search-trigger",hideTrigger1:!0,hasSearch:!1,enableKeyEvents:!0,onTrigger1Click:function(){XDMoD.TrackEvent(origin_module,origin+"Filter Pane -> Cleared search field"),this.hasSearch&&(this.el.dom.value="",store.baseParams.start=0,store.baseParams.limit=pagingToolbar.pageSize,store.baseParams.search_text="",store.load(),this.triggers[0].hide(),this.hasSearch=!1)},onTrigger2Click:function(){XDMoD.TrackEvent(origin_module,origin+"Filter Pane -> Used search field",Ext.encode({search_text:this.getRawValue()}));var v=this.getRawValue();v.length<1?this.onTrigger1Click():(store.baseParams.start=0,store.baseParams.limit=pagingToolbar.pageSize,store.baseParams.search_text=v,store.load(),this.hasSearch=!0,this.triggers[0].show())},listeners:{specialkey:function(field,e){e.getKey()==e.ENTER&&searchField.onTrigger2Click()}}});Ext.apply(this,{title:'<img class="x-panel-inline-icon filter" src="gui/lib/extjs/resources/images/default/s.gif" alt=""> Filter by '+this.dimension_label,width:450,height:328,border:!1,layout:"border",bodyStyle:"padding:5px 5px 0",buttonAlign:"left",tbar:["->","Search:",searchField],items:[{xtype:"panel",border:!1,region:"center",layout:"fit",items:dimensionGrid,bbar:pagingToolbar}],fbar:[{text:"Clear All",tooltip:"Disable all filters of this type.",handler:function(button,event){var getViewRecord=function(record){var filterValue=record.value_id,viewRecordIndex=store.findExact("id",filterValue);return 0<=viewRecordIndex?store.getAt(viewRecordIndex):new store.recordType({id:filterValue,name:record.value_name,checked:!0})},viewRecords=[];self.filtersStore.each(function(record){record.get("dimension_id")===self.dimension_id&&viewRecords.push(getViewRecord(record.data))});var queuedFiltersToDisable={};Ext.each(self.filterQueue,function(queuedFilterChange){var filterId=queuedFilterChange.id;queuedFilterChange.checked?queuedFiltersToDisable[filterId]=queuedFilterChange:delete queuedFiltersToDisable[filterId]}),Ext.iterate(queuedFiltersToDisable,function(filterId,queuedFilterChange){viewRecords.push(getViewRecord(queuedFilterChange))}),Ext.each(viewRecords,function(viewRecord){viewRecord.set("checked",!1),onCheckChange.call(self,viewRecord)})}},{text:"Select All",itemId:"select_all",disabled:!0,listeners:{enable:function(button){button.setTooltip("Select all filters")},disable:function(button){button.setTooltip("Select all is only available if there are fewer than "+150..toString()+" items in the filter list.")}},handler:function(){var currentCursor=pagingToolbar.cursor,currentPageSize=pagingToolbar.pageSize;dimensionGrid.showMask(),store.suspendEvents(),store.reload({params:{start:0,limit:store.getTotalCount()},callback:function(records,options,success){success&&(self.filterQueue=[],Ext.each(records,function(record){record.set("checked",!0),onCheckChange.call(self,record)},this)),store.resumeEvents(),store.reload({params:{start:currentCursor,limit:currentPageSize}})}})}},"->",{text:"Preview",handler:function(b,e){XDMoD.TrackEvent(origin_module,origin+"Filter Pane -> Clicked on Preview"),applyQueuedFilters()}},{scope:this,text:"Ok",handler:function(b,e){XDMoD.TrackEvent(origin_module,origin+"Filter Pane -> Clicked on Ok"),applyQueuedFilters(),b.scope.fireEvent("ok")}},{scope:this,text:"Cancel",handler:function(b,e){var filtersChanged=this.filtersStore.getCount()!=this.originalFiltersStoreData.total;if(0==filtersChanged){var i=0,orig=this.originalFiltersStoreData.data;this.filtersStore.each(function(record){0==self.filterEquals(record,orig[i++])&&(filtersChanged=!0)})}1==filtersChanged&&this.filtersStore.loadData(this.originalFiltersStoreData,!1),XDMoD.TrackEvent(origin_module,origin+"Filter Pane -> Clicked on Cancel"),b.scope.fireEvent("cancel")}}]}),CCR.xdmod.ui.FilterDimensionPanel.superclass.initComponent.apply(this,arguments),this.addEvents("ok"),this.addEvents("cancel")}}),CCR.xdmod.ui.CustomMenu=function(config){CCR.xdmod.ui.CustomMenu.superclass.constructor.call(this,config)},Ext.extend(CCR.xdmod.ui.CustomMenu,Ext.menu.Menu,{initComponent:function(){this.keepOnClick=void 0===this.keepOnClick||!0===this.keepOnClick,this.keepOnClick&&Ext.apply(this,{listeners:{beforehide:function(t){if(t.el){var menuBox=t.getBox(),ex=Ext.EventObject.getPageX(),ey=Ext.EventObject.getPageY();return this.temporaryInvisible?!(this.temporaryInvisible=!1):ex>menuBox.x+menuBox.width||ex<menuBox.x||ey>menuBox.y+menuBox.height||ey<menuBox.y}return!0}}}),CCR.xdmod.ui.CustomMenu.superclass.initComponent.apply(this,arguments)}}),CCR.xdmod.ui.AddDataPanel=function(config){CCR.xdmod.ui.AddDataPanel.superclass.constructor.call(this,config)},Ext.apply(CCR.xdmod.ui.AddDataPanel,{display_types:[["line","Line"],["column","Bar"],["area","Area"],["scatter","Scatter"],["spline","Spline"],["areaspline","Area Spline"],["pie","Pie"]],line_types:[["Solid","Solid",""],["ShortDash","ShortDash","6,2"],["ShortDot","ShortDot","2,2"],["ShortDashDot","ShortDashDot","6,2,2,2"],["ShortDashDotDot","ShortDashDotDot","6,2,2,2,2,2"],["Dot","Dot","2,6"],["Dash","Dash","8,6"],["LongDash","LongDash","16,6"],["DashDot","DashDot","8,6,2,6"],["LongDashDot","LongDashDot","16,6,2,6"],["LongDashDotDot","LongDashDotDot","16,6,2,6,2,6"]],line_widths:[[1,"1"],[2,"2"],[3,"3"],[4,"4"],[5,"5"],[6,"6"],[7,"7"],[8,"8"]],combine_types:[["side","Side by Side"],["stack","Stacked"],["percent","Percentage"]],sort_types:[["none","None"],["value_asc","Values Ascending"],["value_desc","Values Descending"],["label_asc","Labels Ascending"],["label_desc","Labels Descending"]],defaultConfig:function(timeseries){return{group_by:"none",color:"auto",log_scale:!1,std_err:!1,value_labels:!1,display_type:null!=timeseries&&timeseries?"line":"column",combine_type:"side",sort_type:"value_desc",ignore_global:!1,long_legend:!0,x_axis:!1,has_std_err:!1,trend_line:!1,line_type:"Solid",line_width:2,shadow:!1,filters:null,z_index:null,visibility:null,enabled:!0}},initRecord:function(store,config,selectedFilters,timeseries){var conf={};return jQuery.extend(!0,conf,CCR.xdmod.ui.AddDataPanel.defaultConfig(timeseries)),config&&jQuery.extend(!0,conf,config),conf.id=Math.random(),conf.z_index=store.getCount(),conf.filters=selectedFilters||{data:[],total:0},new store.recordType(conf)}}),Ext.extend(CCR.xdmod.ui.AddDataPanel,Ext.Panel,{record:null,store:null,update_record:!1,getSelectedFilters:function(){var ret=[];return this.filtersStore&&this.filtersStore.each(function(record){var data=jQuery.extend({},record.data);ret.push(data)}),{data:ret,total:ret.length}},numberOfFiltersSelected:function(){var filtersSelected=0;return this.filtersStore.each(function(record){record.get("checked")&&filtersSelected++}),filtersSelected},initComponent:function(){var filterButtonHandler;!this.record&&this.store&&(this.record=CCR.xdmod.ui.AddDataPanel.initRecord(this.store,this.config,this.getSelectedFilters(),this.timeseries)),this.originalData={},jQuery.extend(this.originalData,this.record.data);var filtersMenu=new Ext.menu.Menu({showSeparator:!1,ignoreParentClicks:!0}),filterItems=[],filterMap={};filtersMenu.removeAll(!0),this.addFilterButton=new Ext.Button({text:"Add Filter",xtype:"button",iconCls:"add_filter",scope:this,menu:filtersMenu});var realm_dimensions=this.realms[this.record.data.realm].dimensions;for(x in realm_dimensions)"none"!=x&&null!=realm_dimensions[x].text&&(null==filterMap[x]?(filterMap[x]=filterItems.length,filterItems.push({text:realm_dimensions[x].text,iconCls:"menu",realms:[this.record.data.realm],dimension:x,scope:this,handler:function(b,e){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Selected filter from menu",b.text),filterButtonHandler.call(b.scope,b.dimension,b.text,b.realms)}})):-1==filterItems[filterMap[x]].realms.indexOf(this.record.data.realm)&&filterItems[filterMap[x]].realms.push(this.record.data.realm));filterItems.sort(function(a,b){var nameA=a.text.toLowerCase(),nameB=b.text.toLowerCase();return nameA<nameB?-1:nameB<nameA?1:0}),filtersMenu.addItem(filterItems),filterButtonHandler=function(dim_id,dim_label,realms){if(dim_id&&dim_label){var filterDimensionPanel=new CCR.xdmod.ui.FilterDimensionPanel({origin_module:"Metric Explorer",origin_component:"Data Series Definition",dimension_id:dim_id,realms:realms,dimension_label:dim_label,filtersStore:this.filtersStore});filterDimensionPanel.on("cancel",function(){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Cancelled filters panel"),addFilterMenu.closable=!0,addFilterMenu.hide()}),filterDimensionPanel.on("ok",function(){this.editFiltersButton.setText("Filters ("+this.numberOfFiltersSelected()+")"),addFilterMenu.closable=!0,addFilterMenu.hide()}.bind(this));var addFilterMenu=new Ext.menu.Menu({showSeparator:!1,items:[filterDimensionPanel],scope:this,closable:!1,listeners:{beforehide:function(t){return t.closable},hide:function(t){t.scope.el.unmask()},show:function(t){t.scope.el.mask()}}});addFilterMenu.ownerCt=this,(addFilterMenu=Ext.menu.MenuMgr.get(addFilterMenu)).show(this.addFilterButton.el,"tl-bl?")}};var realmData=[];for(realm in this.realms)realmData.push([realm]);var metricData=[];for(metric in this.realms[this.record.data.realm].metrics)metricData.push([metric,this.realms[this.record.data.realm].metrics[metric].text]);var dimenionsData=[];for(dimension in this.realms[this.record.data.realm].dimensions)dimenionsData.push([dimension,this.realms[this.record.data.realm].dimensions[dimension].text]);var activeFilterCheckColumn=new Ext.grid.CheckColumn({id:"checked",sortable:!1,dataIndex:"checked",header:"Local",tooltip:"Check this column to apply filter to this dataset",scope:this,width:10,hidden:!1,checkchange:function(record,data_index,checked){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Toggled filter checkbox",Ext.encode({dimension:record.data.dimension_id,value:record.data.value_name,checked:checked}))}});if(this.filtersStore=new Ext.data.GroupingStore({autoDestroy:!0,idIndex:0,groupField:"dimension_id",sortInfo:{field:"dimension_id",direction:"ASC"},reader:new Ext.data.JsonReader({totalProperty:"total",idProperty:"id",root:"data"},["id","value_id","value_name","dimension_id","realms","checked"])}),this.record.data.filters){var currentFilters=jQuery.extend({},this.record.data.filters);this.filtersStore.loadData(currentFilters,!1)}var selectAllButton=new Ext.Button({text:"Select All",scope:this,handler:function(b,e){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Clicked on Select All in Local Filters pane"),this.filtersStore.each(function(r){r.set("checked",!0)})}}),clearAllButton=new Ext.Button({text:"Clear All",scope:this,handler:function(b,e){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Clicked on Clear All in Local Filters pane"),this.filtersStore.each(function(r){r.set("checked",!1)})}}),applyFilterSelection=new Ext.Button({tooltip:"Apply selected filter(s)",text:"Apply",scope:this,handler:function(){this.record.set("filters",this.getSelectedFilters()),this.filtersStore.commitChanges(),this.editFiltersButton.setText("Filters ("+this.numberOfFiltersSelected()+")")}}),removeFilterItem=new Ext.Button({iconCls:"delete_filter",tooltip:"Delete highlighted filter(s)",text:"Delete",disabled:!0,scope:this,handler:function(i,e){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Clicked on Delete in Local Filters pane");var records=filtersGridPanel.getSelectionModel().getSelections();for(i=0;i<records.length;i++)XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Confirmed deletion of filter",Ext.encode({dimension:records[i].data.dimension_id,value:records[i].data.value_name}));filtersGridPanel.store.remove(records)}}),cancelFilterSelection=new Ext.Button({tooltip:"Cancel filter selections",text:"Cancel",scope:this,handler:function(){this.filtersStore.rejectChanges()}}),viewerWidth=CCR.xdmod.ui.Viewer.getViewer().getWidth(),filtersGridPanel=new Ext.grid.GridPanel({header:!1,height:250,id:"grid_filters_"+this.id,useArrows:!0,autoScroll:!0,sortable:!1,enableHdMenu:!1,loadMask:!0,margins:"0 0 0 0",buttonAlign:"left",view:new Ext.grid.GroupingView({emptyText:'No filters created.<br/> Click on <img class="x-panel-inline-icon add_filter" src="gui/lib/extjs/resources/images/default/s.gif" alt=""> to create filters.',forceFit:!0,groupTextTpl:'{text} ({[values.rs.length]} {[values.rs.length > 1 ? "Items" : "Item"]})'}),sm:new Ext.grid.RowSelectionModel({singleSelect:!0,listeners:{rowselect:function(sm,row_index,record){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Selected a chart filter",Ext.encode({dimension:record.data.dimension_id,value:record.data.value_name}))},rowdeselect:function(sm,row_index,record){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> De-selected a chart filter",Ext.encode({dimension:record.data.dimension_id,value:record.data.value_name}))},selectionchange:function(sm){removeFilterItem.setDisabled(sm.getCount()<=0)}}}),plugins:[activeFilterCheckColumn],autoExpandColumn:"value_name",store:this.filtersStore,columns:[activeFilterCheckColumn,{id:"dimension",tooltip:"Dimension",renderer:CCR.xdmod.ui.gridComboRenderer(this.dimensionsCombo),width:80,header:"Dimension",dataIndex:"dimension_id"},{id:"value_name",tooltip:"Filter",width:100,header:"Filter",dataIndex:"value_name"}],tbar:[removeFilterItem],fbar:[clearAllButton,"-",selectAllButton,"->",applyFilterSelection,"-",cancelFilterSelection]});function updateFilters(){this.record.set("filters",this.getSelectedFilters())}this.editFiltersButton=new Ext.Button({xtype:"button",text:"Filters ("+this.numberOfFiltersSelected()+")",iconCls:"filter",scope:this,menu:new Ext.menu.Menu({showSeparator:!1,items:filtersGridPanel,width:viewerWidth<1150?viewerWidth:1150,renderTo:document.body})}),this.filtersStore.on("add",updateFilters,this),this.filtersStore.on("remove",updateFilters,this),this.has_std_err=this.realms[this.record.data.realm].metrics[this.record.data.metric].std_err,this.stdErrorCheckBox=new Ext.form.Checkbox({fieldLabel:"Std Err Bars",name:"std_err",xtype:"checkbox",boxLabel:"Show the std err bars on each data point",disabled:!this.has_std_err||this.record.data.log_scale,checked:this.record.data.std_err,listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Clicked on "+checkbox.fieldLabel,Ext.encode({checked:check})),this.record.set("std_err",check)}}}),this.stdErrorLabelsCheckBox=new Ext.form.Checkbox({fieldLabel:"Std Err Labels",name:"std_err_labels",xtype:"checkbox",boxLabel:"Show the std err labels on each data point",disabled:!this.has_std_err||this.record.data.log_scale,checked:this.record.data.std_err_labels,listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Clicked on "+checkbox.fieldLabel,Ext.encode({checked:check})),this.record.set("std_err_labels",check)}}}),this.enabledDatasetCheckBox=new Ext.form.Checkbox({fieldLabel:"Enabled",name:"enabled",xtype:"checkbox",boxLabel:"Show on chart",checked:this.record.data.enabled,listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Clicked on "+checkbox.fieldLabel,Ext.encode({checked:check})),this.record.set("enabled",check)}}}),this.valueLabelsCheckbox=new Ext.form.Checkbox({fieldLabel:"Value Labels",name:"value_labels",xtype:"checkbox",checked:this.record.data.value_labels,boxLabel:"Show a value label on each data point",listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Clicked on "+checkbox.fieldLabel,Ext.encode({checked:check})),this.record.set("value_labels",check)}}}),this.displayTypeCombo=new Ext.form.ComboBox({flex:2.5,fieldLabel:"Display Type",name:"display_type",xtype:"combo",mode:"local",editable:!1,store:new Ext.data.ArrayStore({id:0,fields:["id","text"],data:CCR.xdmod.ui.AddDataPanel.display_types}),disabled:!1,value:this.record.data.display_type,valueField:"id",displayField:"text",triggerAction:"all",listeners:{scope:this,select:function(combo,record,index){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Selected "+combo.fieldLabel+" using drop-down menu",record.get("id"));var btn,display_type=record.get("id");this.validate("display_type",display_type)?((btn=Ext.getCmp("adp_submit_button"))&&btn.enable(),this.record.set("display_type",display_type),"pie"===display_type?(this.valueLabelsCheckbox.setValue(!0),this.logScaleCheckbox.disable()):this.logScaleCheckbox.enable(),this.lineTypeCombo.setDisabled("line"!==display_type&&"spline"!==display_type&&"area"!==display_type&&"areaspline"!==display_type)):(btn=Ext.getCmp("adp_submit_button"))&&btn.disable()}}}),this.lineTypeCombo=new Ext.form.ComboBox({fieldLabel:"Line Type",name:"line_type",xtype:"combo",mode:"local",itemSelector:"div.line-item",editable:!1,store:new Ext.data.ArrayStore({id:0,fields:["id","text","dasharray"],data:CCR.xdmod.ui.AddDataPanel.line_types}),disabled:"line"!==this.record.data.display_type&&"spline"!==this.record.data.display_type&&"area"!==this.record.data.display_type&&"areaspline"!==this.record.data.display_type,value:this.record.data.line_type,valueField:"id",displayField:"text",triggerAction:"all",tpl:new Ext.XTemplate('<tpl for="."><div class="line-item">',"<span>",'<svg  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns="http://www.w3.org/2000/svg" version="1.1"  width="185" height="14">','<g fill="none" stroke="black" stroke-width="2">','<path stroke-dasharray="{dasharray}" d="M 0 6 l 180 0" />',"</g>","</svg>","{text}","</span>","</div></tpl>"),listeners:{scope:this,select:function(combo,record,index){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Advanced -> Selected "+combo.fieldLabel+" using drop-down menu",record.get("id")),this.record.set("line_type",record.get("id"))}}}),this.lineWidthCombo=new Ext.form.ComboBox({fieldLabel:"Line Width",name:"line_width",xtype:"combo",mode:"local",itemSelector:"div.line-width-item",editable:!1,store:new Ext.data.ArrayStore({id:0,fields:["id","text"],data:CCR.xdmod.ui.AddDataPanel.line_widths}),disabled:"line"!==this.record.data.display_type&&"spline"!==this.record.data.display_type&&"area"!==this.record.data.display_type&&"areaspline"!==this.record.data.display_type,value:this.record.data.line_width,valueField:"id",displayField:"text",triggerAction:"all",tpl:new Ext.XTemplate('<tpl for="."><div class="line-width-item">',"<span>",'<svg  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns="http://www.w3.org/2000/svg" version="1.1"  width="185" height="14">','<g fill="none" stroke="black" stroke-width="{id}">','<path stroke-dasharray="" d="M 0 6 l 180 0" />',"</g>","</svg>","{text}","</span>","</div></tpl>"),listeners:{scope:this,select:function(combo,record,index){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Advanced -> Selected "+combo.fieldLabel+" using drop-down menu",record.get("id")),this.record.set("line_width",record.get("id"))}}}),this.colorCombo=new Ext.form.ComboBox({fieldLabel:"Color",name:"color",xtype:"combo",mode:"local",itemSelector:"div.color-item",editable:!1,store:new Ext.data.ArrayStore({id:0,fields:["id",{name:"color_inverse",convert:function(v,record){return"auto"==record?"000000":CCR.xdmod.ui.invertColor(record)}}],data:CCR.xdmod.ui.colors[0]}),disabled:!1,value:this.record.data.color,valueField:"id",displayField:"id",triggerAction:"all",tpl:new Ext.XTemplate('<tpl for="."><div class="color-item" style="border: 1px; background-color:#{id}; color:#{color_inverse}; " >',"<span >","{id}","</span>","</div></tpl>"),listeners:{scope:this,select:function(combo,record,index){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Advanced -> Selected "+combo.fieldLabel+" using drop-down menu",record.get("id"));var color=record.get("id");this.record.set("color",color),document.getElementById(combo.id).style.color="auto"!==color?(document.getElementById(combo.id).style.backgroundImage="none",document.getElementById(combo.id).style.backgroundColor="#"+color,"#"+record.get("color_inverse")):(document.getElementById(combo.id).style.backgroundImage='url("../../gui/lib/extjs/resources/images/default/form/text-bg.gif")',document.getElementById(combo.id).style.backgroundColor="#ffffff","#000000")},render:function(combo){var color=this.record.get("color");document.getElementById(combo.id).style.color="auto"!==color?(document.getElementById(combo.id).style.backgroundImage="none",document.getElementById(combo.id).style.backgroundColor="#"+color,"#"+CCR.xdmod.ui.invertColor(color)):(document.getElementById(combo.id).style.backgroundImage='url("../../gui/lib/extjs/resources/images/default/form/text-bg.gif")',document.getElementById(combo.id).style.backgroundColor="#ffffff","#000000")}}}),this.shadowCheckBox=new Ext.form.Checkbox({fieldLabel:"Shadow",name:"shadow",xtype:"checkbox",boxLabel:"Cast a shadow",checked:this.record.data.shadow,listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Advanced -> Clicked on "+checkbox.fieldLabel,Ext.encode({checked:check})),this.record.set("shadow",check)}}}),this.displayTypeConfigButton=new Ext.Button({flex:1.5,xtype:"button",text:"Advanced",handler:function(){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Clicked on the Advanced button")},menu:[{bodyStyle:"padding:5px 5px 0;",xtype:"form",items:[this.lineTypeCombo,this.lineWidthCombo,this.colorCombo,this.shadowCheckBox]}]});var isPie="pie"===this.record.get("display_type");this.logScaleCheckbox=new Ext.form.Checkbox({fieldLabel:"Log Scale",name:"log_scale",xtype:"checkbox",boxLabel:"Use a log scale y axis for this data",checked:this.record.data.log_scale,disabled:isPie,listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Clicked on "+checkbox.fieldLabel,Ext.encode({checked:check})),this.record.set("log_scale",check),this.stdErrorCheckBox.setDisabled(!this.record.data.has_std_err||check),this.stdErrorLabelsCheckBox.setDisabled(!this.record.data.has_std_err||check)}}});var formItems=[{fieldLabel:"Category",name:"category",xtype:"combo",mode:"local",editable:!1,store:new Ext.data.ArrayStore({id:0,fields:["id"],data:realmData}),disabled:!0,value:XDMoD.Module.MetricExplorer.getCategoryForRealm(this.record.data.realm),valueField:"id",displayField:"id",triggerAction:"all"},{fieldLabel:"Metric",name:"metric",xtype:"combo",mode:"local",editable:!1,store:new Ext.data.ArrayStore({id:0,fields:["id","text"],data:metricData}),disabled:!1,value:this.record.data.metric,valueField:"id",displayField:"text",triggerAction:"all",listeners:{scope:this,select:function(combo,record,index){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Selected "+combo.fieldLabel+" using drop-down menu",record.get("id"));var metric=record.get("id");this.record.set("metric",metric);var has_std_err=this.realms[this.record.data.realm].metrics[metric].std_err;this.record.set("has_std_err",has_std_err),this.stdErrorCheckBox.setDisabled(!has_std_err||this.record.data.log_scale),this.stdErrorLabelsCheckBox.setDisabled(!has_std_err||this.record.data.log_scale)}}},{fieldLabel:"Group by",name:"dimension",xtype:"combo",mode:"local",editable:!1,store:new Ext.data.ArrayStore({id:0,fields:["id","text"],data:dimenionsData}),disabled:!1,value:this.record.data.group_by,valueField:"id",displayField:"text",triggerAction:"all",listeners:{scope:this,select:function(combo,record,index){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Selected "+combo.fieldLabel+" using drop-down menu",record.get("id")),this.record.set("group_by",record.get("id"))}}},{fieldLabel:"Sort Type",name:"sort_type",xtype:"combo",mode:"local",editable:!1,store:new Ext.data.ArrayStore({id:0,fields:["id","text"],data:CCR.xdmod.ui.AddDataPanel.sort_types}),disabled:!1,value:this.record.data.sort_type,valueField:"id",displayField:"text",triggerAction:"all",listeners:{scope:this,select:function(combo,record,index){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Selected "+combo.fieldLabel+" using drop-down menu",record.get("id")),this.record.set("sort_type",record.get("id"))}}},{fieldLabel:"Display Type",xtype:"compositefield",items:[this.displayTypeCombo,{fieldLabel:"Stacking",name:"combine_type",xtype:"combo",mode:"local",flex:2,editable:!1,store:new Ext.data.ArrayStore({id:0,fields:["id","text"],data:CCR.xdmod.ui.AddDataPanel.combine_types}),disabled:!1,value:this.record.data.combine_type,valueField:"id",displayField:"text",triggerAction:"all",listeners:{scope:this,select:function(combo,record,index){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Selected Stacking type using drop-down menu",record.get("id")),this.record.set("combine_type",record.get("id"))}}},this.displayTypeConfigButton]},this.stdErrorCheckBox,this.stdErrorLabelsCheckBox,this.logScaleCheckbox,this.valueLabelsCheckbox,{fieldLabel:"Verbose Legends",name:"long_legend",boxLabel:"Show filters in legend",checked:this.record.data.long_legend,xtype:"checkbox",listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Clicked on "+checkbox.fieldLabel,Ext.encode({checked:check})),this.record.set("long_legend",check)}}},this.enabledDatasetCheckBox,{fieldLabel:"Local Filters",xtype:"container",layout:"hbox",items:[this.addFilterButton,this.editFiltersButton]},{fieldLabel:"Ignore Chart Filters",name:"ignore_global",xtype:"checkbox",boxLabel:"Apply only local filters to this data series",checked:this.record.data.ignore_global,listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Clicked on "+checkbox.fieldLabel,Ext.encode({checked:check})),this.record.set("ignore_global",check)}}}],form=new Ext.FormPanel({labelWidth:125,bodyStyle:"padding:5px 5px 0",defaults:{width:325,anchor:0},items:formItems});Ext.apply(this,{items:[form],layout:"fit",width:475,height:540,border:!1,title:'<img class="x-panel-inline-icon add_data" src="gui/lib/extjs/resources/images/default/s.gif" alt=""> Data Series Definition',buttons:[{scope:this,id:"adp_submit_button",text:this.update_record?"Update":"Add",handler:function(b,e){XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Clicked on "+b.text),b.scope.add_function.call(this)}},{scope:this,text:"Cancel",handler:function(b,e){for(attr in this.originalData)this.record.set(attr,this.originalData[attr]);XDMoD.TrackEvent("Metric Explorer","Data Series Definition -> Clicked on Cancel"),b.scope.cancel_function.call(this)}}]}),CCR.xdmod.ui.AddDataPanel.superclass.initComponent.apply(this,arguments),this.hideMenu=function(){filtersMenu.hide()}},validate:function(field,value){return!0}}),CCR.xdmod.ui.ExportPanel=function(config){CCR.xdmod.ui.ExportPanel.superclass.constructor.call(this,config)},Ext.ns("Ext.ux.form"),Ext.ux.form.Spacer=Ext.extend(Ext.BoxComponent,{height:11,autoEl:"div"}),Ext.reg("spacer",Ext.ux.form.Spacer),Ext.apply(CCR.xdmod.ui.ExportPanel,{format_types:[["png","PNG - Portable Network Graphics"],["svg","SVG - Scalable Vector Graphics"],["csv","CSV - Comma Separated Values"],["xml","XML - Extensible Markup Language"],["pdf","PDF - Portable Document Format"]],format_types_noimg:[["csv","CSV - Comma Separated Values"],["xml","XML - Extensible Markup Language"]],template_types:[["small","Small"],["medium","Medium"],["large","Large"],["poster","Poster"],["custom","Custom"]]}),Ext.extend(CCR.xdmod.ui.ExportPanel,Ext.Panel,{active_role:"po",settings:null,lastformatSetting:null,imageExportAllowed:null,allowImageExport:function(allow){if(allow!=this.imageExportAllowed){var cachedFormat=this.lastformatSetting;this.lastformatSetting=this.formatTypeCombo.getValue(),this.settings.format=(allow?this.formatTypeCombo.store.loadData(this.format_types):this.formatTypeCombo.store.loadData(this.format_types_noimg),cachedFormat),this.formatTypeCombo.setValue(this.settings.format),this.setupDisplay.call(this,this.settings.format),this.imageExportAllowed=allow}},setupDisplay:function(format_type){var field,fieldSettings={width_inches:["pdf"],height_inches:["pdf"],font_pt:["pdf"],show_title:["pdf","png","svg"],image_size:["png","svg"]};for(field in fieldSettings)fieldSettings.hasOwnProperty(field)&&this.form.findField(field).setVisible(fieldSettings[field].includes(format_type))},initComponent:function(){if(this.format_types=CCR.xdmod.ui.ExportPanel.format_types,this.format_types_noimg=CCR.xdmod.ui.ExportPanel.format_types_noimg,this.config&&this.config.allowedExports){var allowedExports=this.config.allowedExports;this.format_types=CCR.xdmod.ui.ExportPanel.format_types.filter(function(ftype){return allowedExports.includes(ftype[0])}),this.format_types_noimg=CCR.xdmod.ui.ExportPanel.format_types_noimg.filter(function(ftype){return allowedExports.includes(ftype[0])})}this.settings={format:"png",showtitle:!0,height:484,width:916,font_size:0,scale:1},this.template="medium",this.imageExportAllowed=!0,this.lastformatSetting="csv",this.showTitleCheckbox=new Ext.form.Checkbox({fieldLabel:"Chart title",name:"show_title",xtype:"checkbox",boxLabel:"Show chart title",checked:this.settings.showtitle,disabled:!1}),this.widthTextBox=new Ext.form.NumberField({fieldLabel:"Image width",name:"image_width",minValue:1,maxValue:4e4,allowDecimals:!1,decimalPrecision:0,incrementValue:1,alternateIncrementValue:100,accelerate:!0,width:24,value:this.settings.width,hidden:!0}),this.heightTextBox=new Ext.form.NumberField({fieldLabel:"Image height",name:"image_height",minValue:1,maxValue:4e4,allowDecimals:!1,decimalPrecision:0,incrementValue:1,alternateIncrementValue:100,accelerate:!0,width:24,value:this.settings.height,hidden:!0}),this.fontSizeSlider=new Ext.slider.SingleSlider({fieldLabel:"Font Size",name:"font_size",minValue:-5,maxValue:10,value:this.settings.font_size,increment:1,plugins:new Ext.slider.Tip,hidden:!0}),this.enableCustom=function(enable){enable?(this.widthTextBox.enable(),this.widthTextBox.show(),this.heightTextBox.enable(),this.heightTextBox.show(),this.fontSizeSlider.enable(),this.fontSizeSlider.show()):(this.widthTextBox.hide(),this.widthTextBox.disable(),this.heightTextBox.hide(),this.heightTextBox.disable(),this.fontSizeSlider.hide(),this.fontSizeSlider.disable())},this.templateTypeCombo=new Ext.form.ComboBox({flex:2.5,fieldLabel:"Image Size",name:"image_size",xtype:"combo",mode:"local",editable:!1,store:new Ext.data.ArrayStore({id:0,fields:["id","text"],data:CCR.xdmod.ui.ExportPanel.template_types}),disabled:!1,value:"medium",valueField:"id",displayField:"text",triggerAction:"all",itemId:"templateTypeCombo",listeners:{scope:this,select:function(combo,record,index){var templ=record.get("id");if("custom"==templ)this.enableCustom.call(this,!0);else switch(this.enableCustom.call(this,!1),templ){case"small":this.widthTextBox.setValue(640),this.heightTextBox.setValue(380);break;case"medium":this.widthTextBox.setValue(916),this.heightTextBox.setValue(484);break;case"large":this.widthTextBox.setValue(1280),this.heightTextBox.setValue(720);break;case"poster":this.widthTextBox.setValue(1920),this.heightTextBox.setValue(1080)}},beforeshow:function(){this.enableCustom.call(this,"custom"==this.templateTypeCombo.getValue())},beforehide:function(){this.enableCustom.call(this,!1)}}}),this.formatTypeCombo=new Ext.form.ComboBox({flex:2.5,fieldLabel:"Format",name:"format_type",xtype:"combo",mode:"local",editable:!1,store:new Ext.data.ArrayStore({id:0,fields:["id","text"],data:this.format_types}),disabled:!1,value:this.settings.format,valueField:"id",displayField:"text",triggerAction:"all",listeners:{scope:this,select:function(combo,record,index){this.setupDisplay.call(this,record.get("id"))}}});var formpanel=new Ext.FormPanel({labelWidth:125,bodyStyle:"padding:5px 5px 0",monitorValid:!0,defaults:{width:225,anchor:0},items:[this.formatTypeCombo,{xtype:"spacer"},this.showTitleCheckbox,this.templateTypeCombo,this.widthTextBox,this.heightTextBox,this.fontSizeSlider,{xtype:"numberfield",name:"width_inches",fieldLabel:"Width (inches)",allowDecimals:!0,decimalPrecision:2,hidden:!0,minValue:.01,maxValue:1e9,width:36,value:6},{xtype:"numberfield",name:"height_inches",fieldLabel:"Height (inches)",allowDecimals:!0,decimalPrecision:2,hidden:!0,minValue:.01,maxValue:1e9,width:36,value:3.2},{xtype:"numberfield",name:"font_pt",fieldLabel:"Font size (pt)",allowDecimals:!0,decimalPrecision:1,hidden:!0,minValue:.1,maxValue:100,width:36,value:8}],buttons:[{scope:this,text:"Export",formBind:!0,handler:function(b,e){var formVals=this.form.getFieldValues();"pdf"===formVals.format_type?(this.settings.scale=2.5,this.settings.format=formVals.format_type,this.settings.showtitle=this.showTitleCheckbox.getValue(),this.settings.width=Math.round(90*formVals.width_inches),this.settings.height=Math.round(90*formVals.height_inches),this.settings.font_size=Math.round(90*this.settings.scale*formVals.font_pt/72)+-12,this.template="custom"):(this.settings.scale=1,this.settings.format=this.formatTypeCombo.getValue(),this.settings.showtitle=this.showTitleCheckbox.getValue(),this.settings.width=this.widthTextBox.getValue(),this.settings.height=this.heightTextBox.getValue(),this.settings.font_size=this.fontSizeSlider.getValue(),this.template=this.templateTypeCombo.getValue());var params={format:this.settings.format,show_title:this.settings.showtitle?"y":"n",width:this.settings.width,height:this.settings.height,scale:this.settings.scale,inline:"n"};"custom"==this.template&&(params.font_size=this.settings.font_size),b.scope.export_function(params)}},{scope:this,text:"Cancel",handler:function(b,e){this.showTitleCheckbox.setValue(this.settings.showtitle),this.widthTextBox.setValue(this.settings.width),this.heightTextBox.setValue(this.settings.height),this.fontSizeSlider.setValue(this.settings.font_size),this.templateTypeCombo.setValue(this.template),this.formatTypeCombo.setValue(this.settings.format),this.setupDisplay.call(this,this.settings.format),b.scope.cancel_function()}}]});this.form=formpanel.getForm(),Ext.apply(this,{items:[formpanel],layout:"fit",width:400,height:300,border:!1}),CCR.xdmod.ui.ExportPanel.superclass.initComponent.apply(this,arguments)}}),XDMoD.CaptchaField=Ext.extend(Ext.Panel,{frame:!1,border:!1,height:150,width:335,baseCls:"x-plain",html:'<g-recaptcha id="contact-recaptcha" data-sitekey="'+CCR.xdmod.captcha_sitekey+'"></g-recaptcha>',afterRender:function(){var recaptchaTag=document.getElementById("contact-recaptcha");recaptchaTag.dataset.callback=this.signupFormSubmit,"undefined"!=typeof grecaptcha?(this.grecaptchaid=grecaptcha.render(recaptchaTag),0<this.grecaptchaid?this.elementId="g-recaptcha-response-"+this.grecaptchaid:this.elementId="g-recaptcha-response"):CCR.xdmod.ui.userManagementMessage("Error Loading reCAPTCHA. Contact an administrator directly.",!1)},getResponseField:function(){return this.elementId?document.getElementById(this.elementId).value:""},initComponent:function(){XDMoD.CaptchaField.superclass.initComponent.call(this)}}),XDMoD.AbstractContactDialog=Ext.extend(Ext.Window,{width:470,modal:!0,resizable:!1,title:"AbstractContactDialog",iconCls:"contact_16",bodyStyle:"padding:15px 13px 0",trackEventCategory:null,successMessageHtml:null,contactReason:null,initComponent:function(){var self=this,maxNameLength=XDMoD.constants.maxNameLength,txtName=new Ext.form.TextField({name:"name",fieldLabel:"Name",width:200,emptyText:"1 min, "+maxNameLength+" max",msgTarget:"under",allowBlank:!1,blankText:"This field is required.",maxLength:maxNameLength+1,maxLengthText:"Maximum length ("+maxNameLength+" characters) exceeded.",regex:XDMoD.regex.noReservedCharacters,regexText:'This field may not contain reserved characters. ($, ^, #, <, >, ", :, \\, /, !)',listeners:{blur:XDMoD.utils.trimOnBlur,invalid:XDMoD.utils.syncWindowShadow,valid:XDMoD.utils.syncWindowShadow}}),minEmailLength=XDMoD.constants.minEmailLength,maxEmailLength=XDMoD.constants.maxEmailLength,txtEmail=new Ext.form.TextField({name:"email",fieldLabel:"E-Mail",width:200,emptyText:minEmailLength+" min, "+maxEmailLength+" max",msgTarget:"under",allowBlank:!1,blankText:"This field is required.",minLength:minEmailLength,minLengthText:"Minimum length ("+minEmailLength+" characters) not met.",maxLength:maxEmailLength,maxLengthText:"Maximum length ("+maxEmailLength+" characters) exceeded.",validator:XDMoD.validator.email,listeners:{blur:XDMoD.utils.trimOnBlur,invalid:XDMoD.utils.syncWindowShadow,valid:XDMoD.utils.syncWindowShadow}}),txtMessage=new Ext.form.TextArea({name:"message",anchor:"100%",msgTarget:"under",allowBlank:!1,blankText:"This field is required.",listeners:{blur:XDMoD.utils.trimOnBlur,invalid:XDMoD.utils.syncWindowShadow,valid:XDMoD.utils.syncWindowShadow}}),captchaField=null;0<CCR.xdmod.captcha_sitekey.length&&(captchaField=new XDMoD.CaptchaField({style:"margin-left: 60px; margin-bottom: 10px;"}));var btnSubmit=new Ext.Button({text:"Send Message",iconCls:"contact_btn_send",handler:function(){XDMoD.TrackEvent(self.trackEventCategory,"Clicked Send Message button"),processContactForm()}}),processContactForm=function(){var timestamp_secs=XDMoD.Tracking.timestamp/1e3,params={operation:"contact",username:CCR.xdmod.ui.username,token:XDMoD.REST.token,timestamp:timestamp_secs,reason:self.contactReason};if(captchaField){var captchaResponse=Ext.util.Format.trim(captchaField.getResponseField());if(0===captchaResponse.length)return void CCR.xdmod.ui.userManagementMessage("Please answer the reCAPTCHA challenge.",!1);params.recaptcha_response_field=captchaResponse}signUpSection.getForm().submit({url:"controllers/mailer.php",method:"POST",params:params,success:function(form,action){successSection.setHeight(signUpSection.getHeight()),self.getLayout().setActiveItem(1),btnSubmit.setDisabled(!0)},failure:function(form,action){action.failureType!==Ext.form.Action.CLIENT_INVALID?CCR.xdmod.ui.presentFailureResponse(action.response,{title:self.title,wrapperMessage:"There was a problem sending your message."}):CCR.xdmod.ui.userManagementMessage("Please resolve any problems in the form and try sending your message again.",!1)}})},signUpSectionItems=[];"object"==typeof self.intro&&signUpSectionItems.push(self.intro),signUpSectionItems.push(new Ext.Panel({labelWidth:45,frame:!0,title:"Contact Information",bodyStyle:"padding:5px 5px 0",width:430,layout:"form",items:[txtName,txtEmail]})),signUpSectionItems.push(new Ext.Panel({hideLabels:!0,frame:!0,title:"Message",style:"margin: 15px 0px",width:430,layout:"form",items:[txtMessage]})),captchaField&&signUpSectionItems.push(captchaField);var signUpSection=new Ext.form.FormPanel({width:300,autoHeight:!0,baseCls:"x-plain",cls:"no-underline-invalid-fields-form",items:signUpSectionItems}),successSection=new Ext.Panel({baseCls:"x-plain",html:self.successMessageHtml});self.on("afterrender",function(){CCR.xdmod.logged_in&&XDMoD.REST.connection.request({url:"/users/current",method:"GET",callback:function(options,success,response){var data;success&&(data=CCR.safelyDecodeJSONResponse(response),success=CCR.checkDecodedJSONResponseSuccess(data)),success&&(txtName.setValue(data.results.first_name+" "+data.results.last_name),txtEmail.setValue(data.results.email_address))}})}),self.on("close",function(){XDMoD.TrackEvent(self.trackEventCategory,"Closed Window")}),Ext.apply(this,{layout:"card",activeItem:0,bbar:{items:[btnSubmit,"->",new Ext.Button({text:"Close",iconCls:"general_btn_close",handler:function(){self.close()}})]},items:[signUpSection,successSection]}),XDMoD.AbstractContactDialog.superclass.initComponent.call(this)}}),XDMoD.ContactDialog=Ext.extend(XDMoD.AbstractContactDialog,{title:"Send Message",trackEventCategory:"Contact Window",successMessageHtml:'<center><br /><br /><img src="gui/images/signup_success.png"><br /><br />Thank you for your message.<br /><br />A team member will be in touch with you shortly.</center>',contactReason:"contact"}),XDMoD.SupportDialog=Ext.extend(XDMoD.AbstractContactDialog,{title:"Submit Support Request",trackEventCategory:"Support Window",successMessageHtml:'<center><br /><br /><img src="gui/images/signup_success.png"><br /><br />Thank you for your support request.<br /><br />A team member will be in touch with you shortly.</center>',contactReason:"contact"}),XDMoD.WishlistDialog=Ext.extend(XDMoD.AbstractContactDialog,{title:"Request Feature",iconCls:"bulb_16",trackEventCategory:"Wishlist Window",successMessageHtml:'<center><br /><br /><img src="gui/images/signup_success.png"><br /><br />Thank you for your feature request.<br /><br />A team member will be in touch with you shortly.</center>',contactReason:"wishlist",intro:{xtype:"panel",title:"Roadmap",hideLabels:!0,width:430,style:"margin-bottom: 15px;",layout:"form",items:[{xtype:"panel",layout:"hbox",style:"padding: 5px; background-color: #F1F1F1",border:!1,items:[{xtype:"panel",border:!1,bodyStyle:"background-color: #F1F1F1",html:"Before submitting a feature request please take a moment to see if it has already been added to our new Roadmap.",flex:1},{xtype:"button",text:"Roadmap",iconCls:"roadmap",id:"request-feature-roadmap",handler:function(){this.ownerCt.ownerCt.ownerCt.ownerCt.close(),Ext.History.add("#main_tab_panel:about_xdmod?Roadmap")}}]}]}}),Ext.ns("XDMoD"),XDMoD.RealTimeValidatingTextField=Ext.extend(Ext.form.TextField,{enableKeyEvents:!0,previouslyValid:!1,initComponent:function(){XDMoD.RealTimeValidatingTextField.superclass.initComponent.call(this,arguments),this.validationCallback=void 0!==this.validationCallback?this.validationCallback:function(){}},listeners:{keypress:function(field,event){var next=field.getValue()+String.fromCharCode(event.getKey());this._handleValidation(field,next)&&this.validationCallback({name:next,validate:!0})},specialkey:function(field,event){var searchName;this._deletionOccuring(event)&&(searchName=this._handleDeletion(field,event),this._handleValidation(field,searchName)),this.validationCallback({name:searchName,validate:!0})}},_deletionOccuring:function(event){return 0<=[event.BACKSPACE,event.DELETE].indexOf(event.getKey())},_handleDeletion:function(field,event){var before,after,value=field.getValue(),key=event.getKey(),selection=this._getSelection();return 0<selection.value.length?(before=value.substring(0,selection.start),after=value.substring(selection.end+1)):key===event.BACKSPACE?(before=value.substring(0,selection.start-1),after=value.substring(selection.start)):key===event.DELETE&&(before=value.substring(0,selection.start),after=value.substring(selection.start+1)),void 0!==before&&void 0!==after?before+after:value},_getSelection:function(){var selectedTextArea=document.activeElement;return{value:selectedTextArea.value.substring(selectedTextArea.selectionStart,selectedTextArea.selectionEnd),start:selectedTextArea.selectionStart,end:selectedTextArea.selectionEnd}},_handleValidation:function(field,value){var valid;return(valid=void 0!==value?field.validateValue(value):field.isValid())!==field.previouslyValid&&(field.previouslyValid=valid,!0)}}),Ext.namespace("XDMoD"),XDMoD.ToolbarItem={DURATION_SELECTOR:1,EXPORT_MENU:2,PRINT_BUTTON:3,REPORT_CHECKBOX:4},XDMoD.ExportOption={CSV:0,XML:1,PNG:2,PNG_WITH_TITLE:3,PNG_SMALL:4,PNG_SMALL_WITH_TITLE:5,PNG_HD:6,PNG_HD_WITH_TITLE:7,PNG_POSTER:8,PNG_POSTER_WITH_TITLE:9,SVG:10,SVG_WITH_TITLE:11},XDMoD.PortalModule=Ext.extend(Ext.Panel,{usesToolbar:!1,toolbarItems:{durationSelector:!1,exportMenu:!1,printButton:!1,reportCheckbox:!1},customOrder:[XDMoD.ToolbarItem.DURATION_SELECTOR,XDMoD.ToolbarItem.EXPORT_MENU,XDMoD.ToolbarItem.PRINT_BUTTON,XDMoD.ToolbarItem.REPORT_CHECKBOX],initComponent:function(){var self=this;self.addEvents("duration_change","export_option_selected","print_clicked");var createExportMenu=function(config){var exportPanel=new CCR.xdmod.ui.ExportPanel({config:config,cancel_function:function(){exportDialog.hide()},export_function:function(parameters){XDMoD.TrackEvent(self.title,"Export Menu Used",Ext.encode(parameters),!0),self.fireEvent("export_option_selected",parameters),exportDialog.hide()}}),exportDialog=new Ext.Window({height:250,width:390,closable:!0,closeAction:"hide",modal:!0,title:"Export",layout:"fit",items:exportPanel}),exportButton=new Ext.Button({text:"Export",iconCls:"export",tooltip:"Export chart data",handler:function(b){exportDialog.show()}});return self.getExportMenu=function(){return exportButton},self.setImageExport=function(allowImgExport){exportPanel.allowImageExport.call(exportPanel,allowImgExport)},self.setExportDefaults=function(show_title){exportPanel.showTitleCheckbox.setValue(show_title),exportPanel.settings.show_title=show_title},exportButton},createPrintButton=function(){var printButton=new Ext.Button({text:"Print",iconCls:"print",tooltip:"Print chart",scope:this,handler:function(){XDMoD.TrackEvent(self.title,"Print Button Clicked"),self.fireEvent("print_clicked")}});return self.getPrintButton=function(){return printButton},printButton},createReportCheckbox=function(module_id){var reportCheckbox=new CCR.xdmod.ReportCheckbox({disabled:!1,hidden:!1,module:module_id});return reportCheckbox.on("toggled_checkbox",function(v){XDMoD.TrackEvent(self.title,"Clicked on Available For Report checkbox",v)}),self.getReportCheckbox=function(){return reportCheckbox},reportCheckbox},moduleConfig={layout:"border",frame:!1,border:!1};if(1==self.usesToolbar){moduleConfig.tbar=new Ext.Toolbar({items:[]});var tbItemIndex=0;for(tbItemIndex=0;tbItemIndex<self.customOrder.length;tbItemIndex++){var currentItem=self.customOrder[tbItemIndex],employSeparator=!0;switch(void 0!==currentItem.item&&(employSeparator=void 0===currentItem.separator||currentItem.separator,currentItem=currentItem.item),currentItem){case XDMoD.ToolbarItem.DURATION_SELECTOR:var durationConfig={};if(null!=self.toolbarItems.durationSelector&&null!=self.toolbarItems.durationSelector.enable&&(null!=self.toolbarItems.durationSelector.config&&(durationConfig=self.toolbarItems.durationSelector.config),self.toolbarItems.durationSelector=self.toolbarItems.durationSelector.enable),1==self.toolbarItems.durationSelector){var previousItems=[];moduleConfig.tbar.items.each(function(item){previousItems.push(item)}),0<previousItems.length&&employSeparator&&previousItems.push("-");var baseConfig={items:previousItems,handler:function(d){XDMoD.TrackEvent(self.title,"Timeframe updated",Ext.encode(d)),self.fireEvent("duration_change",d)}};Ext.apply(baseConfig,durationConfig);var durationToolbar=new CCR.xdmod.ui.DurationToolbar(baseConfig);self.getDurationSelector=function(){return durationToolbar},moduleConfig.tbar=durationToolbar}break;case XDMoD.ToolbarItem.EXPORT_MENU:var exportConfig=[];null!=self.toolbarItems.exportMenu&&null!=self.toolbarItems.exportMenu.enable&&(null!=self.toolbarItems.exportMenu.config&&(exportConfig=self.toolbarItems.exportMenu.config),self.toolbarItems.exportMenu=self.toolbarItems.exportMenu.enable),1==self.toolbarItems.exportMenu&&(1<moduleConfig.tbar.items.getCount()&&employSeparator&&moduleConfig.tbar.addItem("-"),moduleConfig.tbar.addItem(createExportMenu(exportConfig)));break;case XDMoD.ToolbarItem.PRINT_BUTTON:1==self.toolbarItems.printButton&&(1<moduleConfig.tbar.items.getCount()&&employSeparator&&moduleConfig.tbar.addItem("-"),moduleConfig.tbar.addItem(createPrintButton()));break;case XDMoD.ToolbarItem.REPORT_CHECKBOX:1==self.toolbarItems.reportCheckbox&&(1<moduleConfig.tbar.items.getCount()&&employSeparator&&moduleConfig.tbar.addItem("-"),moduleConfig.tbar.addItem(createReportCheckbox(self.module_id)));break;default:1<moduleConfig.tbar.items.getCount()&&employSeparator&&moduleConfig.tbar.addItem("-"),moduleConfig.tbar.addItem(currentItem)}}}Ext.apply(this,moduleConfig),XDMoD.PortalModule.superclass.initComponent.call(this)}}),XDMoD.Module.Summary=function(config){XDMoD.Module.Summary.superclass.constructor.call(this,config)},Ext.extend(XDMoD.Module.Summary,XDMoD.PortalModule,{module_id:"summary",usesToolbar:!0,toolbarItems:{durationSelector:!0},initComponent:function(){var self=this;this.public_user=CCR.xdmod.publicUser,self.on("role_selection_change",function(){self.reload()}),self.on("duration_change",function(){self.reload()}),self.on("resize",function(){self.reloadPortlets(self.summaryStore),self.portal.doLayout(),self.toolbar.doLayout()}),self.on("activate",self.checkForUpdates),this.summaryStore=new CCR.xdmod.CustomJsonStore({root:"data",totalProperty:"totalCount",autoDestroy:!0,autoLoad:!1,successProperty:"success",messageProperty:"message",fields:["job_count","active_person_count","active_pi_count","total_waitduration_hours","avg_waitduration_hours","total_cpu_hours","avg_cpu_hours","total_su","avg_su","min_processors","max_processors","avg_processors","total_wallduration_hours","avg_wallduration_hours","gateway_job_count","active_allocation_count","active_institution_count","charts"],proxy:new Ext.data.HttpProxy({method:"GET",url:"controllers/ui_data/summary3.php"})}),this.summaryStore.on("exception",function(dp,type,action,opt,response,arg){0==response.success&&(Ext.MessageBox.alert("Error",response.message||"Unknown Error",function(){CCR.xdmod.ui.Viewer.getViewer().el.unmask()}),"Session Expired"==response.message&&CCR.xdmod.ui.actionLogout.defer(1e3))},this),this.toolbar=new Ext.Toolbar({border:!1,cls:"xd-toolbar"}),this.portal=new Ext.ux.Portal({region:"center",border:!1,items:[]}),this.portalPanel=new Ext.Panel({tbar:this.toolbar,layout:"fit",region:"center",items:[this.portal]});var quickFilterButton=XDMoD.DataWarehouse.createQuickFilterButton(),quickFilterButtonStore=(this.quickFilterButton=quickFilterButton).quickFilterStore;quickFilterButtonStore.on("update",self.reload,self);var quickFilterToolbar=XDMoD.DataWarehouse.createQuickFilterToolbar(quickFilterButtonStore,{items:[quickFilterButton]});this.mainPanel=new Ext.Panel({header:!1,layout:"border",region:"center",title:"<h3>Summary</h3>",tbar:quickFilterToolbar,items:[this.portalPanel]}),Ext.apply(this,{items:[this.mainPanel]}),XDMoD.Module.Summary.superclass.initComponent.apply(this,arguments),this.mainPanel.on("afterrender",function(){var viewer=CCR.xdmod.ui.Viewer.getViewer();viewer.el&&viewer.el.mask("Loading..."),this.getDurationSelector().disable(),this.summaryStore.loadStartTime=(new Date).getTime(),this.reload(),this.summaryStore.on("load",this.updateUsageSummary,this)},this,{single:!0})},updateUsageSummary:function(store){if((viewer=CCR.xdmod.ui.Viewer.getViewer()).el&&viewer.el.mask("Loading..."),this.getDurationSelector().disable(),store.getCount()<=0)CCR.xdmod.ui.toastMessage("Load Data","No Results");else{var viewer,record=store.getAt(0),keyStyle={marginLeft:"4px",marginRight:"4px",fontSize:"11px",textAlign:"center"},valueStyle={marginLeft:"2px",marginRight:"2px",textAlign:"center",fontFamily:'arial,"Times New Roman",Times,serif',fontSize:"11px",letterSpacing:"0px"};this.toolbar.removeAll(),Ext.each([{title:"Activity",items:[{title:"Users",fieldName:"active_person_count",numberType:"int",numberFormat:"#,#"},{title:"PIs",fieldName:"active_pi_count",numberType:"int",numberFormat:"#,#"},{title:"Allocations",fieldName:"active_allocation_count",numberType:"int",numberFormat:"#,#"},{title:"Institutions",fieldName:"active_institution_count",numberType:"int",numberFormat:"#,#"}]},{title:"Jobs",items:[{title:"Total",fieldName:"job_count",numberType:"int",numberFormat:"#,#"},{title:"Gateway",fieldName:"gateway_job_count",numberType:"int",numberFormat:"#,#"}]},{title:"Service (XD SU)",items:[{title:"Total",fieldName:"total_su",numberType:"float",numberFormat:"#,#.0"},{title:"Avg (Per Job)",fieldName:"avg_su",numberType:"float",numberFormat:"#,#.00"}]},{title:"CPU Time (h)",items:[{title:"Total",fieldName:"total_cpu_hours",numberType:"float",numberFormat:"#,#.0"},{title:"Avg (Per Job)",fieldName:"avg_cpu_hours",numberType:"float",numberFormat:"#,#.00"}]},{title:"Wait Time (h)",items:[{title:"Avg (Per Job)",fieldName:"avg_waitduration_hours",numberType:"float",numberFormat:"#,#.00"}]},{title:"Wall Time (h)",items:[{title:"Total",fieldName:"total_wallduration_hours",numberType:"float",numberFormat:"#,#.0"},{title:"Avg (Per Job)",fieldName:"avg_wallduration_hours",numberType:"float",numberFormat:"#,#.00"}]},{title:"Processors",items:[{title:"Max",fieldName:"max_processors",numberType:"int",numberFormat:"#,#"},{title:"Avg (Per Job)",fieldName:"avg_processors",numberType:"int",numberFormat:"#,#"}]}],function(itemGroup){var itemTitles=[],items=[];Ext.each(itemGroup.items,function(item){var itemNumber,itemData=record.get(item.fieldName);itemData&&("int"===item.numberType?itemNumber=parseInt(itemData,10):"float"===item.numberType&&(itemNumber=parseFloat(itemData)),itemTitles.push({xtype:"tbtext",text:item.title+":",style:keyStyle}),items.push({xtype:"tbtext",text:itemNumber.numberFormat(item.numberFormat),style:valueStyle}))}),0<items.length&&this.toolbar.add({xtype:"buttongroup",columns:items.length,title:itemGroup.title,items:itemTitles.concat(items)})},this),this.reloadPortlets(store),this.portal.doLayout(),this.toolbar.doLayout(),(viewer=CCR.xdmod.ui.Viewer.getViewer()).el&&viewer.el.unmask(),this.getDurationSelector().enable();var loadTime=((new Date).getTime()-store.loadStartTime)/1e3;CCR.xdmod.ui.toastMessage("Load Data","Complete in "+loadTime+"s")}},checkForUpdates:function(){CCR.xdmod.ui.metricExplorer&&!0===CCR.xdmod.ui.metricExplorer.summaryDirty&&(CCR.xdmod.ui.metricExplorer.summaryDirty=!1,this.reload())},reload:function(){if(this.getDurationSelector().validate()){var viewer=CCR.xdmod.ui.Viewer.getViewer();viewer.el&&viewer.el.mask("Processing Query..."),this.getDurationSelector().disable();var startDate=this.getDurationSelector().getStartDate().format("Y-m-d"),endDate=this.getDurationSelector().getEndDate().format("Y-m-d"),aggregationUnit=this.getDurationSelector().getAggregationUnit(),timeframeLabel=this.getDurationSelector().getDurationLabel(),filters={data:[],total:0};this.quickFilterButton.quickFilterStore.each(function(quickFilterRecord){quickFilterRecord.get("checked")&&(filters.data.push({dimension_id:quickFilterRecord.get("dimensionId"),value_id:quickFilterRecord.get("valueId"),value_name:quickFilterRecord.get("valueName")}),filters.total++)}),Ext.apply(this.summaryStore.baseParams,{start_date:startDate,end_date:endDate,aggregation_unit:aggregationUnit,timeframe_label:timeframeLabel,filters:Ext.encode(filters),public_user:this.public_user}),this.summaryStore.loadStartTime=(new Date).getTime(),this.summaryStore.removeAll(!0),this.summaryStore.load()}},reloadPortlets:function(store){if(!(store.getCount()<=0)){this.portal.removeAll(!0);var portletWidth=580,portalWidth=this.portal.getWidth(),portalColumns=[];portalColumnsCount=Math.max(1,Math.round(portalWidth/portletWidth)),portletWidth=(portalWidth-25)/portalColumnsCount;for(var i=0;i<portalColumnsCount;i++){var portalColumn=new Ext.ux.PortalColumn({width:portletWidth,style:"padding:1px 1px 1px 1px"});portalColumns.push(portalColumn),this.portal.add(portalColumn)}var charts=Ext.util.JSON.decode(store.getAt(0).get("charts")),getTrackingConfig=function(panel_ref){return{title:truncateText(panel_ref.title),index:truncateText(panel_ref.config.index),start_date:panel_ref.config.start_date,end_date:panel_ref.config.end_date,timeframe_label:panel_ref.config.timeframe_label}};for(i=0;i<charts.length;i++){var config=charts[i];(config=Ext.util.JSON.decode(config)).start_date=this.getDurationSelector().getStartDate().format("Y-m-d"),config.end_date=this.getDurationSelector().getEndDate().format("Y-m-d"),config.aggregation_unit=this.getDurationSelector().getAggregationUnit(),config.timeframe_label=this.getDurationSelector().getDurationLabel(),config.font_size=2;var title=config.title;config.title="",this.quickFilterButton.quickFilterStore.each(function(quickFilterRecord){if(quickFilterRecord.get("checked")){var dimensionId=quickFilterRecord.get("dimensionId"),valueId=quickFilterRecord.get("valueId"),quickFilterId=dimensionId+"="+valueId,globalFilterExists=!1;Ext.each(config.global_filters.data,function(globalFilter){if(quickFilterId===globalFilter.id)return!(globalFilterExists=!0)}),globalFilterExists||(config.global_filters.data.push({id:quickFilterId,value_id:valueId,value_name:quickFilterRecord.get("valueName"),dimension_id:dimensionId,checked:!0}),config.global_filters.total++)}});var portlet=new Ext.ux.Portlet({config:config,index:i,title:60<title.length?title.substring(0,57)+"...":title,tools:[{id:"gear",hidden:this.public_user,qtip:"Edit in Metric Explorer",scope:this,handler:function(event,toolEl,panel,tc){var trackingConfig=getTrackingConfig(panel);XDMoD.TrackEvent("Summary","Clicked On Edit in Metric Explorer tool",Ext.encode(trackingConfig));var config=panel.config;config.font_size=3,config.title=panel.title,config.featured=!0,config.summary_index=(config.preset?"summary_":"")+config.index,XDMoD.Module.MetricExplorer.setConfig(config,config.summary_index,Boolean(config.preset))}},{id:"help"}],width:portletWidth,height:portletWidth*(11/17),layout:"fit",items:[],listeners:{collapse:function(panel){var trackingConfig=getTrackingConfig(panel);XDMoD.TrackEvent("Summary","Collapsed Chart Entry",Ext.encode(trackingConfig))},expand:function(panel){var trackingConfig=getTrackingConfig(panel);XDMoD.TrackEvent("Summary","Expanded Chart Entry",Ext.encode(trackingConfig))}}}),hcp=new CCR.xdmod.ui.HighChartPanel({credits:!1,chartOptions:{chart:{animation:!0===this.public_user},plotOptions:{series:{animation:!0===this.public_user}}},store:new CCR.xdmod.CustomJsonStore({portlet:portlet,listeners:{load:function(store){var dimensions=store.getAt(0).get("dimensions"),dims="";for(dimension in dimensions)dims+="<li><b>"+dimension+":</b> "+dimensions[dimension]+"</li>";var metrics=store.getAt(0).get("metrics"),mets="";for(metric in metrics)mets+="<li><b>"+metric+":</b> "+metrics[metric]+"</li>";var help=this.portlet.getTool("help");help&&help.dom&&(help.dom.qtip="<ul>"+dims+"</ul><hr/><ul>"+mets+"</ul>")},exception:function(thisProxy,type,action,options,response,arg){if("response"===type){var data=CCR.safelyDecodeJSONResponse(response)||{};if(data.code===XDMoD.Error.QueryUnavailableTimeAggregationUnit){var hcp=this.portlet.items.get(0),errorMessageExtraData="",errorData=data.errorData;if(errorData){var extraDataLines=[];errorData.realm&&extraDataLines.push("Realm: "+Ext.util.Format.htmlEncode(errorData.realm)),errorData.unit&&extraDataLines.push("Unavailable Unit: "+Ext.util.Format.capitalize(Ext.util.Format.htmlEncode(errorData.unit)));for(var i=0;i<extraDataLines.length;i++)0<i&&(errorMessageExtraData+="<br />"),errorMessageExtraData+=extraDataLines[i]}hcp.displayError("Data not available for the selected aggregation unit.",errorMessageExtraData)}}}},autoDestroy:!0,root:"data",autoLoad:!0,totalProperty:"totalCount",successProperty:"success",messageProperty:"message",fields:["chart","credits","title","subtitle","xAxis","yAxis","tooltip","legend","series","dimensions","metrics","plotOptions","reportGeneratorMeta"],baseParams:{operation:"get_data",showContextMenu:!1,config:Ext.util.JSON.encode(config),format:"hc_jsonstore",public_user:this.public_user,aggregation_unit:this.getDurationSelector().getAggregationUnit(),width:portletWidth,height:portletWidth*(11/17)},proxy:new Ext.data.HttpProxy({method:"POST",url:"controllers/metric_explorer.php"})})});portlet.add(hcp),portalColumns[i%portalColumnsCount].add(portlet)}}}}),XDMoD.Module.Usage=function(config){XDMoD.Module.Usage.superclass.constructor.call(this,config)},Ext.apply(XDMoD.Module.Usage,{selectChildChart:function(nodeId,layoutId){var tree=Ext.getCmp("tree_"+layoutId);if(tree){var node=tree.getSelectionModel().getSelectedNode();if(node){var viewer=CCR.xdmod.ui.Viewer.getViewer();viewer.el&&viewer.el.mask("Loading..."),tree.expandPath(node.getPath(),null,function(success,node){if(success){var nodeToSelect=node.findChild("id",nodeId,!0);if(nodeToSelect){if(node.attributes.chartSettings){var newNodeToSelectSettings=node.attributes.chartSettings;if(nodeToSelect.attributes.chartSettings){var nodeSettings=Ext.decode(node.attributes.chartSettings),nodeToSelectSettings=Ext.decode(nodeToSelect.attributes.chartSettings);Ext.isObject(nodeSettings)&&Ext.isObject(nodeToSelectSettings)&&(nodeSettings.limit=nodeToSelectSettings.limit,newNodeToSelectSettings=Ext.encode(nodeSettings))}nodeToSelect.attributes.chartSettings=newNodeToSelectSettings}node.attributes.filter&&(nodeToSelect.attributes.filter=node.attributes.filter,nodeToSelect.attributes.filterText=node.attributes.filterText),tree.getSelectionModel().select(nodeToSelect)}else viewer.el&&viewer.el.unmask()}else viewer.el&&viewer.el.unmask()})}}},drillChart:function(point,drillDowns,groupByNameAndUnit,groupById,groupByValue,value,queryGroupname,realmName){var tree=Ext.getCmp("tree_tg_usage");if(tree){var node=tree.getSelectionModel().getSelectedNode();if(node&&!(groupByNameAndUnit.length<2)){var groupByName=groupByNameAndUnit[0],groupByUnit=groupByNameAndUnit[1];XDMoD.TrackEvent("Usage","Clicked on chart to access drill-down menu",Ext.encode({"x-axis":point.ts?Highcharts.dateFormat("%Y-%m-%d",point.ts):point.series.data[point.x].category,"y-axis":point.y,label:"none"==groupByName?"":groupByUnit+"="+groupByValue})),new CCR.xdmod.ui.DrillDownMenu({realm:realmName,drillDownGroupBys:drillDowns,handler:function(drillDown){var drillDownGroupByName=drillDown[0],drillDownGroupByLabel=drillDown[1];XDMoD.TrackEvent("Usage","Clicked on drill-down menu item",drillDownGroupByLabel);var viewer=CCR.xdmod.ui.Viewer.getViewer();viewer.el&&viewer.el.mask("Loading..."),node.leaf=!1;var drillNode,nodeToSelect,drillNodeText="by "+drillDownGroupByLabel,nodeUIDetails=[groupByUnit+": "+groupByValue],nodeTextAndDetails=drillNodeText+" "+groupByUnit+": "+groupByValue,existingDrillNode=node.findChild("textanddetails",nodeTextAndDetails);if(null!=existingDrillNode)nodeToSelect=drillNode=existingDrillNode;else{var text=drillNodeText,parameters={drilldowns:{}},nodeParameters=node.attributes.parameters;Ext.isObject(nodeParameters)&&(Ext.applyIf(parameters,nodeParameters),Ext.isObject(nodeParameters.drilldowns)&&Ext.apply(parameters.drilldowns,nodeParameters.drilldowns)),parameters[groupByName]=groupById,"none"!==groupByName&&(parameters.drilldowns[groupByName]={groupBy:groupById,groupByName:groupByName,groupByValue:groupByValue}),drillNode=new Ext.tree.TreeNode({text:text,id:"statistic_"+realmName+"_"+groupByName+"_"+node.attributes.statistic+"_"+Math.random(),statistic:node.attributes.statistic,realm:realmName,group_by:drillDownGroupByName,query_group:queryGroupname,node_type:"statistic",iconCls:"drill",parameters:parameters,leaf:!0,uiProvider:Ext.ux.tree.MultilineTreeNodeUI,details:nodeUIDetails,textanddetails:nodeTextAndDetails,chartSettings:node.attributes.chartSettings,defaultChartSettings:node.attributes.defaultChartSettings}),nodeToSelect=node.appendChild(drillNode)}tree.expandPath(node.getPath(),null,function(success,node){success?tree.getSelectionModel().select(nodeToSelect):viewer.el&&viewer.el.unmask()})},node:node,valueParam:value,groupByIdParam:groupById,queryGroupname:"tg",label:"none"==groupByName?null:groupByUnit+"="+groupByValue}).showAt(Ext.EventObject.getXY())}}},selectStatistic:function(queryGroupname,permittedStats){var tree=Ext.getCmp("tree_tg_usage");if(tree){var node=tree.getSelectionModel().getSelectedNode();if(node){var items=[];items.push('<b class="menu-title">Jump to metric:</b><br/>');for(var groupbyNode=node,lastStatisticNode=node,newNodes=[];groupbyNode.parentNode&&"group_by"!=groupbyNode.parentNode.attributes.node_type;){groupbyNode=(lastStatisticNode=groupbyNode).parentNode;var newParentNode=new Ext.tree.TreeNode(Ext.apply({},lastStatisticNode.attributes));newParentNode.id=lastStatisticNode.id+Math.random(),newParentNode.leaf=!1,newParentNode.expanded=!0,newNodes.unshift(newParentNode)}var stats=permittedStats.split(",");if(groupbyNode.parentNode.eachChild(function(n){n!=groupbyNode&&0<stats.indexOf(n.attributes.statistic)&&items.push(new Ext.menu.Item({scope:this,text:n.text,iconCls:"chart",handler:function(b,e){for(var i=0;i<newNodes.length;i++){var newNode=newNodes[i],existingDrillNode=n.findChild("textanddetails",newNode.attributes.textanddetails);n=null!=existingDrillNode?(tree.expandPath(existingDrillNode.getPath(),null,function(success,nn){}),existingDrillNode):(newNode.attributes.statistic=n.attributes.statistic,n.appendChild(newNode),n.leaf=!1,tree.expandPath(newNode.getPath(),null,function(success,nn){}),newNode)}n.attributes.chartSettings=node.attributes.chartSettings,tree.getSelectionModel().select(n)}}))},this),1<items.length)new Ext.menu.Menu({showSeparator:!1,items:items}).showAt(Ext.EventObject.getXY())}}}}),Ext.extend(XDMoD.Module.Usage,XDMoD.PortalModule,{border:!0,region:"center",module_id:"user_interface",usesToolbar:!0,toolbarItems:{durationSelector:!0,exportMenu:!0,reportCheckbox:!0,printButton:!0},myUsage:!1,treeDataURL:"controllers/user_interface.php",chartDataURL:"controllers/user_interface.php",chartDataFields:["hc_jsonstore","chart_url","chart_map","type","id","description","group_description","title","params_title","start_date","end_date","subnotes","date_description","chart_args","included_in_report","random_id","show_title","short_title","filter_options","reportGeneratorMeta","realm","group_by","aggregation_unit","statistic","format","chart_settings","scale","width","height","final_width","final_height","sort_type","query_group"],legend_type:"bottom_center",font_size:3,swap_xy:!1,timeseries:!0,initComponent:function(){var handleDataException,self=this,public_user=this.public_user||CCR.xdmod.publicUser;this.realmTemplate=["<b>test</b>"],this.largeTemplate=['<tpl for=".">',"<center>",'<div id="{random_id}">',"</div>","</center>","</tpl>"],this.thumbTemplate=['<tpl for=".">','<div class="chart_thumb-wrap2" id="{id}">','<div class="chart_thumb">','<span class="chart_thumb_subtitle">{short_title}<br>{params_title}</span>',"<a href=\"javascript:XDMoD.Module.Usage.selectChildChart('{id}', '"+this.id+"');\">",'<div id="{random_id}">',"</div>","</a>","</div>","</div>","</tpl>"];var commentsTemplate=new Ext.XTemplate('<table class="xd-table">',"<tr>",'<td width="100%">','<span class="comments_subnotes">{subnotes}</span>',"</td>","</tr>","<tr>",'<td width="100%">','<span class="comments_description">{comments}</span>',"</td>","</tr>","</table>"),layoutId=(this.myUsage,this.id),chartScale=1,chartThumbScale=CCR.xdmod.ui.thumbChartScale,chartWidth=740,chartHeight=345;this.hiddenCharts=[],this.reloadingForRescale=!1;var tree,updateDisabledMenus=function(dontLoad){var selectedNode=tree.getSelectionModel().getSelectedNode(),selectFirst=!1;if(tree.getRootNode().cascade(function(n){for(var matchkey,disableNode=!1,i=0;i<CCR.xdmod.ui.disabledMenus.length&&!disableNode;i++)matchkey=CCR.xdmod.ui.disabledMenus[i].category?"category":"realm",disableNode=n.attributes.group_by===CCR.xdmod.ui.disabledMenus[i].group_by&&n.attributes[matchkey]===CCR.xdmod.ui.disabledMenus[i][matchkey];n.leaf=disableNode?(selectFirst=n.isSelected()||selectFirst||selectedNode&&n.contains(selectedNode),n.wasExpanded=n.isExpanded(),n.collapse(!1),n.disable(),n.wasNotLeaf=!n.leaf,!0):(n.enable(),n.wasExpanded&&(n.expand(!1),n.wasExpanded=!1),n.wasNotLeaf&&n.childNodes==[])},this),selectFirst){var root=tree.getRootNode();if(root.hasChildNodes()){var child=root.findChildBy(function(n){return!n.disabled},this);child&&tree.getSelectionModel().select(child)}}else null==dontLoad&&reloadChartStore.call(this)};var treeTb=new Ext.Toolbar({items:["->",{iconCls:"icon-collapse-all",tooltip:"Collapse all tree nodes",handler:function(){XDMoD.TrackEvent("Usage","Clicked on Collapse all tool above tree panel"),tree.root.collapse(!0)},scope:this},{iconCls:"refresh",tooltip:"Refresh tree and clear drilldown nodes",handler:function(){XDMoD.TrackEvent("Usage","Clicked on Refresh tool above tree panel"),function(){var selModel=tree.getSelectionModel(),selNode=selModel.getSelectedNode();selNode&&selModel.unselect(selNode,!0),tree.root.removeAll(!0),delete tree.loader.baseParams.category,delete tree.loader.baseParams.group_by,tree.loader.on("load",selectFirstNode,this,{single:!0}),tree.loader.load(tree.root)}()},scope:this}]}),treeLoader=new Ext.tree.TreeLoader({dataUrl:this.treeDataURL,baseParams:{operation:"get_menus",public_user:public_user},listeners:{beforeload:{fn:function(treeLoader,node){treeLoader.baseParams.query_group="tg_usage",node.attributes.category&&(treeLoader.baseParams.category=node.attributes.category),node.attributes.group_by&&(treeLoader.baseParams.group_by=node.attributes.group_by)},scope:this},load:{fn:function(treeLoader,node,response){var resp=Ext.decode(response.responseText);resp.message&&"Session Expired"==resp.message&&(Ext.MessageBox.alert("Error",resp.message),CCR.xdmod.ui.actionLogout.defer(1e3))},scope:this}}});tree=new Ext.tree.TreePanel({id:"tree_"+this.id,useArrows:!0,autoScroll:!0,animate:!1,enableDD:!1,loader:treeLoader,root:{nodeType:"async",draggable:!1,id:"category_",filter:!1},rootVisible:!1,tbar:treeTb,region:"center",width:325,split:!0,containerScroll:!0,margins:"0 0 0 0",border:!1,listeners:{expandnode:function(n){XDMoD.TrackEvent("Usage","Expanded item in tree panel",n.getPath("text"))},collapsenode:function(n){XDMoD.TrackEvent("Usage","Collapsed item in tree panel",n.getPath("text"))}}});new Ext.Panel({region:"north",height:30,autoScroll:!1,border:!1});this.chartTitleField=new Ext.form.TextField({fieldLabel:"Title",name:"title",emptyText:"Chart Title",validationDelay:1e3,enableKeyEvents:!0,listeners:{scope:this,change:function(t,n,o){var selectedNode=tree.getSelectionModel().getSelectedNode();n!=o&&selectedNode.attributes.title!=n&&(XDMoD.TrackEvent("Usage","Updated title",t.getValue()),selectedNode.attributes.title=n,reloadChartStore.call(this,999))},specialkey:function(t,e){var selectedNode=tree.getSelectionModel().getSelectedNode();t.isValid(!1)&&e.getKey()==e.ENTER&&selectedNode.attributes.title!==t.getValue()&&(XDMoD.TrackEvent("Usage","Updated title",t.getValue()),selectedNode.attributes.title=t.getValue(),reloadChartStore.call(this,999))}}}),this.legendTypeComboBox=new Ext.form.ComboBox({fieldLabel:"Legend",name:"legend_type",xtype:"combo",mode:"local",editable:!1,store:new Ext.data.ArrayStore({id:0,fields:["id","text"],data:[["top_center","Top Center"],["bottom_center","Bottom Center"],["left_center","Left"],["left_top","Top Left"],["left_bottom","Bottom Left"],["right_center","Right"],["right_top","Top Right"],["right_bottom","Bottom Right"],["floating_top_center","Floating Top Center"],["floating_bottom_center","Floating Bottom Center"],["floating_left_center","Floating Left"],["floating_left_top","Floating Top Left"],["floating_left_bottom","Floating Bottom Left"],["floating_right_center","Floating Right"],["floating_right_top","Floating Top Right"],["floating_right_bottom","Floating Bottom Right"],["off","Off"]]}),disabled:!1,value:this.legend_type,valueField:"id",displayField:"text",triggerAction:"all",listeners:{scope:this,select:function(combo,record,index){XDMoD.TrackEvent("Usage","Updated legend placement",Ext.encode({legend_type:record.get("id")})),this.legend_type=record.get("id"),reloadChartStore.call(this,999)}}}),this.fontSizeSlider=new Ext.slider.SingleSlider({fieldLabel:"Font Size",name:"font_size",minValue:-5,maxValue:10,value:this.font_size,increment:1,plugins:new Ext.slider.Tip,listeners:{scope:this,change:function(t,n,o){XDMoD.TrackEvent("Usage","Used the font size slider",Ext.encode({font_size:t.getValue()})),this.font_size=t.getValue(),reloadChartStore.call(this,999)}}}),this.chartSwapXYField=new Ext.form.Checkbox({fieldLabel:"Invert Axis",name:"swap_xy",boxLabel:"Swap the X and Y axis",checked:this.swap_xy,listeners:{scope:this,check:function(checkbox,check){this.swap_xy=check,reloadChartStore.call(this,999)}}});var leftPanel=new Ext.Panel({title:"Metrics and Options",split:!0,collapsible:!0,width:375,layout:"border",region:"west",margins:"2 0 2 2",border:!0,items:[{xtype:"form",layout:"fit",region:"north",height:90,border:!1,items:[{xtype:"fieldset",header:!1,layout:"form",hideLabels:!1,border:!1,defaults:{anchor:"0"},items:[this.chartTitleField,this.legendTypeComboBox,this.fontSizeSlider]}]},tree],plugins:new Ext.ux.collapsedPanelTitlePlugin});function selectFirstNode(){if(updateDisabledMenus.call(this,!0),null==tree.getSelectionModel().getSelectedNode()){var root=tree.getRootNode();if(root.hasChildNodes()){var child=root.findChildBy(function(n){return!n.disabled},this);child&&tree.expandPath(child.getPath(),null,function(success){if(success){var defaultStatistic=CCR.xdmod.features.xsede?"total_su":"total_cpu_hours",jobCountNode=child.findChild("statistic",defaultStatistic);if(jobCountNode&&!jobCountNode.disabled)return void tree.getSelectionModel().select(jobCountNode);var firstAvailableStatisticNode=child.findChildBy(function(n){return!n.disabled});if(firstAvailableStatisticNode)return void tree.getSelectionModel().select(firstAvailableStatisticNode)}tree.getSelectionModel().select(child)})}}}tree.loader.on("load",selectFirstNode,this,{buffer:500,single:!0}),tree.on("expandnode",function(node){"group_by"==node.attributes.node_type&&(node.attributes.chartSettings&&node.eachChild(function(n){var newNodeSettings=node.attributes.chartSettings;if(n.attributes.chartSettings){var nodeSettings=Ext.decode(node.attributes.chartSettings),nSettings=Ext.decode(n.attributes.chartSettings);Ext.isObject(nodeSettings)&&Ext.isObject(nSettings)&&(nodeSettings.limit=nSettings.limit,newNodeSettings=Ext.encode(nodeSettings))}return n.attributes.chartSettings=newNodeSettings,!0},this),node.attributes.filter&&node.eachChild(function(n){return n.attributes.filter=node.attributes.filter,n.attributes.filterText=node.attributes.filterText,!0},this))},this);var THIS=this;function addQuickFiltersToParameters(parameters){THIS.quickFilterButton.quickFilterStore.each(function(quickFilterRecord){if(quickFilterRecord.get("checked")){var filterParameterKey=quickFilterRecord.get("dimensionId")+"_filter",valueId=quickFilterRecord.get("valueId");parameters[filterParameterKey]=filterParameterKey in parameters?parameters[filterParameterKey]+","+valueId:valueId}})}function getChartParameters(n){var newStartDate=self.getDurationSelector().getStartDate().format("Y-m-d"),newEndDate=self.getDurationSelector().getEndDate().format("Y-m-d"),aggregationUnit=self.getDurationSelector().getAggregationUnit(),chartSettings=JSON.decode?JSON.decode(n.attributes.chartSettings):JSON.parse?JSON.parse(n.attributes.chartSettings):{};function boolean_to_char(value){return void 0!==value&&"boolean"==typeof value?value?"y":"n":value}var parameters={public_user:public_user,realm:n.attributes.realm,group_by:n.attributes.group_by,statistic:n.attributes.statistic,start_date:newStartDate,end_date:newEndDate,timeframe_label:self.getDurationSelector().getDurationLabel(),scale:1,aggregation_unit:aggregationUnit,dataset_type:chartToolbar.getDatasetType(),thumbnail:"n",query_group:"tg_usage",display_type:chartSettings.display_type,combine_type:chartSettings.combine_type,limit:chartSettings.limit,offset:chartSettings.offset,log_scale:boolean_to_char(chartSettings.log_scale),show_guide_lines:boolean_to_char(chartSettings.show_guide_lines),show_trend_line:boolean_to_char(chartSettings.show_trend_line),show_error_bars:boolean_to_char(chartSettings.show_error_bars),show_aggregate_labels:boolean_to_char(chartSettings.show_aggregate_labels),show_error_labels:boolean_to_char(chartSettings.show_error_labels),hide_tooltip:chartToolbar.getHideTooltip(),show_title:"y",width:chartWidth*chartScale,height:chartHeight*chartScale,legend_type:THIS.legendTypeComboBox.getValue(),font_size:THIS.fontSizeSlider.getValue()};if(n.attributes.title&&(parameters.title=n.attributes.title),n.attributes.filter&&(parameters[n.attributes.group_by+"_filter"]=n.attributes.filter),null!=n.attributes.parameters)for(i in n.attributes.parameters)parameters[i]=n.attributes.parameters[i];return addQuickFiltersToParameters(parameters),parameters}function getMenuParameters(n){var newStartDate=self.getDurationSelector().getStartDate().format("Y-m-d"),newEndDate=self.getDurationSelector().getEndDate().format("Y-m-d"),aggregationUnit=self.getDurationSelector().getAggregationUnit(),parameters={public_user:public_user,realm:n.attributes.realm,group_by:n.attributes.group_by,start_date:newStartDate,end_date:newEndDate,timeframe_label:self.getDurationSelector().getDurationLabel(),aggregation_unit:aggregationUnit,width:CCR.xdmod.ui.thumbWidth*chartThumbScale,height:CCR.xdmod.ui.thumbHeight*chartThumbScale,scale:1,dataset_type:chartToolbar.getDatasetType(),thumbnail:"y",query_group:"tg_usage",display_type:chartToolbar.getDisplayType(),combine_type:chartToolbar.getDataCombineMethod(),limit:chartToolbar.getLimit(),offset:chartToolbar.getOffset(),log_scale:chartToolbar.getLogScale(),show_guide_lines:chartToolbar.getShowGuideLines(),show_trend_line:chartToolbar.getShowTrendLine(),show_error_bars:chartToolbar.getShowErrorBars(),show_aggregate_labels:chartToolbar.getShowAggregateLabels(),show_error_labels:chartToolbar.getShowErrorLabels(),hide_tooltip:chartToolbar.getHideTooltip(),format:"session_variable",legend_type:"off",font_size:THIS.fontSizeSlider.getValue()-3,show_title:"n"};return n.attributes.filter&&(parameters[n.attributes.group_by+"_filter"]=n.attributes.filter),addQuickFiltersToParameters(parameters),parameters}function onSelectNode(model,n){var parameters;if(n&&n.text&&self.getDurationSelector().validate())if(Ext.History.un("change",onHistoryChange),Ext.History.add(layoutId+"?node="+n.id,!0),Ext.History.on("change",onHistoryChange),chartStore.loadStartTime=(new Date).getTime(),images.setTitle(n.getPath("text")),(viewer=CCR.xdmod.ui.Viewer.getViewer()).el&&viewer.el.mask("Loading..."),self.getDurationSelector().disable(),chartToolbar.disable(),n.attributes.chartSettings?chartToolbar.fromJSON(n.attributes.chartSettings):chartToolbar.resetValues(),this.chartTitleField.setValue(n.attributes.title?n.attributes.title:""),"datasheet"==chartToolbar.getDisplayType()){if("realm"==n.attributes.node_type)return(viewer=CCR.xdmod.ui.Viewer.getViewer()).el&&viewer.el.unmask(),self.getDurationSelector().enable(),void chartToolbar.enable();if(viewPanel.getLayout().setActiveItem(1),this.reloadingForRescale)return;var tool,restoreTool=images.getTool("restore");restoreTool&&restoreTool.hide(),(tool=images.getTool("maximize"))&&tool.hide(),(tool=images.getTool("plus"))&&tool.hide(),(tool=images.getTool("minus"))&&tool.hide(),(tool=images.getTool("gear"))&&tool.hide(),this.fontSizeSlider.disable(),this.legendTypeComboBox.disable(),parameters=[],"statistic"==n.attributes.node_type?parameters=getChartParameters(n):"group_by"==n.attributes.node_type&&(parameters=getMenuParameters(n)),parameters.format="jsonstore",parameters.operation="get_data",viewGrid.store.proxy.setUrl("controllers/user_interface.php",!0),viewGrid.store.load({params:parameters}),viewGrid.store.on("load",function(store){var viewer;if(store.getCount()<=0)return(viewer=CCR.xdmod.ui.Viewer.getViewer()).el&&viewer.el.unmask(),void viewer.el.unmask();updateDescription(store.reader.jsonData.message,store.reader.jsonData.subnotes),store.reader.jsonData.restrictedByRoles&&images.setTitle(images.title+' <span style="font-weight: normal; font-style: italic;">*This data may be restricted by your current permissions.</span>'),(viewer=CCR.xdmod.ui.Viewer.getViewer()).el&&viewer.el.unmask(),self.getDurationSelector().enable(),chartToolbar.enable(),self.setImageExport(!1),1!=public_user&&self.getReportCheckbox().hide()},this,{single:!0})}else if(viewPanel.getLayout().setActiveItem(0),this.fontSizeSlider.enable(),"realm"==n.attributes.node_type){var viewer;view.tpl=largeRealmTemplate,view.refresh(),self.getDurationSelector().enable(),chartToolbar.disable(),this.legendTypeComboBox.disable(),this.chartTitleField.disable(),(viewer=CCR.xdmod.ui.Viewer.getViewer()).el&&viewer.el.unmask();var loadTime=((new Date).getTime()-chartStore.loadStartTime)/1e3;CCR.xdmod.ui.toastMessage("Load Menu","Complete in "+loadTime+"s")}else"statistic"==n.attributes.node_type?(view.tpl=largeChartTemplate,parameters=getChartParameters(n),this.legendTypeComboBox.enable(),this.chartTitleField.enable(),parameters.interactive_elements="y",chartStore.removeAll(!0),XDMoD.TrackEvent("Usage","Selected Statistic Via Tree",n.getPath("text")),parameters.operation="get_charts",chartStore.load({params:parameters})):"group_by"==n.attributes.node_type&&(view.tpl=thumbnailChartTemplate,parameters=getMenuParameters(n),chartStore.removeAll(!0),maximizeScale.call(this),this.legendTypeComboBox.disable(),this.chartTitleField.disable(),parameters.summary=!0,parameters.operation="get_charts",chartStore.load({params:parameters}),chartStore.on("load",function(chartStore){if(chartStore.getCount()<=0)return(viewer=CCR.xdmod.ui.Viewer.getViewer()).el&&viewer.el.unmask(),void viewer.el.unmask();var legend="<ul>";legend+="<li>"+chartStore.getAt(0).get("group_description")+"</li>";for(var i=0;i<chartStore.getCount();i++)legend+="<li>"+chartStore.getAt(i).get("description")+"</li>";updateDescription(legend+="</ul>",chartStore.getAt(0).get("subnotes"));var viewer,chartSettings=Ext.util.JSON.decode(chartStore.getAt(0).get("chart_settings").replace(/`/g,'"'));for(var setting in n.attributes.chartSettings=chartStore.getAt(0).get("chart_settings").replace(/`/g,'"'),chartSettings)chartSettings.hasOwnProperty(setting)&&"boolean"==typeof chartSettings[setting]&&(chartSettings[setting]=chartSettings[setting]?"y":"n");n.attributes.defaultChartSettings||(n.attributes.defaultChartSettings=chartSettings),chartToolbar.fromJSON(n.attributes.chartSettings),XDMoD.TrackEvent("Usage","Selected Chart Category Via Tree",n.getPath("text")),(viewer=CCR.xdmod.ui.Viewer.getViewer()).el&&viewer.el.unmask(),deleteExistingCharts(),this.charts=[];var menuParams=getMenuParameters(n);chartStore.each(function(r){var id=r.get("random_id"),chartContainer=Ext.get(id);if(chartContainer){chartContainer.setWidth(CCR.xdmod.ui.thumbWidth*chartThumbScale),chartContainer.setHeight(CCR.xdmod.ui.thumbHeight*chartThumbScale),chartContainer.mask("Loading...");var chart_params=Ext.apply({},Ext.util.JSON.decode(r.get("chart_settings")),menuParams);new Ext.data.JsonStore({autoDestroy:!0,root:"data",totalProperty:"totalCount",successProperty:"success",messageProperty:"message",fields:self.chartDataFields,baseParams:{operation:"get_charts",public_user:public_user,controller_module:self.module_id},proxy:new Ext.data.HttpProxy({method:"POST",url:this.chartDataURL}),listeners:{exception:function(reader,type,action,opt,response){handleDataException(response,type)}}}).load({params:chart_params,callback:function(chartRecords,options,success){if(Ext.get(id)&&success){var baseChartOptions={chart:{renderTo:id,width:CCR.xdmod.ui.thumbWidth*chartThumbScale,height:CCR.xdmod.ui.thumbHeight*chartThumbScale,animation:!1,events:{load:function(e){0==this.series.length&&this.renderer.image("gui/images/report_thumbnail_no_data.png",0,0,this.chartWidth,this.chartHeight).add()}}},plotOptions:{series:{animation:!1}},loading:{labelStyle:{top:"45%"}},exporting:{enabled:!1},credits:{enabled:!0}},chartOptions={};0<chartRecords.length&&(chartOptions=chartRecords[0].get("hc_jsonstore")),jQuery.extend(!0,chartOptions,baseChartOptions),chartOptions.exporting.enabled=!1,chartOptions.credits.enabled=!1,this.charts.push(new Highcharts.Chart(chartOptions))}},scope:self})}},this),self.getDurationSelector().enable(),chartToolbar.enable();var tool,restoreTool=images.getTool("restore");restoreTool&&restoreTool.show(),(tool=images.getTool("maximize"))&&tool.hide(),(tool=images.getTool("plus"))&&tool.show(),(tool=images.getTool("minus"))&&tool.show(),(tool=images.getTool("gear"))&&tool.hide(),self.setImageExport(!1),1!=public_user&&self.getReportCheckbox().hide();var loadTime=((new Date).getTime()-chartStore.loadStartTime)/1e3;CCR.xdmod.ui.toastMessage("Load Menu","Complete in "+loadTime+"s"),this.reloadingForRescale=!1},this,{single:!0}))}var deleteExistingCharts=function(){this.chart&&(this.chart.destroy(),delete this.chart),this.charts&&(Ext.each(this.charts,function(chart){chart.destroy()}),delete this.charts)};handleDataException=function(response,exceptionType){var viewer=CCR.xdmod.ui.Viewer.getViewer();if("response"===exceptionType){var data=CCR.safelyDecodeJSONResponse(response)||{};if(data.code===XDMoD.Error.QueryUnavailableTimeAggregationUnit){viewer&&viewer.el&&viewer.el.unmask();var durationToolbar=self.getDurationSelector();durationToolbar.setAggregationUnit("Auto"),durationToolbar.onHandle();var errorMessage="The selected aggregation unit is not available for all selected metrics.<br />The aggregation unit has been reset to auto.",errorData=data.errorData;if(errorData){var errorMessageExtraData="";errorData.realm&&(errorMessageExtraData+="<br />Realm: "+Ext.util.Format.htmlEncode(errorData.realm)),errorData.unit&&(errorMessageExtraData+="<br />Unavailable Unit: "+Ext.util.Format.capitalize(Ext.util.Format.htmlEncode(errorData.unit))),errorMessageExtraData&&(errorMessage+="<br />"+errorMessageExtraData)}return void Ext.MessageBox.alert("Usage",errorMessage)}}CCR.xdmod.ui.presentFailureResponse(response),viewer&&viewer.el&&viewer.el.unmask()};var thumbnailChartTemplate=new Ext.XTemplate(this.thumbTemplate),largeChartTemplate=new Ext.XTemplate(this.largeTemplate),largeRealmTemplate=new Ext.XTemplate(this.realmTemplate),chartStore=new Ext.data.JsonStore({updaters:[],storeId:"chart_store_"+this.id,autoDestroy:!1,root:"data",totalProperty:"totalCount",successProperty:"success",messageProperty:"message",fields:this.chartDataFields,baseParams:{operation:"get_charts",public_user:public_user,controller_module:self.module_id},proxy:new Ext.data.HttpProxy({method:"POST",url:this.chartDataURL})});chartStore.on("exception",function(dp,type,action,opt,response,arg){handleDataException(response,type)},this),chartStore.on("load",function(chartStore){var tool=images.getTool("refresh");tool&&tool.show(),(tool=images.getTool("plus"))&&tool.show(),(tool=images.getTool("minus"))&&tool.show(),(tool=images.getTool("print"))&&tool.show(),(tool=images.getTool("gear"))&&CCR.xdmod.ui.metricExplorer&&tool.show(),(tool=images.getTool("restore"))&&tool.show(),(tool=images.getTool("maximize"))&&tool.show()},chartStore,{single:!0}),chartStore.on("clear",function(chartStore){var tool=images.getTool("refresh");tool&&tool.hide(),(tool=images.getTool("plus"))&&tool.hide(),(tool=images.getTool("minus"))&&tool.hide(),(tool=images.getTool("print"))&&tool.hide(),(tool=images.getTool("gear"))&&tool.hide(),(tool=images.getTool("restore"))&&tool.hide()},chartStore,{single:!0});var view=new Ext.DataView({id:"view_chart_"+this.id,title:"Chart",loadingText:"Loading...",itemSelector:"div.single-chart-container",style:"overflow:auto",multiSelect:!0,store:chartStore,autoScroll:!0,tpl:largeChartTemplate});1!=public_user&&(view.on("click",resetDropStyling),view.on("afterrender",function(){new ImageDragZone(view,{ddGroup:"singleChartDD"})}));var viewGrid=new Ext.ux.DynamicGridPanel({id:"view_grid_"+this.id,storeUrl:this.chartDataURL,autoScroll:!0,rowNumberer:!0});viewGrid.store.on("exception",function(dataProxy,type,action,options,response,arg){handleDataException(response,type)},this);var descriptionPanel=new Ext.Panel({region:"south",autoScroll:!0,collapsible:!0,split:!0,border:!0,title:"Description",height:120,plugins:[new Ext.ux.collapsedPanelTitlePlugin]});function updateDescription(comments,subNotes){commentsTemplate.overwrite(descriptionPanel.body,{comments:comments,subnotes:subNotes})}self.on("export_option_selected",function(opts){var selectedNode=tree.getSelectionModel().getSelectedNode();if(null!=selectedNode){var parameters={};"statistic"==selectedNode.attributes.node_type?parameters=getChartParameters(selectedNode):"group_by"==selectedNode.attributes.node_type&&(parameters=getMenuParameters(selectedNode)),Ext.apply(parameters,opts),parameters.operation="get_data",CCR.invokePost("controllers/user_interface.php",parameters)}});var chartToolbar=new CCR.xdmod.ui.ChartToolbar({id:"chart_toolbar_"+layoutId,handler:reloadChartFunc,resetFunction:function(){var selectedNode=tree.getSelectionModel().getSelectedNode();selectedNode.attributes.chartSettings=selectedNode.attributes.defaultChartSettings,tree.getSelectionModel().unselect(selectedNode,!0),tree.getSelectionModel().select(selectedNode)},listeners:{chart_limit_field_updated:function(newValue){XDMoD.TrackEvent("Usage","Updated dataset limit",newValue)}}});function maximizeScale(){chartWidth=view.getWidth(),chartHeight=view.getHeight()-(images.tbar?images.tbar.getHeight():0);var node=tree.getSelectionModel().getSelectedNode();null!=node&&"statistic"==node.attributes.node_type&&(this.reloadingForRescale=!0)}function reloadChartFunc(chartSettingsObject){var node=tree.getSelectionModel().getSelectedNode();null!=node&&(chartSettingsObject&&(node.attributes.chartSettings=chartSettingsObject),"group_by"==node.attributes.node_type&&(node.eachChild(function(n){return n.attributes.chartSettings=node.attributes.chartSettings||void 0,!0},this),node.eachChild(function(n){return n.attributes.filter=node.attributes.filter||void 0,n.attributes.filterText=node.attributes.filterText||void 0,!0},this)),tree.getSelectionModel().unselect(node,!0),tree.getSelectionModel().select(node))}var reloadChartTask=new Ext.util.DelayedTask(reloadChartFunc,this),reloadChartStore=function(delay){reloadChartTask.delay(delay||0)},viewGridPanel=new Ext.Panel({layout:"fit",items:viewGrid}),viewPanel=new Ext.Panel({frame:!1,border:!0,layout:"card",activeItem:0,region:"center",items:[view,viewGridPanel]});self.on("duration_change",function(d){reloadChartStore()});new Ext.Panel({width:220,collapsed:!0,collapsible:!0,collapseMode:"mini",hideCollapseTool:!0,region:"east",split:!0,margins:"0 0 0 1",autoScroll:!0});var images=new Ext.Panel({title:"Viewer",region:"center",margins:"2 1 2 0",layout:"border",scope:this,items:[viewPanel,descriptionPanel],tools:[{id:"maximize",qtip:"Resize Chart To Fit",hidden:!0,scope:this,handler:function(){var model=tree.getSelectionModel(),node=model.getSelectedNode();null!=node&&("statistic"==node.attributes.node_type&&maximizeScale.call(this),onSelectNode.call(this,model,node))}},{id:"restore",qtip:"Restore Chart Size",hidden:!0,scope:this,handler:function(){XDMoD.TrackEvent("Usage","Clicked on the Restore Chart Size tool");var model=tree.getSelectionModel(),node=model.getSelectedNode();null!=node&&("statistic"==node.attributes.node_type?chartScale=1:"group_by"==node.attributes.node_type&&(chartThumbScale=CCR.xdmod.ui.thumbChartScale),this.reloadingForRescale=!0,onSelectNode.call(this,model,node))}},{id:"minus",qtip:"Reduce Chart Size",hidden:!0,scope:this,handler:function(){XDMoD.TrackEvent("Usage","Clicked on the Reduce Chart Size tool");var model=tree.getSelectionModel(),node=model.getSelectedNode();null!=node&&"group_by"==node.attributes.node_type&&chartThumbScale-CCR.xdmod.ui.deltaThumbChartScale>CCR.xdmod.ui.minChartScale&&(chartThumbScale-=CCR.xdmod.ui.deltaThumbChartScale,this.reloadingForRescale=!0,onSelectNode.call(this,model,node))}},{id:"plus",qtip:"Increase Chart Size",hidden:!0,scope:this,handler:function(){XDMoD.TrackEvent("Usage","Clicked on the Increase Chart Size tool");var model=tree.getSelectionModel(),node=model.getSelectedNode();null!=node&&"group_by"==node.attributes.node_type&&chartThumbScale+CCR.xdmod.ui.deltaThumbChartScale<CCR.xdmod.ui.maxChartScale&&(chartThumbScale+=CCR.xdmod.ui.deltaThumbChartScale,this.reloadingForRescale=!0,onSelectNode.call(this,model,node))}},{id:"gear",qtip:"Configure in Metric Explorer",hidden:!0,scope:this,handler:function(){XDMoD.TrackEvent("Usage","Clicked on the Configure in Metric Explorer tool");var n=tree.getSelectionModel().getSelectedNode();if(n){var dt=chartToolbar.getDisplayType(),ct=chartToolbar.getDataCombineMethod(),config={timeseries:"timeseries"==chartToolbar.getDatasetType(),title:chartStore.getAt(0).get("title"),legend_type:this.legendTypeComboBox.getValue(),font_size:this.fontSizeSlider.getValue(),show_filters:!0,show_warnings:!0,show_remainder:!0,swap_xy:"h_bar"==dt,hide_tooltip:chartToolbar.getHideTooltip(),data_series:{data:[{id:Math.random(),metric:n.attributes.statistic,realm:n.attributes.realm,group_by:n.attributes.group_by,x_axis:!1,log_scale:"y"==chartToolbar.getLogScale(),has_std_err:"y",std_err:"y"==chartToolbar.getShowErrorBars(),std_err_labels:"y"==chartToolbar.getShowErrorLabels(),value_labels:"y"==chartToolbar.getShowAggregateLabels()||"pie"==dt,trend_line:"y"==chartToolbar.getShowTrendLine(),display_type:"bar"==dt||"h_bar"==dt||"auto"==dt?"column":dt,combine_type:"side"==ct||"auto"==ct?"side":"percentage"==ct?"percent":"stack",sort_type:chartStore.getAt(0).get("sort_type"),filters:{data:[],total:0},ignore_global:!1,long_legend:!0}],total:1},aggregation_unit:self.getDurationSelector().getAggregationUnit(),global_filters:{data:[],total:0},timeframe_label:self.getDurationSelector().getDurationLabel(),start_date:self.getDurationSelector().getStartDate().format("Y-m-d"),end_date:self.getDurationSelector().getEndDate().format("Y-m-d"),start:chartToolbar.getOffset(),limit:chartToolbar.getLimit()};if(n.attributes.filter)for(var filters=n.attributes.filter.split(","),i=0;i<filters.length;i++)config.global_filters.data.push({id:n.attributes.group_by+"="+filters[i],value_id:filters[i],value_name:n.attributes.filterText[i],dimension_id:n.attributes.group_by,realms:[n.attributes.realm],checked:!0}),config.global_filters.total++;if(n.attributes.parameters&&n.attributes.parameters.drilldowns)for(var i in n.attributes.parameters.drilldowns)config.global_filters.data.push({id:n.attributes.parameters.drilldowns[i].groupByName+"="+n.attributes.parameters.drilldowns[i].groupBy,value_id:n.attributes.parameters.drilldowns[i].groupBy,value_name:n.attributes.parameters.drilldowns[i].groupByValue,dimension_id:n.attributes.parameters.drilldowns[i].groupByName,realms:[n.attributes.realm],checked:!0}),config.global_filters.total++;this.quickFilterButton.quickFilterStore.each(function(quickFilterRecord){if(quickFilterRecord.get("checked")){var dimensionId=quickFilterRecord.get("dimensionId"),valueId=quickFilterRecord.get("valueId"),quickFilterId=dimensionId+"="+valueId,globalFilterExists=!1;Ext.each(config.global_filters.data,function(globalFilter){if(quickFilterId===globalFilter.id)return!(globalFilterExists=!0)}),globalFilterExists||(config.global_filters.data.push({id:quickFilterId,value_id:valueId,value_name:quickFilterRecord.get("valueName"),dimension_id:dimensionId,checked:!0}),config.global_filters.total++)}}),XDMoD.Module.MetricExplorer.setConfig(config,"Usage:"+config.title)}}}]});self.on("print_clicked",function(){if(XDMoD.TrackEvent("Usage","Clicked on the Print tool"),viewPanel.getLayout().activeItem==view){var selectedNode=tree.getSelectionModel().getSelectedNode();if(null!=selectedNode)if("group_by"==selectedNode.attributes.node_type)Ext.ux.Printer.print(view);else{var parameters=getChartParameters(selectedNode);parameters.operation="get_data",parameters.scale=1,parameters.inline="y",parameters.format="png",parameters.width=1514,parameters.height=800;var params="";for(i in parameters)params+=i+"="+parameters[i]+"&";params=params.substring(0,params.length-1),Ext.ux.Printer.print({getXTypes:function(){return"html"},html:'<img src="/controllers/user_interface.php?'+params+'" />'})}}else viewPanel.getLayout().activeItem==viewGridPanel&&Ext.ux.Printer.print(viewGrid)});var onHistoryChange=function(token){if(token){var parts=CCR.tokenize(document.location.hash),tab=CCR.exists(parts.tab)?parts.tab:layoutId,params=CCR.exists(parts.params)?parts.params.split("&"):null;if(params){var node=function(params,layout){if(null!==params)for(var i=0;i<params.length;i++){var param=params[i].split("=");if(param&&0<param.length&&param[0]===layout)return param[1]}return null}(params,"node"),treePanel=Ext.getCmp("tree_"+tab),nodeToSelect=treePanel?treePanel.getNodeById(node):null;nodeToSelect&&(Ext.menu.MenuMgr.hideAll(),treePanel.getSelectionModel().select(nodeToSelect))}}},btnFilter=new Ext.Button({iconCls:"filter",text:"Filter",tooltip:"Filter chart data",performEnabledCheck:function(){var disabled=!1;"none"===tree.getSelectionModel().getSelectedNode().attributes.group_by&&(disabled=!0),this.setDisabled(disabled)},handler:function(){XDMoD.TrackEvent("Usage","Clicked on the Filter menu");var activeFilters,activeFilterNames,selectedNode=tree.getSelectionModel().getSelectedNode(),selectedGroupBy=selectedNode.attributes.group_by,selectedGroupByLabel=selectedNode.attributes.group_by_label||selectedNode.attributes.description||selectedNode.attributes.text.slice(3),selectedRealm=selectedNode.attributes.realm,activeFiltersString=selectedNode.attributes.filter;activeFilterNames=Ext.isEmpty(activeFiltersString)?(activeFilters=[],[]):(activeFilters=activeFiltersString.split(","),selectedNode.attributes.filterText);var filterStore=XDMoD.DataWarehouse.createFilterStore(),filterRecords=[];Ext.each(activeFilters,function(activeFilter,activeFilterIndex){filterRecords.push({id:selectedGroupBy+"="+activeFilter,dimension_id:selectedGroupBy,realms:[selectedRealm],value_id:activeFilter,value_name:activeFilterNames[activeFilterIndex],checked:!0})}),filterStore.loadData({data:filterRecords,total:filterRecords.length});var updateFiltersTask=new Ext.util.DelayedTask(function(store){var selectedNode=tree.getSelectionModel().getSelectedNode(),filters=[],filterNames=[];store.each(function(record){record.get("checked")&&(filters.push(record.get("value_id")),filterNames.push(record.get("value_name")))}),Ext.isEmpty(filters)?(delete selectedNode.attributes.filter,delete selectedNode.attributes.filterText):(selectedNode.attributes.filter=filters.join(","),selectedNode.attributes.filterText=filterNames),reloadChartStore(selectedNode.attributes.chartSettings||null)}),updateFiltersListener=function(store){updateFiltersTask.delay(0,null,null,[store])};filterStore.on("add",updateFiltersListener),filterStore.on("load",updateFiltersListener),filterStore.on("remove",updateFiltersListener),filterStore.on("update",updateFiltersListener);var addFilterWindow=XDMoD.DataWarehouse.createAddFilterWindow(selectedGroupBy,selectedGroupByLabel,[selectedRealm],filterStore,"Usage","");addFilterWindow.setPosition(0,0),addFilterWindow.show()}});tree.getSelectionModel().on("selectionchange",function(model,node){btnFilter.performEnabledCheck()}),chartToolbar.chartConfigButton.menu.on("paramchange",function(paramName,paramValue){XDMoD.TrackEvent("Usage","Display Menu Item Selected",Ext.encode({name:paramName,value:paramValue}))},this);var quickFilterButton=XDMoD.DataWarehouse.createQuickFilterButton(),quickFilterButtonStore=(this.quickFilterButton=quickFilterButton).quickFilterStore;quickFilterButtonStore.on("update",reloadChartStore,this);var tbItems=[XDMoD.ToolbarItem.DURATION_SELECTOR,btnFilter,chartToolbar.chartConfigButton,"Top ",{item:chartToolbar.limitField,separator:!1},XDMoD.ToolbarItem.EXPORT_MENU,XDMoD.ToolbarItem.PRINT_BUTTON];1!=public_user&&tbItems.push(XDMoD.ToolbarItem.REPORT_CHECKBOX);var quickFilterToolbar=XDMoD.DataWarehouse.createQuickFilterToolbar(quickFilterButtonStore,{items:[quickFilterButton]});Ext.apply(this,{customOrder:tbItems,items:[new Ext.Panel({layout:"border",region:"center",tbar:quickFilterToolbar,items:[leftPanel,images]})]}),view.on("resize",function(t,adjWidth,adjHeight,rawWidth,rawHeight){maximizeScale.call(this),this.chart&&this.chart.setSize(adjWidth,adjHeight)},this),view.on("afterrender",function(){var viewer=CCR.xdmod.ui.Viewer.getViewer();viewer.el&&viewer.el.mask("Loading...");CCR.xdmod.ui.thumbAspect;var thumbWidth=CCR.xdmod.ui.thumbWidth*chartThumbScale,portalWidth=view.getWidth()-(CCR.xdmod.ui.scrollBarWidth-CCR.xdmod.ui.thumbPadding/2);portalColumnsCount=Math.max(1,Math.round(portalWidth/thumbWidth)),thumbWidth=portalWidth/portalColumnsCount,thumbWidth-=CCR.xdmod.ui.thumbPadding,chartThumbScale=thumbWidth/(chartThumbScale*CCR.xdmod.ui.thumbWidth),self.getDurationSelector().disable(),chartToolbar.disable(),tree.getSelectionModel().on("selectionchange",onSelectNode,this),chartStore.on("load",function(chartStore){if(1!=chartStore.getCount())return(viewer=CCR.xdmod.ui.Viewer.getViewer()).el&&viewer.el.unmask(),void viewer.el.unmask();var n=tree.getSelectionModel().getSelectedNode();if("statistic"==n.attributes.node_type){1!=public_user&&self.getReportCheckbox().storeChartArguments(chartStore.getAt(0).get("chart_args"),chartStore.getAt(0).get("title"),chartStore.getAt(0).get("params_title"),chartStore.getAt(0).get("start_date"),chartStore.getAt(0).get("end_date"),chartStore.getAt(0).get("reportGeneratorMeta").included_in_report);var legend="<ul>";legend+="<li>"+chartStore.getAt(0).get("group_description")+"</li>";for(var i=0;i<chartStore.getCount();i++)legend+="<li>"+chartStore.getAt(i).get("description")+"</li>";updateDescription(legend+="</ul>",chartStore.getAt(0).get("subnotes")),XDMoD.TrackEvent("Usage","Loaded Chart","Chart: "+chartStore.getAt(0).get("title")+", Params: "+chartStore.getAt(0).get("params_title"));var viewer,chartSettings=Ext.util.JSON.decode(chartStore.getAt(0).get("chart_settings").replace(/`/g,'"'));n.attributes.chartSettings=chartStore.getAt(0).get("chart_settings").replace(/`/g,'"'),n.attributes.defaultChartSettings||(n.attributes.defaultChartSettings=chartSettings),chartToolbar.fromJSON(n.attributes.chartSettings),self.setImageExport(!0),1!=public_user&&self.getReportCheckbox().show(),(viewer=CCR.xdmod.ui.Viewer.getViewer()).el&&viewer.el.unmask(),deleteExistingCharts();var tool;chartStore.each(function(r){var id=r.get("random_id");return new Ext.util.DelayedTask(function(){if(Ext.get(id)){var baseChartOptions={chart:{renderTo:id,width:chartWidth*chartScale,height:chartHeight*chartScale,animation:!1},loading:{labelStyle:{top:"45%"}},exporting:{enabled:!1},credits:{enabled:!0},plotOptions:{series:{events:{click:function(evt){var drillId,label,drillInfo=evt.point.series.userOptions.drilldown;drillInfo&&(label=evt.point.drilldown?(drillId=evt.point.drilldown.id,evt.point.drilldown.label):(evt.point.ts=evt.point.x,drillId=drillInfo.id,drillInfo.label),XDMoD.Module.Usage.drillChart(evt.point,drillInfo.drilldowns,drillInfo.groupUnit,drillId,label,"none","tg_usage",drillInfo.realm))}}}}},chartOptions=r.get("hc_jsonstore");jQuery.extend(!0,chartOptions,baseChartOptions),chartOptions.exporting.enabled=!1,chartOptions.credits.enabled=!0;var extraChartHandlers={loadHandlers:[],redrawHandlers:[]};extraChartHandlers.loadHandlers.push(function(){this.checkSeries=function(){0===this.series.length&&(this.placeholder_element&&this.placeholder_element.destroy(),this.placeholder_element=this.renderer.image("gui/images/report_thumbnail_no_data.png",(this.chartWidth-400)/2,(this.chartHeight-300)/2,400,300).add())},this.checkSeries()}),extraChartHandlers.redrawHandlers.push(function(){this.checkSeries&&this.checkSeries()}),this.chart=XDMoD.utils.createChart(chartOptions,extraChartHandlers)}},this).delay(0),!0},this),self.getDurationSelector().enable(),chartToolbar.enable(),(tool=images.getTool("maximize"))&&tool.hide(),(tool=images.getTool("restore"))&&tool.hide(),(tool=images.getTool("plus"))&&tool.hide(),(tool=images.getTool("minus"))&&tool.hide(),(tool=images.getTool("gear"))&&CCR.xdmod.ui.metricExplorer&&tool.show();var loadTime=((new Date).getTime()-chartStore.loadStartTime)/1e3;CCR.xdmod.ui.toastMessage("Load Chart","Complete in "+loadTime+"s"),this.reloadingForRescale=!1}},this)},this,{single:!0}),XDMoD.Module.Usage.superclass.initComponent.apply(this,arguments)}}),Ext.namespace("XDMoD"),XDMoD.Module.ReportGenerator=Ext.extend(XDMoD.PortalModule,{module_id:"report_generator",title:"Report Generator",chartPoolStore:null,listeners:{beforerender:function(panel){panel.initialize(panel)}},initialize:function(panel){var reportManager=new XDMoD.ReportManager({region:"center"}),chartPool=new XDMoD.AvailableCharts({region:"east",split:!0,width:460,minSize:460,maxSize:460});this.chartPoolStore=chartPool.reportStore,panel.add(reportManager),panel.add(chartPool)}}),XDMoD.Module.About=Ext.extend(XDMoD.PortalModule,{title:"About",module_id:"about_xdmod",initComponent:function(){var basePath="#main_tab_panel:"+this.module_id+"?",lastViewed="XDMoD",contentPanel=new Ext.Panel({region:"center",preventBodyReset:!0,autoScroll:!0,bodyCssClass:"xdmod-aboutus"}),treeNodeClick=function(node){Ext.History.add(basePath+encodeURIComponent(node.text))},westPanel={region:"west",xtype:"treepanel",id:"treepanel",root:{expanded:!0,children:[{text:"XDMoD",icon:"/gui/images/info.png",leaf:!0,listeners:{click:treeNodeClick}},{text:"Open XDMoD",icon:"/gui/images/info.png",leaf:!0,listeners:{click:treeNodeClick}},{text:"SUPReMM",icon:"/gui/images/info.png",leaf:!0,listeners:{click:treeNodeClick}},{text:"Roadmap",icon:"/gui/images/lorry.png",leaf:!0,listeners:{click:treeNodeClick}},{text:"Team",icon:"/gui/images/person.png",leaf:!0,listeners:{click:treeNodeClick}},{text:"Publications",icon:"/gui/images/user_manual_16.png",leaf:!0,listeners:{click:treeNodeClick}},{text:"Presentations",icon:"/gui/images/user_manual_16.png",leaf:!0,listeners:{click:treeNodeClick}},{text:"Links",icon:"/gui/images/arrow_right.png",leaf:!0,listeners:{click:treeNodeClick}},{text:"Release Notes",icon:"/gui/images/user_manual_16.png",leaf:!0,listeners:{click:treeNodeClick}}]},split:!0,rootVisible:!1,collapsible:!0,height:500,width:200,useArrows:!0},mainArea=new Ext.Panel({layout:"border",region:"center",items:[westPanel,contentPanel]});this.addListener("activate",function(){var item=decodeURIComponent(CCR.tokenize(Ext.History.getToken()).params),items={XDMoD:"/about/xdmod.php","Open XDMoD":"/about/openxd.html",SUPReMM:"/about/supremm.html",Roadmap:"/about/roadmap.php",Team:"/about/team.html",Publications:"/about/publications.html",Presentations:"/about/presentations.html",Links:"/about/links.html","Release Notes":"/about/release_notes/"+(CCR.xdmod.features.xsede?"xsede.html":"xdmod.html")};item&&items[item]||(item=lastViewed),Ext.Ajax.request({url:items[item],success:function(response){contentPanel.body.update(response.responseText),lastViewed=item;var treeNode=Ext.getCmp("treepanel").getRootNode().findChild("text",item);treeNode&&treeNode.select()}})}),Ext.apply(this,{items:[mainArea]}),XDMoD.Module.About.superclass.initComponent.apply(this,arguments)}}),XDMoD.Module.MetricExplorer=function(config){XDMoD.Module.MetricExplorer.superclass.constructor.call(this,config)},Ext.apply(XDMoD.Module.MetricExplorer,{CHART_OPTIONS_MAX_TEXT_LENGTH:17,delays:{long:1e3,medium:100,short:50,tiny:10},legend_types:[["top_center","Top Center"],["bottom_center","Bottom Center (Default)"],["left_center","Left"],["left_top","Top Left"],["left_bottom","Bottom Left"],["right_center","Right"],["right_top","Top Right"],["right_bottom","Bottom Right"],["floating_top_center","Floating Top Center"],["floating_bottom_center","Floating Bottom Center"],["floating_left_center","Floating Left"],["floating_left_top","Floating Top Left"],["floating_left_bottom","Floating Bottom Left"],["floating_right_center","Floating Right"],["floating_right_top","Floating Top Right"],["floating_right_bottom","Floating Bottom Right"],["off","Off"]],layer_types:[["send_backward","Send Backward"],["bring_forward","Bring Forward"],["send_to_back","Send to Back"],["bring_to_front","Bring to Front"]],realmsToCategories:{},dimensionsToRealms:{},setConfig:function(config,name,ensureNameIsUnique,instance){ensureNameIsUnique=!Ext.isDefined(ensureNameIsUnique)||ensureNameIsUnique,void 0===instance&&(instance=CCR.xdmod.ui.metricExplorer);var tabPanel=Ext.getCmp("main_tab_panel");instance.un("dwdesc_loaded",instance.dwdesc_loaded_handler,instance),instance.queriesStore.un("load",instance.queries_store_loaded_handler,instance),instance.un("afterrender",instance.loadAll),instance.rawDataShowing=!1,tabPanel.setActiveTab("metric_explorer"),instance.maximizeScale(),instance.on("dwdesc_loaded",function(){instance.queriesStore.on("load",function(){!function(){if(instance.mask("Loading..."),instance.reset(!1),ensureNameIsUnique){for(var uniqueName=name,uniqueNameSuffixNumber=0;-1!==instance.queriesStore.findExact("name",uniqueName);)uniqueName=name+" ("+ ++uniqueNameSuffixNumber+")";name=uniqueName}instance.createQueryFunc(null,null,name,config,!1,config,!0),instance.reloadChartFunc(),function(){this.on("afterrender",this.loadAll)}.apply(instance)}()},this,{single:!0}),this.queriesStore.load()},null,{single:!0}),instance.dwDescriptionStore.load()},chartContextMenu:function(event,newchart,instance){if(void 0===instance&&(instance=CCR.xdmod.ui.metricExplorer),!(event&&event.target&&(event.target.innerHTML&&"Reset zoom"===event.target.innerHTML||event.target.firstChild&&event.target.firstChild.data&&"Reset zoom"===event.target.firstChild.data))){var x,y;if(event&&event.xAxis&&event.yAxis&&event.xAxis[0]&&event.yAxis[0])x=event.xAxis[0].value,y=event.yAxis[0].value;else{var xy=Ext.EventObject.getXY();x=xy[0],y=xy[1]}XDMoD.TrackEvent("Metric Explorer","Clicked on chart to access chart context menu",Ext.encode({x:x,y:y}));for(var allLogScale,menu,randomNum=Math.random(),fontValue=instance.fontSizeSlider.getValue(),fontItems=[],c=instance.fontSizeSlider.minValue;c<=instance.fontSizeSlider.maxValue;c++)fontItems.push({text:c+" ",value:c,checked:fontValue==c,xtype:"menucheckitem",group:"font_size"+randomNum,handler:function(){instance.fontSizeSlider.setValue(this.value),instance.saveQuery()}});if(instance.datasetStore.each(function(record){allLogScale=(void 0===allLogScale||!0===allLogScale)&&record.get("log_scale")}),newchart)instance.menuRefs.newChart&&(instance.menuRefs.newChart.removeAll(!1),instance.menuRefs.newChart.destroy()),menu=new Ext.menu.Menu({id:"metric-explorer-new-chart-context-menu",scope:instance,showSeparator:!1,ignoreParentClicks:!0,items:['<span class="menu-title">Chart:</span><br/>',{text:"Add Data",iconCls:"add_data",menu:instance.metricsMenu},{text:"Add Filter",iconCls:"add_filter",menu:instance.filtersMenu}],listeners:{show:{fn:function(menu){menu.getEl().slideIn("t",{easing:"easeIn",duration:.2})}}}});else{instance.menuRefs.chartOptions&&(instance.menuRefs.chartOptions.remove("metric-explorer-chartoptions-add-data",!1),instance.menuRefs.chartOptions.remove("metric-explorer-chartoptions-add-filter",!1),instance.menuRefs.chartOptions.destroy());var isPie=instance.isPie();menu=new Ext.menu.Menu({id:"metric-explorer-chartoptions-context-menu",scope:instance,showSeparator:!1,ignoreParentClicks:!0,listeners:{show:{fn:function(menu){menu.getEl().slideIn("t",{easing:"easeIn",duration:.2})}}},items:['<span class="menu-title">Chart Options:</span><br/>',"-",{xtype:"menucheckitem",text:"Aggregate",checked:!instance.timeseries,disabled:isPie,group:"dataset_type"+randomNum,listeners:{checkchange:function(){instance.timeseries=!1,XDMoD.TrackEvent("Metric Explorer","Clicked on Aggregate option in chart context menu",Ext.encode({timeseries:instance.timeseries})),instance.datasetTypeRadioGroup.setValue(instance.timeseries?"timeseries_cb":"aggregate_cb",!0)}}},{xtype:"menucheckitem",text:"Timeseries",checked:instance.timeseries,disabled:isPie,group:"dataset_type"+randomNum,listeners:{checkchange:function(){instance.timeseries=!0,XDMoD.TrackEvent("Metric Explorer","Clicked on Timeseries option in chart context menu",Ext.encode({timeseries:instance.timeseries})),instance.datasetTypeRadioGroup.setValue(instance.timeseries?"timeseries_cb":"aggregate_cb",!0)}}},"-",{text:"Add Data",iconCls:"add_data",disabled:0<=instance._getDisplayTypes(!0).indexOf("pie"),id:"metric-explorer-chartoptions-add-data",menu:instance.metricsMenu},{text:"Add Filter",iconCls:"add_filter",id:"metric-explorer-chartoptions-add-filter",menu:instance.filtersMenu},{text:"Legend",iconCls:"legend_type",id:"metric-explorer-chartoptions-legend",menu:{id:"metric-explorer-chartoptions-legend-options",items:instance.legendMenu}},{text:"Font Size",iconCls:"font_size",menu:fontItems},{text:"Log Scale Chart",iconCls:"log_scale",xtype:"menucheckitem",checked:!0===allLogScale,disabled:isPie,listeners:{checkchange:function(t,check){instance.datasetStore.each(function(record){record.set("log_scale",check)})}}},{text:instance.chartSwapXYField.boxLabel,iconCls:"swap_xy",xtype:"menucheckitem",checked:instance.swap_xy,listeners:{checkchange:function(t,check){instance.chartSwapXYField.setValue(check)}}},{text:instance.shareYAxisField.boxLabel,iconCls:"share_y_axis",xtype:"menucheckitem",checked:instance.share_y_axis,listeners:{checkchange:function(t,check){instance.shareYAxisField.setValue(check)}}},{text:instance.hideTooltipField.boxLabel,iconCls:"hide_tooltip",xtype:"menucheckitem",checked:instance.hide_tooltip,listeners:{checkchange:function(t,check){instance.hideTooltipField.setValue(check)}}},{text:instance.chartShowSubtitleField.boxLabel,iconCls:"show_filters",xtype:"menucheckitem",checked:instance.show_filters,listeners:{checkchange:function(t,check){instance.chartShowSubtitleField.setValue(check)}}},"-",{text:instance.featuredCheckbox.boxLabel,iconCls:"featured",xtype:"menucheckitem",checked:instance.featured,listeners:{checkchange:function(t,check){instance.featuredCheckbox.setValue(check)}}}]})}newchart?instance.menuRefs.newChart=menu:instance.menuRefs.chartOptions=menu,menu.showAt(Ext.EventObject.getXY())}},pointContextMenu:function(point,datasetId,instance){void 0===instance&&(instance=CCR.xdmod.ui.metricExplorer),XDMoD.TrackEvent("Metric Explorer","Clicked on chart data point to access context menu",Ext.encode({"x-axis":point.ts?Highcharts.dateFormat("%Y-%m-%d",point.ts):point.series.data[point.x].category,"y-axis":point.y,series:point.series.name})),XDMoD.Module.MetricExplorer.seriesContextMenu(point.series,!1,datasetId,point,instance)},seriesContextMenu:function(series,legendItemClick,datasetId,point,instance){void 0===instance&&(instance=CCR.xdmod.ui.metricExplorer);var randomNum=Math.random(),record=instance.getDataset(datasetId);if(null!==record){XDMoD.TrackEvent("Metric Explorer","Clicked on chart data series to access context menu",Ext.encode({series:series?series.name:datasetId,legendItemClick:legendItemClick}));var drillLabel,realm=record.get("realm"),metric=record.get("metric"),dimension=record.get("group_by"),drillId=null;point&&point.options.isRemainder||series&&series.options.isRemainder||(point&&point.drilldown?(drillId=point.drilldown.id,drillLabel=point.drilldown.label):series&&series.options.drilldown&&(drillId=series.options.drilldown.id,drillLabel=series.options.drilldown.label));for(var isPie=instance.isPie(),drillFilter=function(){var realms=[];for(var r in instance.realms)if(instance.realms.hasOwnProperty(r)){var ds=instance.realms[r].dimensions;for(var dd in ds)dd!=dimension||realms.push(r)}return{id:dimension+"="+drillId,value_id:drillId,value_name:drillLabel,dimension_id:dimension,realms:realms,checked:!0}}(),sortItems=[],i=0;CCR.xdmod.ui.AddDataPanel.sort_types.length>i;i++)sortItems.push({group:"sort_types"+randomNum,text:CCR.xdmod.ui.AddDataPanel.sort_types[i][1],value:CCR.xdmod.ui.AddDataPanel.sort_types[i][0],checked:record.get("sort_type")===CCR.xdmod.ui.AddDataPanel.sort_types[i][0],xtype:"menucheckitem",handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Sort option in data series context menu",Ext.encode({datasetId:datasetId,sort_type:this.value})),record.set("sort_type",this.value)}});for(var displayItems=instance.getDisplayTypeItems(record.get("display_type"),"menucheckitem","display_types"+randomNum,function(b){XDMoD.TrackEvent("Metric Explorer","Clicked on Display option in data series context menu",Ext.encode({datasetId:record.id,display_type:b.value}));var current=record.get("display_type"),next=b.value;"pie"==current&&"pie"!==next&&(instance.defaultMetricDisplayType=next,instance.defaultMetricDisplayTypeField.setValue(next)),instance.validateChart([next])&&record.set("display_type",next)},this,{timeseries:instance.timeseries,aggregate:!instance.timeseries}),combineItems=[],q=0;CCR.xdmod.ui.AddDataPanel.combine_types.length>q;q++)combineItems.push({group:"combine_types"+randomNum,text:CCR.xdmod.ui.AddDataPanel.combine_types[q][1],value:CCR.xdmod.ui.AddDataPanel.combine_types[q][0],checked:record.get("combine_type")===CCR.xdmod.ui.AddDataPanel.combine_types[q][0],xtype:"menucheckitem",handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Stacking option in data series context menu",Ext.encode({datasetId:datasetId,combine_type:this.value})),record.set("combine_type",this.value)}});record.store.each(function(r){var z_index=r.get("z_index");null!==z_index&&""!==z_index&&void 0!==z_index||(z_index=r.store.indexOf(record),r.store.suspendEvents(),r.set("z_index",z_index),r.store.resumeEvents())},this);var minZIndex,maxZIndex,layerItems=[],z_index=record.get("z_index");record.store.each(function(r){if(r.id!==record.id){var z_index=r.get("z_index");(void 0===minZIndex||z_index<minZIndex)&&(minZIndex=z_index),(void 0===maxZIndex||maxZIndex<z_index)&&(maxZIndex=z_index)}},this);for(var g=0;XDMoD.Module.MetricExplorer.layer_types.length>g;g++){var disabled=!1;switch(XDMoD.Module.MetricExplorer.layer_types[g][0]){case"send_backward":case"send_to_back":disabled=void 0===minZIndex||z_index<minZIndex;break;case"bring_forward":case"bring_to_front":disabled=void 0===minZIndex||maxZIndex<z_index}layerItems.push({text:XDMoD.Module.MetricExplorer.layer_types[g][1],value:XDMoD.Module.MetricExplorer.layer_types[g][0],disabled:disabled,xtype:"menuitem",handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Layer option in data series context menu",Ext.encode({datasetId:datasetId,combine_type:this.value}));!function(value,record){var toZIndex;switch(value){case"send_backward":var maxZIndexLessThanZIndex;void 0!==minZIndex&&minZIndex<=z_index&&(record.store.each(function(r){var r_z_index=r.get("z_index");(void 0===maxZIndexLessThanZIndex||maxZIndexLessThanZIndex<r_z_index)&&r_z_index<z_index&&(maxZIndexLessThanZIndex=r_z_index)},this),replaceZIndex(toZIndex=void 0!==maxZIndexLessThanZIndex?maxZIndexLessThanZIndex:z_index-1,z_index,record),record.set("z_index",toZIndex));break;case"bring_forward":var minZIndexGreaterThanZIndex;void 0!==maxZIndex&&z_index<=maxZIndex&&(record.store.each(function(r){var r_z_index=r.get("z_index");(void 0===minZIndexGreaterThanZIndex||r_z_index<minZIndexGreaterThanZIndex)&&z_index<r_z_index&&(minZIndexGreaterThanZIndex=r_z_index)},this),replaceZIndex(toZIndex=void 0!==minZIndexGreaterThanZIndex?minZIndexGreaterThanZIndex:z_index+1,z_index,record),record.set("z_index",toZIndex));break;case"send_to_back":void 0!==minZIndex&&minZIndex<=z_index&&(toZIndex=minZIndex-1,record.set("z_index",toZIndex));break;case"bring_to_front":void 0!==maxZIndex&&z_index<=maxZIndex&&(toZIndex=maxZIndex+1,record.set("z_index",toZIndex))}}(this.value,record)}})}for(var widthItems=[],y=0;CCR.xdmod.ui.AddDataPanel.line_widths.length>y;y++)widthItems.push({group:"width_items"+randomNum,text:'<div class="line-width-item"><span><svg  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns="http://www.w3.org/2000/svg" version="1.1"  width="185" height="14"><g fill="none" stroke="black" stroke-width="'+CCR.xdmod.ui.AddDataPanel.line_widths[y][0]+'"><path stroke-dasharray="" d="M 0 6 l 180 0" /></g></svg>'+CCR.xdmod.ui.AddDataPanel.line_widths[y][1]+"</span></div>",value:CCR.xdmod.ui.AddDataPanel.line_widths[y][0],xtype:"menucheckitem",checked:record.get("line_width")===CCR.xdmod.ui.AddDataPanel.line_widths[y][0],handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Line Width option in data series context menu",Ext.encode({datasetId:datasetId,line_width:this.value})),record.set("line_width",this.value)}}),instance.lastLineWidth=CCR.exists(instance.lastLineWidth)?instance.lastLineWidth:record.get("line_width")===CCR.xdmod.ui.AddDataPanel.line_widths[i][0]?CCR.xdmod.ui.AddDataPanel.line_widths[i][0]:void 0;for(var colorIndex=CCR.xdmod.ui.colors[0].indexOf(record.get("color")),colorItems=new Ext.menu.ColorMenu({activeItem:-1<colorIndex?colorIndex:void 0,colors:CCR.xdmod.ui.colors[0],handler:function(cm,color){XDMoD.TrackEvent("Metric Explorer","Clicked on Color option in data series context menu",Ext.encode({datasetId:datasetId,color:color})),record.set("color",color)}}),lineTypeItems=[],z=0;CCR.xdmod.ui.AddDataPanel.line_types.length>z;z++)lineTypeItems.push({group:"line_type_items"+randomNum,text:'<div class="line-item"><span><svg  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns="http://www.w3.org/2000/svg" version="1.1"  width="185" height="14"><g fill="none" stroke="black" stroke-width="2"><path stroke-dasharray="'+CCR.xdmod.ui.AddDataPanel.line_types[z][2]+'" d="M 0 6 l 180 0" /></g></svg>'+CCR.xdmod.ui.AddDataPanel.line_types[z][1]+"</span></div>",value:CCR.xdmod.ui.AddDataPanel.line_types[z][0],xtype:"menucheckitem",checked:record.get("line_type")===CCR.xdmod.ui.AddDataPanel.line_types[z][0],handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Line Type option in data series context menu",Ext.encode({datasetId:datasetId,line_type:this.value})),record.set("line_type",this.value)}});var dimensions=instance.realms[realm].dimensions,drilldownItems=['<span class="menu-title">'+(dimensions[dimension].text!==drillLabel&&"none"!==dimension?"For "+dimensions[dimension].text+" = "+drillLabel+", ":"")+"Drilldown to:</span><br/>"];if(drillId&&drillLabel)for(var dim in dimensions)if(dimensions.hasOwnProperty(dim)){if(dim===dimension||"none"===dim)continue;drilldownItems.push({dim:dim,text:dimensions[dim].text,iconCls:"drill",handler:function(){if(instance.fireEvent("disable_commit"),dimensions[dimension].text!==drillLabel&&"none"!==dimension){var filter=drillFilter,datasetCount=instance.datasetStore.getCount();if(1===datasetCount)instance.filtersStore.add(new instance.filtersStore.recordType(filter));else if(1<datasetCount){for(var filters=jQuery.extend(!0,{},record.get("filters")),found=!1,i=0;i<filters.length;i++)if(filters[i].id==filter.id){found=!0;break}found||(filters.data.push(filter),filters.total++,record.set("filters",filters))}}record.set("group_by",this.dim),instance.fireEvent("enable_commit",!0)}})}var metricItems=[],metrics=instance.realms[realm].metrics;for(var met in metrics)if(metrics.hasOwnProperty(met)){if(metric===met)continue;metricItems.push({met:met,text:metrics[met].text,iconCls:"chart",handler:function(){record.set("metric",this.met)}})}var compareToItems=[];for(var thisMet in metrics)if(metrics.hasOwnProperty(thisMet)){if(metric===thisMet)continue;compareToItems.push({met:thisMet,text:metrics[thisMet].text,iconCls:"chart",handler:function(){var config={},defaultConfig={id:Math.random(),metric:this.met,color:"auto"};jQuery.extend(config,record.data),jQuery.extend(config,defaultConfig);var newRecord=CCR.xdmod.ui.AddDataPanel.initRecord(instance.datasetStore,config,null,instance.timeseries);instance.datasetStore.add(newRecord)}})}var dimensionItems=[];for(var thisDim in dimensions)if(dimensions.hasOwnProperty(thisDim)){if(thisDim===dimension)continue;dimensionItems.push({dim:thisDim,text:"none"==thisDim?"None":dimensions[thisDim].text,iconCls:"menu",handler:function(){record.set("group_by",this.dim)}})}var menu=new Ext.menu.Menu({showSeparator:!1,ignoreParentClicks:!0,items:['<span class="menu-title">Data Series: '+(series?truncateText(series.name,50):"")+"</span><br/>","-"],listeners:{show:{fn:function(menu){menu.getEl().slideIn("t",{easing:"easeIn",duration:.2})}}}});if(series){var visibility=Ext.apply({},record.get("visibility")),originalTitle=series.options.otitle;visibility||(visibility={});var visible=!0;void 0!==visibility[originalTitle]&&null!==visibility[originalTitle]&&(visible=visibility[originalTitle]),menu.addItem({text:"Show",xtype:"menucheckitem",checked:visible,listeners:{checkchange:function(t,check){XDMoD.TrackEvent("Metric Explorer","Clicked on Hide Series option in data series context menu",Ext.encode({checked:check})),series.setVisible(check),check?delete visibility[originalTitle]:visibility[originalTitle]=!1,record.set("visibility",visibility)}}}),menu.addItem("-")}if(drillId){if(CCR.xdmod.ui.jobViewer&&!1===legendItemClick){var raw_data_disabled=!0,raw_data_tooltip="Show raw data is only available for the following data realms: "+CCR.xdmod.ui.rawDataAllowedRealms.join(", ");-1!==CCR.xdmod.ui.rawDataAllowedRealms.indexOf(realm)&&(raw_data_tooltip="none"==dimension?(raw_data_disabled=!0,"Show raw data is only available for drilled-down datasets. <br />Select &quot;Drilldown&quot; below to refine the data."):(raw_data_disabled=!1,null));var store=Ext.StoreMgr.lookup("hchart_store_metric_explorer");menu.addItem({text:"Show raw data",iconCls:"dataset",disabled:raw_data_disabled,tooltip:raw_data_tooltip,handler:function(){var opts={format:"jsonstore",operation:"get_rawdata",inline:"n",datapoint:point.x,datasetId:datasetId,limit:20,start:0},parameters={};if(Ext.apply(parameters,store.baseParams),Ext.apply(parameters,opts),"none"!==dimension){var global_filters=JSON.parse(decodeURIComponent(parameters.global_filters)),filters=[drillFilter];if(global_filters&&CCR.isType(global_filters.data,CCR.Types.Array))for(var i=0;i<global_filters.data.length;i++){var global_filter=global_filters.data[i];global_filter.dimension_id&&global_filter.dimension_id!==drillFilter.dimension_id&&filters.push(global_filter)}parameters.global_filters=encodeURIComponent(JSON.stringify({data:filters}))}var rawDataStore=new Ext.data.JsonStore({storeId:"raw_data_store",proxy:new Ext.data.HttpProxy({method:"POST",url:"controllers/metric_explorer.php",listeners:{load:function(o,options){if(options.reader.jsonData&&options.reader.jsonData.totalAvailable){var jobstr=function(njobs){return njobs+(1==njobs?" job ":" jobs ")},infomsg=jobstr(options.reader.jsonData.totalAvailable)+"in the dataset.";options.reader.jsonData.totalCount!=options.reader.jsonData.totalAvailable&&(0==options.reader.jsonData.totalCount?infomsg+=" You do not have permission to view these jobs.":infomsg+=" Showing the "+jobstr(options.reader.jsonData.totalCount)+"that you have permission to view.");var topbar=instance.rawdataWindow.getTopToolbar();topbar.removeAll(),topbar.add({xtype:"label",text:infomsg,style:"font-weight:bold;"}),topbar.doLayout()}}}}),baseParams:parameters,autoLoad:!0,root:"data",idProperty:"jobid",totalProperty:"totalCount",fields:["resource","name","local_job_id","jobid"]}),rawDataGrid=new Ext.grid.GridPanel({id:"raw_data_grid",region:"center",store:rawDataStore,autoExpandColumn:"raw_data_username",loadMask:{msg:"Loading..."},colModel:new Ext.grid.ColumnModel({defaults:{width:60,sortable:!1,menuDisabled:!0},columns:[{id:"resource",dataIndex:"resource",header:"Resource",width:120},{id:"raw_data_username",dataIndex:"name",header:"User Name"},{id:"local_job_id",dataIndex:"local_job_id",header:"Job Id"}]}),listeners:{rowclick:function(grid,row_index){var record=grid.getStore().getAt(row_index),title=instance&&instance.chartTitleField&&instance.chartTitleField.getValue&&""!=instance.chartTitleField.getValue()?instance.chartTitleField.getValue():"metric_explorer",info={realm:realm,text:record.get("resource")+"-"+record.get("local_job_id"),local_job_id:record.get("local_job_id"),job_id:record.get("jobid"),title:title};instance.rawDataShowing=!0,instance.rawdataWindow.hide();var token="job_viewer?job="+window.btoa(JSON.stringify(info));Ext.History.add(token)}},bbar:new Ext.PagingToolbar({pageSize:20,displayInfo:!0,displayMsg:"Showing jobs {0} - {1} of {2}",emptyMsg:"No jobs to display",store:rawDataStore,listeners:{load:function(store,records,options){this.onLoad(store,records,options)}}})});instance.rawdataWindow=new Ext.Window({height:530,width:480,closable:!0,modal:!0,title:"Raw Data",layout:"fit",autoScroll:!0,items:new Ext.Panel({layout:"border",items:rawDataGrid}),tbar:{items:["&nbsp;"]},listeners:{show:function(){instance.rawDataShowing=!0},close:function(){instance.rawDataShowing=!1}}}),instance.rawdataWindow.show()}})}if(menu.addItem({text:"Drilldown",iconCls:"drill",menu:drilldownItems}),"none"!==dimension&&void 0===instance.filtersStore.getById(drillFilter.id)){for(var filters=jQuery.extend(!0,{},record.get("filters")),found=!1,k=0;k<filters.length;k++)if(filters[k].id==drillFilter.id){found=!0;break}var quickFilterItems=[];found||quickFilterItems.push({text:"Dataset",handler:function(){filters.data.push(drillFilter),filters.total++,record.set("filters",filters)}}),quickFilterItems.push({text:"Chart",handler:function(){instance.filtersStore.add(new instance.filtersStore.recordType(drillFilter))}}),menu.addItem({text:"Quick Filter: "+(dimensions[dimension].text!==drillLabel&&"none"!==dimension?dimensions[dimension].text+" = "+truncateText(drillLabel,40):""),iconCls:"add_filter",menu:quickFilterItems}),menu.addItem("-")}}menu.addItem({text:"Metric",iconCls:"chart",menu:metricItems}),menu.addItem({text:"Group By",iconCls:"menu",menu:dimensionItems}),menu.addItem("-"),menu.addItem({text:"Compare To",iconCls:"chart",disabled:isPie,menu:compareToItems}),menu.addItem("-"),menu.addItem({text:"Display",iconCls:"display_type",menu:displayItems}),menu.addItem({text:"Stacking",iconCls:"stacking",menu:combineItems}),menu.addItem({text:"Sort",iconCls:"sort_type",menu:sortItems}),menu.addItem({text:"Color",iconCls:"color_management",menu:colorItems});var moreOptionsMenuItem={text:"More Options",iconCls:"options",menu:[{text:"Line Type",iconCls:"line_type",menu:lineTypeItems},{text:"Line Width",iconCls:"line_width",menu:widthItems},{text:"Std Err Bars",iconCls:"std_err",xtype:"menucheckitem",checked:record.get("std_err"),disabled:!instance.realms[record.data.realm].metrics[metric].std_err||record.get("log_scale"),listeners:{checkchange:function(t,check){XDMoD.TrackEvent("Metric Explorer","Clicked on Std Err Bars option in data series context menu"),record.set("std_err",check)}}},{text:"Std Err Labels",xtype:"menucheckitem",checked:record.get("std_err_labels"),disabled:!instance.realms[record.data.realm].metrics[metric].std_err||record.get("log_scale"),listeners:{checkchange:function(t,check){XDMoD.TrackEvent("Metric Explorer","Clicked on Std Err Labels option in data series context menu"),record.set("std_err_labels",check)}}},{text:"Log Scale Dataset",iconCls:"log_scale",xtype:"menucheckitem",checked:record.get("log_scale"),disabled:isPie,listeners:{checkchange:function(t,check){XDMoD.TrackEvent("Metric Explorer","Clicked on Log Scale option in data series context menu"),record.set("log_scale",check)}}},{text:"Value Labels",iconCls:"value_labels",xtype:"menucheckitem",checked:record.get("value_labels"),listeners:{checkchange:function(t,check){XDMoD.TrackEvent("Metric Explorer","Clicked on Value Labels option in data series context menu"),record.set("value_labels",check)}}},{text:"Verbose Legend",iconCls:"long_legend",xtype:"menucheckitem",checked:record.get("long_legend"),listeners:{checkchange:function(t,check){XDMoD.TrackEvent("Metric Explorer","Clicked on Verbose Legend option in data series context menu"),record.set("long_legend",check)}}},{text:"Shadow",iconCls:"shadow",xtype:"menucheckitem",checked:record.get("shadow"),listeners:{checkchange:function(t,check){XDMoD.TrackEvent("Metric Explorer","Clicked on Shadow option in data series context menu"),record.set("shadow",check)}}}]};menu.addItem(moreOptionsMenuItem),menu.addItem("-"),menu.addItem({text:"Layer",iconCls:"layer",menu:layerItems}),menu.addItem("-"),menu.addItem({text:"Edit Dataset",iconCls:"edit_data",handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Edit Dataset option in data series context menu"),instance.editDataset(datasetId)}});for(var legendValue=instance.legendTypeComboBox.getValue(),legendItems=[],j=0;XDMoD.Module.MetricExplorer.legend_types.length>j;j++)legendItems.push({text:XDMoD.Module.MetricExplorer.legend_types[j][1],value:XDMoD.Module.MetricExplorer.legend_types[j][0],checked:legendValue==XDMoD.Module.MetricExplorer.legend_types[j][0],xtype:"menucheckitem",group:"legend_type"+randomNum,handler:function(){instance.legendTypeComboBox.setValue(this.value),XDMoD.TrackEvent("Metric Explorer","Updated legend placement",Ext.encode({legend_type:this.value})),instance.legend_type=this.value,instance.saveQuery()}});if(series){originalTitle=series.options.otitle;var resetLegendItemTitle=function(){XDMoD.TrackEvent("Metric Explorer","Clicked on reset legend item name option in series context menu"),delete instance.legend[originalTitle],series.chart.series[series.index].update({name:originalTitle}),instance.saveQuery()};menu.addItem("-"),menu.addItem({text:"Legend",iconCls:"legend_type",menu:legendItems}),menu.addItem({text:"Edit Legend Item",iconCls:"edit_legend_item",handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on edit legend item option in series context menu");var menu=instance.getTextEditMenu(series.name,"Legend Item",function(text){text!==series.name&&(XDMoD.TrackEvent("Metric Explorer","Pressed enter in legend item edit field.",Ext.encode({title:text})),instance.legend[originalTitle]?instance.legend[originalTitle].title=text:instance.legend[originalTitle]={title:text},series.chart.series[series.index].update({name:text}),instance.saveQuery()),menu.hide()},originalTitle!==series.options.name?{xtype:"button",text:"Reset",handler:function(){resetLegendItemTitle.call(this),menu.hide()}}:null);menu.showAt(Ext.EventObject.getXY())}}),originalTitle!==series.options.name&&menu.addItem({text:"Reset Legend Item Name",iconCls:"reset_legend_item_name",handler:resetLegendItemTitle})}menu.addItem("-"),menu.addItem({text:"Delete Dataset",iconCls:"delete_data",handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Delete Dataset option in data series context menu"),instance.removeDataset(datasetId)}}),menu.showAt(Ext.EventObject.getXY())}else alert("Could not locate dataset record");function replaceZIndex(from,to,record){for(var neighborRecordIndex=-1;-1<(neighborRecordIndex=record.store.find("z_index",from,0,!1));){record.store.getAt(neighborRecordIndex).set("z_index",to)}}},titleContextMenu:function(event,instance){void 0===instance&&(instance=CCR.xdmod.ui.metricExplorer);var textContent=event.target.title?event.target.title.element.textContent:"",menu=instance.getTextEditMenu(textContent,"Chart Title",function(text){if(text!==textContent){XDMoD.TrackEvent("Metric Explorer","Pressed enter in chart title edit field.",Ext.encode({title:text}));var decoded=Ext.util.Format.htmlDecode(text);instance.chartTitleField.setValue(decoded),event.target.setTitle({text:instance.highChartPanel.highChartsTextEncode(decoded)}),event.target.setSize(event.target.chartWidth,event.target.chartHeight),instance.saveQuery()}menu.hide()});menu.showAt(Ext.EventObject.getXY())},subtitleContextMenu:function(event,instance){void 0===instance&&(instance=CCR.xdmod.ui.metricExplorer);event.target.title.element;new Ext.menu.Menu({scope:instance,showSeparator:!1,ignoreParentClicks:!0,listeners:{show:{fn:function(menu){menu.getEl().slideIn("t",{easing:"easeIn",duration:.2})}}},items:['<span class="menu-title">Subtitle Options:</span><br/>',"-",{text:instance.chartShowSubtitleField.boxLabel,iconCls:"show_filters",xtype:"menucheckitem",checked:instance.show_filters,listeners:{checkchange:function(t,check){instance.chartShowSubtitleField.setValue(check)}}}]}).showAt(Ext.EventObject.getXY())},xAxisContextMenu:function(axis,instance){void 0===instance&&(instance=CCR.xdmod.ui.metricExplorer);var axisIndex=axis.options.index,axisTitle=axis.options.title.text,originalTitle=axis.options.otitle,defaultTitle=axis.options.dtitle,durationSelector=instance.getDurationSelector(),startDate=durationSelector.getStartDate(),endDate=durationSelector.getEndDate(),menuItems=['<span class="menu-title">X Axis ['+(axisIndex+1)+"]</span><br/>"];if(instance.timeseries){var startDateMenu=new Ext.menu.DateMenu({value:startDate,maxDate:endDate,handler:function(dp,date){durationSelector.setValues(date.format("Y-m-d"),endDate.format("Y-m-d"),null,null,!0)}}),endDateMenu=new Ext.menu.DateMenu({value:endDate,minDate:startDate,handler:function(dp,date){durationSelector.setValues(startDate.format("Y-m-d"),date.format("Y-m-d"),null,null,!0)}});menuItems.push({xtype:"menuitem",scope:durationSelector,text:durationSelector.getCannedDateText(),tooltip:"Configure time frame",fieldLabel:"Predefined Duration",iconCls:"custom_date",menu:durationSelector.cannedDateMenu}),menuItems.push({text:"Start: "+startDate.format("Y-m-d"),iconCls:"calendar",menu:startDateMenu}),menuItems.push({text:"End: "+endDate.format("Y-m-d"),iconCls:"calendar",menu:endDateMenu})}var menu=new Ext.menu.Menu({scope:instance,showSeparator:!1,ignoreParentClicks:!0,items:menuItems,listeners:{show:{fn:function(menu){menu.getEl().slideIn("t",{easing:"easeIn",duration:.2})}}}});null!=axisTitle&&""!=axisTitle||(menu.addItem("-"),menu.addItem({text:"Edit Title",iconCls:"edit_title",handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Edit Title option in x axis context menu");var menu=instance.getTextEditMenu("","X Axis ["+(axisIndex+1)+"] Title",function(text){text!==originalTitle&&(XDMoD.TrackEvent("Metric Explorer","Pressed enter in x axis title edit field.",Ext.encode({title:text})),instance.setXAxisTitle(axis,text)),menu.hide()});menu.showAt(Ext.EventObject.getXY())}})),axisTitle!==originalTitle&&originalTitle!==defaultTitle&&(menu.addItem("-"),menu.addItem({text:"Reset Title",iconCls:"reset_title",handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Reset Title option in x axis context menu"),instance.resetXAxisTitle(axis)}})),menu.showAt(Ext.EventObject.getXY())},xAxisLabelContextMenu:function(axis,instance){void 0===instance&&(instance=CCR.xdmod.ui.metricExplorer),XDMoD.Module.MetricExplorer.xAxisContextMenu(axis,instance)},xAxisTitleContextMenu:function(axis,instance){void 0===instance&&(instance=CCR.xdmod.ui.metricExplorer);var originalTitle=axis.options.otitle,axisTitle=axis.options.title.text,axisIndex=axis.options.index,menu=instance.getTextEditMenu(axisTitle,"X Axis ["+(axisIndex+1)+"] Title",function(text){XDMoD.TrackEvent("Metric Explorer","Pressed enter in x axis ["+(axisIndex+1)+"] title field.",Ext.encode({title:text})),instance.setXAxisTitle(axis,text),menu.hide()},axisTitle!==originalTitle?{text:"Reset",xtype:"button",handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Reset Title option in x axis context menu"),instance.resetXAxisTitle(axis),menu.hide()}}:null);menu.showAt(Ext.EventObject.getXY())},yAxisTitleContextMenu:function(axis,instance){void 0===instance&&(instance=CCR.xdmod.ui.metricExplorer);var originalTitle=axis.options.otitle,axisTitle=axis.options.title.text,axisIndex=axis.options.index,menu=instance.getTextEditMenu(axisTitle,"Y Axis ["+(axisIndex+1)+"] Title",function(text){XDMoD.TrackEvent("Metric Explorer","Pressed enter in y axis ["+(axisIndex+1)+"] title field.",Ext.encode({title:text})),instance.setYAxisTitle(axis,text),menu.hide()},axisTitle!==originalTitle?{text:"Reset",xtype:"button",handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Reset Title option in y axis context menu"),instance.resetYAxisTitle(axis),menu.hide()}}:null);menu.showAt(Ext.EventObject.getXY())},yAxisContextMenu:function(axis,instance){var handler;void 0===instance&&(instance=CCR.xdmod.ui.metricExplorer);for(var allLogScale,axisIndex=axis.options.index,axisTitle=axis.options.title.text,originalTitle=axis.options.otitle,defaultTitle=axis.options.dtitle,minField=new Ext.form.NumberField({value:axis.options.min,listeners:{specialkey:function(field,e){e.getKey()==e.ENTER&&handler()},afterrender:function(field){field.focus(!0,700)}}}),maxField=new Ext.form.NumberField({value:axis.options.max,listeners:{specialkey:function(field,e){e.getKey()==e.ENTER&&handler()}}}),yAxisDatasetIds=[],s=0;s<axis.chart.series.length;s++){var se=axis.chart.series[s];se.userOptions.yAxis===axisIndex&&yAxisDatasetIds.push(se.userOptions.datasetId)}instance.datasetStore.each(function(record){for(var i=0;i<yAxisDatasetIds.length;i++)Math.abs(yAxisDatasetIds[i]-record.data.id)<1e-14&&(allLogScale=(void 0===allLogScale||!0===allLogScale)&&record.get("log_scale"))});var setLog=new Ext.form.Checkbox({checked:!0===allLogScale,value:allLogScale,boxLabel:"Log Scale Y Axis",iconCls:"log_scale",xtype:"checkbox",listeners:{specialkey:function(field,e){e.getKey()==e.ENTER&&handler()},check:function(t,ch){t.setValue(ch)}}}),menu=new Ext.menu.Menu({scope:instance,showSeparator:!1,ignoreParentClicks:!0,items:['<span class="menu-title">Y Axis ['+(axisIndex+1)+"]</span><br/>",'<span class="menu-title">min:</span><br/>',minField,'<span class="menu-title">max:</span><br/>',maxField,setLog],listeners:{show:{fn:function(menu){menu.getEl().slideIn("t",{easing:"easeIn",duration:.2})}},hide:{fn:function(menu){menu.destroy()}}}});handler=function(){var oldMin=axis.min,oldMax=axis.max,allLog=setLog.getValue(),axisType=null,newMin=minField.getValue(),newMax=maxField.getValue();if(instance.fireEvent("disable_commit"),instance.datasetStore.each(function(record){for(var i=0;i<yAxisDatasetIds.length;i++)Math.abs(yAxisDatasetIds[i]-record.data.id)<1e-14&&record.set("log_scale",allLog)}),allLog){axisType="logarithmic";newMax=function(base,cur_max){for(var result=0,exponent=1;result<cur_max;)result=Math.pow(base,exponent),exponent+=1;return result}(10,newMax),(""==newMin||newMin<=0)&&(newMin=null)}else axisType="linear",""==newMin&&(newMin=0);""==newMax&&(newMax=null),(null==newMin||null==newMax||newMin<newMax&&(newMin!==oldMin||newMax!==oldMax))&&(XDMoD.TrackEvent("Metric Explorer","Pressed enter in y axis ["+(axisIndex+1)+"] min/max field.",Ext.encode({min:newMin,max:newMax})),instance.yAxis["original"+axisIndex]?(instance.yAxis["original"+axisIndex].min=newMin,instance.yAxis["original"+axisIndex].max=newMax):instance.yAxis["original"+axisIndex]={title:axisTitle,min:newMin,max:newMax},axis.target.yAxis[axisIndex].update({min:newMin,max:newMax,type:axisType,startOnTick:null==newMin,endOnTick:null==newMax},!0),instance.saveQuery()),instance.fireEvent("enable_commit",!0),menu.destroy()},null!=axisTitle&&""!=axisTitle||(menu.addItem("-"),menu.addItem({text:"Edit Title",iconCls:"edit_title",handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Edit Title option in y axis context menu");var menu=instance.getTextEditMenu("","Y Axis ["+(axisIndex+1)+"] Title",function(text){text!==originalTitle&&(XDMoD.TrackEvent("Metric Explorer","Pressed enter in y axis title edit field.",Ext.encode({title:text})),instance.setYAxisTitle(axis,text)),menu.hide()});menu.showAt(Ext.EventObject.getXY())}})),axisTitle!==originalTitle&&originalTitle!==defaultTitle&&(menu.addItem("-"),menu.addItem({text:"Reset Title",iconCls:"reset_title",handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Reset Title option in y axis context menu"),instance.resetYAxisTitle(axis)}})),menu.addItem({xtype:"panel",layout:"hbox",border:!1,baseCls:"x-plain",layoutConfig:{pack:"end",align:"middle"},items:[{xtype:"button",text:"Ok",handler:function(){handler.call(this)}},{xtype:"button",text:"Cancel",handler:function(){menu.destroy()}}]}),menu.showAt(Ext.EventObject.getXY()),menu.keyNav&&(menu.keyNav.doRelay=function(event,handler){event.getKey();return!this.menu.activeItem&&event.isNavKeyPress()?(this.menu.tryActivate(0,1),!0):handler.call(this.scope||this,event,this.menu)},menu.keyNav.left=function(){return!0},menu.keyNav.right=function(){return!0})},yAxisLabelContextMenu:function(axis,instance){void 0===instance&&(instance=CCR.xdmod.ui.metricExplorer),XDMoD.Module.MetricExplorer.yAxisContextMenu(axis,instance)},getCategoryForRealm:function(realm){return XDMoD.Module.MetricExplorer.realmsToCategories[realm]},setCategoryForRealm:function(realm,category){XDMoD.Module.MetricExplorer.realmsToCategories[realm]=category},resetRealmCategoryMapping:function(){XDMoD.Module.MetricExplorer.realmsToCategories={}},getRealmsForDimension:function(dimension){return XDMoD.Module.MetricExplorer.dimensionsToRealms[dimension]},addRealmToDimension:function(dimension,realm){XDMoD.Module.MetricExplorer.dimensionsToRealms.hasOwnProperty(dimension)||(XDMoD.Module.MetricExplorer.dimensionsToRealms[dimension]=[]),XDMoD.Module.MetricExplorer.dimensionsToRealms[dimension].push(realm)},resetDimensionRealmMapping:function(){XDMoD.Module.MetricExplorer.dimensionsToRealms={}}}),Ext.extend(XDMoD.Module.MetricExplorer,XDMoD.PortalModule,{module_id:"metric_explorer",usesToolbar:!0,toolbarItems:{durationSelector:!0,exportMenu:!0,printButton:!0,reportCheckbox:!0},show_filters:!0,show_warnings:!0,font_size:3,legend_type:"bottom_center",swap_xy:!1,share_y_axis:!1,hide_tooltip:!1,show_remainder:!1,timeseries:!0,featured:!1,yAxis:{},xAxis:{},legend:{},defaultDatasetConfig:{},clientSideDataSeriesKeys:["visibility"],getDataSeries:function(){var data=[];return this.datasetStore.each(function(record){data.push(record.data)}),data},getGlobalFilters:function(){var ret=[];return this.filtersStore.each(function(record){ret.push(record.data)}),{data:ret,total:ret.length}},getConfig:function(){var dataSeries=this.getDataSeries(),dataSeriesCount=dataSeries.length,title=this.chartTitleField.getValue();return{featured:this.featuredCheckbox.getValue(),trend_line:this.trendLineCheckbox.getValue(),x_axis:this.xAxis,y_axis:this.yAxis,legend:this.legend,defaultDatasetConfig:this.defaultDatasetConfig,swap_xy:this.chartSwapXYField.getValue(),share_y_axis:this.shareYAxisField.getValue(),hide_tooltip:this.hideTooltipField.getValue(),show_remainder:this.showRemainderCheckbox.getValue(),timeseries:this.timeseries,title:title,legend_type:this.legendTypeComboBox.getValue(),font_size:this.fontSizeSlider.getValue(),show_filters:this.chartShowSubtitleField.getValue(),show_warnings:this.showWarningsCheckbox.getValue(),data_series:{data:dataSeries,total:dataSeriesCount},aggregation_unit:this.getDurationSelector().getAggregationUnit(),global_filters:this.getGlobalFilters(),timeframe_label:this.getDurationSelector().getDurationLabel(),start_date:this.getDurationSelector().getStartDate().format("Y-m-d"),end_date:this.getDurationSelector().getEndDate().format("Y-m-d"),start:this.show_remainder?0:this.chartPagingToolbar.cursor,limit:this.chartPagingToolbar.pageSize}},filterStoreLoad:function(){this.saveQuery()},reset:function(preserveFilters){this.disableSave=!0,this.timeseries=!0,this.xAxis={},this.yAxis={},this.legend={},this.defaultDatasetConfig={},this.datasetTypeRadioGroup.setValue(this.timeseries?"timeseries_cb":"aggregate_cb",!0),this.chartTitleField.setValue(null),this.chartOptionsButton.setText(null),this.chartOptionsButton.setTooltip(""),this.chartNameTextbox.setValue(null),this.setLegendValue("bottom_center",!1),this.fontSizeSlider.setValue(3),this.featuredCheckbox.setValue(!1),this.chartSwapXYField.setValue(!1),this.shareYAxisField.setValue(!1),this.datasetStore.removeAll(!1),preserveFilters||this.filtersStore.removeAll(!1),this.disableSave=!1},createQueryFunc:function(b,em,queryName,config,preserveFilters,initialConfig,insert){insert=!CCR.exists(insert)||insert;var instance=CCR.xdmod.ui.metricExplorer||this,sm=this.queriesGridPanel.getSelectionModel();sm.clearSelections();var findQueriesStoreIndexByName=function(name){return this.queriesStore.findBy(function(record){if(record.get("name")===name)return!0})},index=null;if(Ext.isEmpty(queryName))for(var i=1;-1!==(index=findQueriesStoreIndexByName.call(this,queryName="untitled query "+i));)i++;config||(config=this.getConfig(),initialConfig&&Ext.apply(config,initialConfig),config.title=queryName),null===index&&(index=findQueriesStoreIndexByName.call(this,queryName));var selectRowByIndex=function(index,silent){(silent=!Ext.isDefined(silent)||silent)&&instance.queriesGridPanelSM.un("rowselect",this.queriesGridPanelSMRowSelect,this),sm.selectRow(index),silent&&instance.queriesGridPanelSM.on("rowselect",this.queriesGridPanelSMRowSelect,this),instance.queriesGridPanel.getView().focusRow(index)};if(-1<index)selectRowByIndex.call(this,index,!1);else{this.loadQuery(config,!0);var r=new instance.queriesStore.recordType({name:queryName,config:Ext.util.JSON.encode(this.getConfig()),ts:Date.now()/1e3});r.stack=new XDMoD.ChangeStack({listeners:{update:function(changeStack,record,action){instance.handleChartModification(changeStack,record,action)}}}),insert?(instance.queriesStore.addSorted(r),index=instance.queriesStore.indexOf(r),selectRowByIndex.call(this,index),(instance.currentQueryRecord=r).stack.add(r.data)):(sm.clearSelections(),instance.handleChartModification(r.stack,r.data,"chartselected")),instance.currentQueryRecord=r}this.chartNameTextbox.setValue(Ext.util.Format.htmlDecode(queryName)),this.chartOptionsButton.setText(truncateText(queryName,XDMoD.Module.MetricExplorer.CHART_OPTIONS_MAX_TEXT_LENGTH)),this.chartOptionsButton.setTooltip(queryName)},saveQueryFunc:function(commitChanges){commitChanges=commitChanges||!1;var config=this.getConfig(),rec=this.getCurrentRecord();config.featured!==JSON.parse(this.currentQueryRecord.data.config).featured||this.currentQueryRecord.stack.isMarked()||(this.summaryDirty=!0);var recordUpdated=!1;if(rec.get("config")!=Ext.util.JSON.encode(config)){var newConfig=Ext.util.JSON.decode(rec.get("config"));if(Ext.apply(newConfig,config),!this.validateChartType(newConfig))return!1;if(rec.phantom&&!rec.store){this.queriesStore.addSorted(rec);var index=this.queriesStore.indexOf(rec);this.selectRowByIndex.call(this,index)}rec.set("config",Ext.util.JSON.encode(newConfig)),rec.stack.add(rec.data),recordUpdated=!0}commitChanges&&((index=this.queriesStore.indexOf(this.currentQueryRecord))<0?(this.queriesStore.addSorted(rec),this.queriesStore.save(),index=this.queriesStore.indexOf(rec),this.selectRowByIndex.call(this,index)):(rec.set("ts",Date.now()/1e3),this.queriesStore.save()),rec.stack.mark());return recordUpdated},loadQuery:function(config,reload){if(config){this.disableSave=!0;this.getDurationSelector().setValues(config.start_date,config.end_date,config.aggregation_unit,config.timeframe_label),this.timeseries=!!config.timeseries;var data,record,dataSeriesIsObject=CCR.isType(config.data_series,CCR.Types.Object),dataSeriesIsArray=CCR.isType(config.data_series,CCR.Types.Array),trendLineValue=!1;dataSeriesIsObject?(data=config.data_series.data,record=CCR.exists(data)?data[0]:null,trendLineValue=!!CCR.exists(record)&&record.trend_line):dataSeriesIsArray&&(data=config.data_series[0],record=CCR.exists(data)?data[0]:null,trendLineValue=!!CCR.exists(record)&&record.trend_line);var dataset,showWarningsValue=!!Ext.isEmpty(config.show_warnings)||config.show_warnings,chartPageSizeLimitValue=config.limit?config.limit:10;this._simpleSilentSetValue(this.showWarningsCheckbox,showWarningsValue),this._simpleSilentSetValue(this.chartPageSizeField,chartPageSizeLimitValue),this._simpleSilentSetValue(this.trendLineCheckbox,trendLineValue),this._simpleSilentSetValue(this.chartTitleField,config.title),this.setLegendValue(config.legend_type,!1),this._simpleSilentSetValue(this.fontSizeSlider,config.font_size),this._simpleSilentSetValue(this.chartSwapXYField,config.swap_xy),this._simpleSilentSetValue(this.shareYAxisField,config.share_y_axis),this._simpleSilentSetValue(this.hideTooltipField,config.hide_tooltip),this._simpleSilentSetValue(this.showRemainderCheckbox,config.show_remainder),this._simpleSilentSetValue(this.chartShowSubtitleField,config.show_filters),this._simpleSilentSetValue(this.featuredCheckbox,config.featured),this._noEvents(this.datasetTypeRadioGroup.items.items,function(component,timeseries){var value=timeseries?"timeseries_cb":"aggregate_cb";component.setValue(value,!0)},this.datasetTypeRadioGroup,this.timeseries),this.chartPagingToolbar.cursor=config.start?config.start:0,this.chartPagingToolbar.pageSize=config.limit?config.limit:10,this.xAxis=config.x_axis?config.x_axis:{},this.yAxis=config.y_axis?config.y_axis:{},this.legend=config.legend?config.legend:{},this.show_remainder=config.show_remainder||!1,this.hide_tooltip=config.hide_tooltip||!1,this.share_y_axis=config.share_y_axis||!1,this.featured=config.featured||!1,this.swap_xy=config.swap_xy||!1,this.show_filters=config.show_filters,this.defaultDatasetConfig=config.defaultDatasetConfig?config.defaultDatasetConfig:{},this.defaultMetricDisplayType=this.defaultDatasetConfig.display_type||"line",this._simpleSilentSetValue(this.defaultMetricDisplayTypeField,this.defaultMetricDisplayType),this.disableSave=!1,this.filtersStore.un("load",this.filterStoreLoad,this),this.filtersStore.loadData(config.global_filters?config.global_filters:{data:[],total:0},!1),this.filtersStore.on("load",this.filterStoreLoad,this),dataSeriesIsArray||dataSeriesIsObject&&config.data_series.data?dataset=config.data_series:dataSeriesIsObject&&!record&&(dataset={data:[]}),this.datasetStore.loadData(dataset,!1),this.validateChartType(config),reload&&this.reloadChart.call(this)}},mask:function(message){var viewer=CCR.xdmod.ui.Viewer.getViewer();viewer.el&&viewer.el.mask(message)},unmask:function(){var viewer=CCR.xdmod.ui.Viewer.getViewer();viewer.el&&(viewer.el.isMasked()&&CCR.xdmod.ui.Viewer.dontUnmask?viewer.el.mask():viewer.el.unmask())},resetXAxisTitle:function(axis){var originalTitle=axis.options&&axis.options.otitle?axis.options.otitle:"",newTitle=originalTitle===(axis.options&&axis.options.dtitle?axis.options.dtitle:"")?"":originalTitle;this.setXAxisTitle(axis,newTitle)},setXAxisTitle:function(axis,newTitle){var axisIndex=axis.options.index,originalTitle=axis.options&&axis.options.otitle?axis.options.otitle:"";this.xAxis[originalTitle]?this.xAxis[originalTitle].title=newTitle:this.xAxis[originalTitle]={title:newTitle},axis.target.xAxis[axisIndex].setTitle({text:newTitle}),this.saveQuery()},resetYAxisTitle:function(axis){var originalTitle=axis.options&&axis.options.otitle?axis.options.otitle:"",newTitle=originalTitle===(axis.options&&axis.options.dtitle?axis.options.dtitle:"")?"":originalTitle;this.setYAxisTitle(axis,newTitle)},setYAxisTitle:function(axis,newTitle){var axisIndex=axis.options.index;this.yAxis["original"+axisIndex]?this.yAxis["original"+axisIndex].title=newTitle:this.yAxis["original"+axisIndex]={title:newTitle},axis.target.yAxis[axisIndex].setTitle({text:newTitle}),this.saveQuery()},getTextEditMenu:function(textContent,label,handler,resetButton){var width=16;textContent.length>width&&(width=Math.min(textContent.length,40));var field=new Ext.form.TextField({value:Ext.util.Format.htmlDecode(textContent),width:width.toString()+"em",listeners:{specialkey:function(field,e){if(e.getKey()==e.ENTER){var text=Ext.util.Format.htmlEncode(field.getValue());handler.call(this,text)}},afterrender:function(field){field.focus(!0,700)}}}),buttons=[];resetButton&&buttons.push(resetButton),buttons.push({xtype:"button",text:"Ok",handler:function(){handler.call(this,Ext.util.Format.htmlEncode(field.getValue()))}}),buttons.push({xtype:"button",text:"Cancel",handler:function(){menu.hide()}});var menu=new Ext.menu.Menu({scope:this,keyNab:!1,showSeparator:!1,ignoreParentClicks:!0,items:['<span class="menu-title">Edit '+label+":</span><br/>",field,{xtype:"panel",layout:"hbox",border:!1,baseCls:"x-plain",layoutConfig:{pack:"end",align:"middle"},items:buttons}],listeners:{show:{fn:function(menu){menu.keyNav&&menu.keyNav.disable(),menu.getEl().slideIn("t",{easing:"easeIn",duration:.2})}}}});return menu},getDisplayTypeItems:function(displayType,xtype,group,handler,scope,extraConfig){for(var displayItems=[],i=0;CCR.xdmod.ui.AddDataPanel.display_types.length>i;i++){var isNew=CCR.exists(extraConfig)&&CCR.exists(extraConfig.newChart)&&extraConfig.newChart,isTimeSeries=CCR.exists(extraConfig)&&CCR.exists(extraConfig.timeseries)&&extraConfig.timeseries;if(!isNew||!isTimeSeries||"pie"!==CCR.xdmod.ui.AddDataPanel.display_types[i][0]){var config={group:group,text:'<img class="x-panel-inline-icon '+CCR.xdmod.ui.AddDataPanel.display_types[i][0]+'" src="gui/lib/extjs/resources/images/default/s.gif" alt=""> '+CCR.xdmod.ui.AddDataPanel.display_types[i][1],value:CCR.xdmod.ui.AddDataPanel.display_types[i][0],checked:displayType===CCR.xdmod.ui.AddDataPanel.display_types[i][0],xtype:xtype||"menucheckitem",scope:scope,handler:function(b){handler.call(scope,b)}};Ext.apply(config,extraConfig),displayItems.push(config),this.lastDisplayType=CCR.exists(this.lastDisplayType)?this.lastDisplayType:displayType===CCR.xdmod.ui.AddDataPanel.display_types[i][0]?CCR.xdmod.ui.AddDataPanel.display_types[i][0]:void 0}}return displayItems},initComponent:function(){var self=this,chartScale=1,chartWidth=740,chartHeight=345;this.legendMenu=[],this.setLegendValue=function(value,save){self.legendTypeComboBox.setValue(value);for(var thisLegendItem,menuLen=self.legendMenu.length;menuLen--;)(thisLegendItem=self.legendMenu[menuLen]).value===value&&(thisLegendItem.checked=!0),thisLegendItem.value!==value&&(thisLegendItem.checked=!1);save&&(XDMoD.TrackEvent("Metric Explorer","Updated legend placement",Ext.encode({legend_type:value})),this.saveQuery())};for(var thisLegendValue,thisLegendText,thisLegendId,legendLength=XDMoD.Module.MetricExplorer.legend_types.length,legendHandler=function(){self.setLegendValue(this.value,!0)},i=0;i<legendLength;i++)thisLegendValue=XDMoD.Module.MetricExplorer.legend_types[i][0],thisLegendId=(thisLegendText=XDMoD.Module.MetricExplorer.legend_types[i][1]).toLowerCase().replace(/ /g,"-"),this.legendMenu.push({xtype:"menucheckitem",group:"legend_type",id:"metric-explorer-chartoptions-legend-"+thisLegendId,text:thisLegendText,value:thisLegendValue,checked:"bottom_center"===thisLegendValue,handler:legendHandler});this.realms=[],this.menuRefs={chartOptions:null,newChart:null,dataSeries:null},this.metricsMenu=new Ext.menu.Menu({id:"metric-explorer-chartoptions-add-data-menu",showSeparator:!1,ignoreParentClicks:!0}),this.filtersMenu=new Ext.menu.Menu({id:"metric-explorer-chartoptions-add-filter-menu",showSeparator:!1,ignoreParentClicks:!0,items:['<span class="menu-title">Add Filter:</span><br/>',"-"],listeners:{scope:this,afterrender:function(thisMenu){thisMenu.tip=new Ext.ToolTip({target:thisMenu.getEl().getAttribute("id"),delegate:".x-menu-item",trackMouse:!0,renderTo:document.body,text:"text",title:"title",listeners:{beforeshow:function(tip){var menuItem=thisMenu.findById(tip.triggerElement.id);if(!menuItem.initialConfig.categories)return!1;tip.header.dom.firstChild.innerHTML="Categories",tip.body.dom.innerHTML=menuItem.initialConfig.categories}}})}}}),this.allDimensions=[],this.allMetrics=[],this.dwDescriptionStore=new CCR.xdmod.CustomJsonStore({url:"controllers/metric_explorer.php",fields:["realms"],root:"data",totalProperty:"totalCount",idProperty:"name",messageProperty:"message",scope:this,baseParams:{operation:"get_dw_descripter"}}),this.dwDescriptionStore.on("beforeload",function(){this.mask("Loading...")},this),this.dwDescriptionStore.on("load",function(store){var filterItems=[],filterMap={};if(this.allDimensions=[],this.allMetrics=[],XDMoD.Module.MetricExplorer.resetRealmCategoryMapping(),XDMoD.Module.MetricExplorer.resetDimensionRealmMapping(),this.metricsMenu.removeAll(!0),this.filtersMenu.removeAll(!0),this.metricsMenu.add('<span class="menu-title">Add Data:</span><br/>'),this.metricsMenu.add("-"),this.filtersMenu.add('<span class="menu-title">Add Filter:</span><br/>'),this.filtersMenu.add("-"),0<store.getCount()){this.realms=store.getAt(0).get("realms");var dataCatalogRoot=this.dataCatalogTree.getRootNode();dataCatalogRoot.removeAll();var categories=[],categoryNodes={},categoryMetricMenuItems={};for(var realm in this.realms)if(this.realms.hasOwnProperty(realm)){var categoryNode,categoryMetricMenuItem,category=this.realms[realm].category,realm_metrics=this.realms[realm].metrics,realm_dimensions=this.realms[realm].dimensions;XDMoD.Module.MetricExplorer.setCategoryForRealm(realm,category);var categoryPreviouslyFound=categoryNodes.hasOwnProperty(category);for(var rm in categoryMetricMenuItem=categoryPreviouslyFound?((categoryNode=categoryNodes[category]).realm+=","+realm,categoryMetricMenuItems[category]):(categories.push(category),categoryNode=categoryNodes[category]=new Ext.tree.TreeNode({id:category,leaf:!1,singleClickExpand:!0,type:"category",text:category,realm:realm,iconCls:"realm"}),categoryMetricMenuItems[category]=['<b class="menu-title">'+category+" Metrics:</b><br/>"]),realm_metrics)if(realm_metrics.hasOwnProperty(rm)){if(void 0===realm_metrics[rm].text)continue;var metricNode=new Ext.tree.TreeNode({id:realm+"_"+rm,dimensions:realm_dimensions,leaf:!0,singleClickExpand:!0,type:"metric",text:realm_metrics[rm].text,iconCls:"chart",category:category,realm:realm,metric:rm,listeners:{click:{scope:this,fn:function(n){var menu=new Ext.menu.Menu({scope:this,showSeparator:!1,ignoreParentClicks:!0,listeners:{show:{fn:function(menu){menu.getEl().slideIn("t",{easing:"easeIn",duration:.25})}}}});for(var d in menu.add('<span>Add To Chart: </span><span class="menu-title">'+n.text+"</span><br/>"),menu.add('<span class="menu-title">Select Group By:</span><br/>'),menu.add("-"),n.attributes.dimensions)if(n.attributes.dimensions.hasOwnProperty(d)){var config={group_by:d,metric:n.attributes.metric,realm:n.attributes.realm,category:n.attributes.category};Ext.apply(config,this.defaultDatasetConfig),menu.add({text:"none"==d?"None":n.attributes.dimensions[d].text,iconCls:"menu",config:config,scope:this,handler:function(t){t.config.display_type=self.defaultMetricDisplayType;var record=CCR.xdmod.ui.AddDataPanel.initRecord(t.scope.datasetStore,t.config,null,this.timeseries),displayTypes=[record.get("display_type")];if(!this.validateChart(displayTypes,1))return!1;t.scope.datasetStore.add(record)}})}menu.show(n.ui.textNode,"tl-br?")}}}});categoryNode.appendChild(metricNode),this.allMetrics.push([rm,realm_metrics[rm].text]),categoryMetricMenuItem.push({text:realm_metrics[rm].text,iconCls:"chart",realm:realm,metric:rm,scope:this,handler:function(b){XDMoD.TrackEvent("Metric Explorer","Selected a metric from the Add Data menu",Ext.encode({realm:b.realm,metric:b.text})),addDataButtonHandler.call(b.scope,b.scope.datasetsGridPanel.toolbars[0].el,b.metric,b.realm,this.realms)}})}for(var rdFilter in realm_dimensions)if(realm_dimensions.hasOwnProperty(rdFilter)){if(void 0===realm_dimensions[rdFilter].text)continue;if("none"==rdFilter)continue;XDMoD.Module.MetricExplorer.addRealmToDimension(rdFilter,realm),this.allDimensions.push([rdFilter,realm_dimensions[rdFilter].text]),void 0===filterMap[rdFilter]?(filterMap[rdFilter]=filterItems.length,filterItems.push({text:realm_dimensions[rdFilter].text,iconCls:"menu",categories:[category],realms:[realm],dimension:rdFilter,scope:this,disabled:!1,handler:function(b){XDMoD.TrackEvent("Metric Explorer","Selected a filter from the Create Filter menu",b.text);var applicableRealms=[];Ext.each(b.realms,function(realm){self.datasetStore.each(function(dataset){if(dataset.get("realm")===realm)return applicableRealms.push(realm),!1})}),filterButtonHandler.call(b.scope,b.scope.filtersGridPanel.toolbars[0].el,b.dimension,b.text,applicableRealms)}})):(-1==filterItems[filterMap[rdFilter]].categories.indexOf(category)&&filterItems[filterMap[rdFilter]].categories.push(category),-1==filterItems[filterMap[rdFilter]].realms.indexOf(realm)&&filterItems[filterMap[rdFilter]].realms.push(realm))}}Ext.each(categories,function(category){dataCatalogRoot.appendChild(categoryNodes[category]);var categoryMetricMenuItem=categoryMetricMenuItems[category];this.metricsMenu.add({text:category,iconCls:"realm",menu:categoryMetricMenuItem,disabled:categoryMetricMenuItem.length<=0})},this),filterItems.sort(function(a,b){var nameA=a.text.toLowerCase(),nameB=b.text.toLowerCase();return nameA<nameB?-1:nameB<nameA?1:0}),this.filtersMenu.addItem(filterItems),this.dimensionsCombo.store.loadData(this.allDimensions,!1),this.metricsCombo.store.loadData(this.allMetrics,!1),this.dataCatalogTreeOnDatasetLoad.call(this)}this.unmask(),this.fireEvent("dwdesc_loaded")},this),this.on("duration_change",function(duration){duration.changed?this.saveQuery():this.reloadChart()}),this.datasetTypeRadioGroup=new Ext.form.RadioGroup({id:"me_dataset_type",fieldLabel:"Dataset Type",items:[{id:"aggregate_cb",boxLabel:"Aggregate",name:"dataset_group",inputValue:1,checked:!this.timeseries},{id:"timeseries_cb",boxLabel:"Timeseries",name:"dataset_group",inputValue:2,checked:this.timeseries}],listeners:{scope:this,change:function(radioGroup,checkedRadio){if(XDMoD.TrackEvent("Metric Explorer","Changed Dataset Type",Ext.encode({type:checkedRadio.boxLabel})),!self.validateChart(self._getDisplayTypes(!0),0,2!==checkedRadio.inputValue))return radioGroup.setValue([1,0]),!1;this.timeseries=2==checkedRadio.inputValue;var cm=this.datasetsGridPanel.getColumnModel(),ind=cm.getIndexById("x_axis");-1<ind&&cm.setHidden(ind,this.timeseries),-1<(ind=cm.getIndexById("trend_line"))&&cm.setHidden(ind,!this.timeseries),this.saveQuery()}}}),this.defaultMetricDisplayTypeField=CCR.xdmod.ui.getComboBox(CCR.xdmod.ui.AddDataPanel.display_types,["id","text"],"id","text",!1,"Default Metric Display Type"),this.defaultMetricDisplayTypeField.value=this.defaultMetricDisplayType,this.defaultMetricDisplayTypeField.fieldLabel="Default Metric<br/>Display Type",this.defaultMetricDisplayTypeField.addListener("select",function(combo,record){var newDefault=record.get("id");this.defaultMetricDisplayType=newDefault,this.defaultDatasetConfig.display_type=newDefault,XDMoD.TrackEvent("Metric Explorer","Updated Default Metric Display Type",Ext.encode({default_metric_display_type:newDefault})),this.saveQuery()},self),this.chartTitleField=new Ext.form.TextField({id:"me_chart_title",fieldLabel:"Title",name:"title",emptyText:"Chart Title",validationDelay:1e3,enableKeyEvents:!0,listeners:{scope:this,change:function(textfield,newValue,oldValue){newValue!=oldValue&&(XDMoD.TrackEvent("Metric Explorer","Updated chart title",textfield.getValue()),this.saveQuery())},specialkey:function(t,e){!t.isValid(!1)||e.getKey()!=e.ENTER&&e.getKey()!=e.TAB||this.saveQuery()}}}),this.chartShowSubtitleField=new Ext.form.Checkbox({id:"me_show_subtitle",fieldLabel:"Filters",name:"show_filters",boxLabel:"Show Chart Filters in Subtitle",checked:this.show_filters,listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Clicked on Show Chart Filters in subtitle checkbox",Ext.encode({checked:check})),this.show_filters=check,this.saveQuery()}}}),this.showWarningsCheckbox=new Ext.form.Checkbox({id:"me_show_warnings",fieldLabel:"Warnings",name:"show_warnings",boxLabel:"Show Warnings",checked:this.show_warnings,listeners:{check:{fn:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Clicked on Show Warnings checkbox",Ext.encode({checked:check})),this.show_warnings=check,this.saveQuery()},scope:this}}}),this.chartSwapXYField=new Ext.form.Checkbox({id:"me_chart_swap_xy",fieldLabel:"Invert Axis",name:"swap_xy",boxLabel:"Swap the X and Y axis",checked:this.swap_xy,listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Clicked on the Invert Axis checkbox",Ext.encode({checked:check})),this.swap_xy=check,this.saveQuery()}}}),this.shareYAxisField=new Ext.form.Checkbox({id:"me_share_yaxis",fieldLabel:"Share Y Axis",name:"share_y_axis",boxLabel:"Single Y axis",checked:this.share_y_axis,listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Clicked on the Share Y Axis checkbox",Ext.encode({checked:check})),this.share_y_axis=check,this.saveQuery()}}}),this.hideTooltipField=new Ext.form.Checkbox({id:"me_hide_tooltip",fieldLabel:"Hide Tooltip",name:"hide_tooltip",boxLabel:"Hide Tooltip",checked:this.hide_tooltip,listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Clicked on the Hide Tooltip checkbox",Ext.encode({checked:check})),this.hide_tooltip=check,this.saveQuery()}}}),this.legendTypeComboBox=new Ext.form.ComboBox({id:"me_legend_type",fieldLabel:"Legend",name:"legend_type",xtype:"combo",mode:"local",editable:!1,tpl:'<tpl for="."><div ext:qtip="{text}" class="x-combo-list-item">{text}</div></tpl>',store:new Ext.data.ArrayStore({id:0,fields:["id","text"],data:XDMoD.Module.MetricExplorer.legend_types}),disabled:!1,value:this.legend_type,valueField:"id",displayField:"text",triggerAction:"all",listeners:{scope:self,select:function(combo,record){self.setLegendValue(record.get("id"),!0)}}}),this.fontSizeSlider=new Ext.slider.SingleSlider({id:"me_font_size_slider",fieldLabel:"Font Size",name:"font_size",minValue:-5,maxValue:10,value:this.font_size,increment:1,plugins:new Ext.slider.Tip,listeners:{scope:this,changecomplete:function(slider,newValue,thumb){XDMoD.TrackEvent("Metric Explorer","Used the font size slider",Ext.encode({font_size:slider.getValue()})),this.font_size=slider.getValue(),this.saveQuery()}}}),this.featuredCheckbox=new Ext.form.Checkbox({id:"me_featured",fieldLabel:"Featured",name:"featured",boxLabel:"Show in Summary tab",checked:this.featured,listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Toggled Show in Summary tab checkbox",Ext.encode({checked:check})),this.featured=check,this.saveQuery()}}}),this.trendLineCheckbox=new Ext.form.Checkbox({id:"me_trend_line",fieldLabel:"Trend Line",name:"trend_line",boxLabel:"Show Trend Line",tooltip:"Show Trend Line",checked:this.trendLineEnabled,disabled:!this.isTrendLineAvailable(),listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","Toggled Show Trend Line checkbox",Ext.encode({checked:check})),this.fireEvent("disable_commit"),this.datasetStore.each(function(record){record.set("trend_line",check)}),this.fireEvent("enable_commit",!0)}}}),this.showRemainderCheckbox=new Ext.form.Checkbox({fieldLabel:"Remainder",name:"show_remainder",boxLabel:"Show Remainder (Disable Paging)",tooltip:"When enabled, data series beyond the limit will be displayed as a single, summarized series. This will disable paging.",checked:this.show_remainder,listeners:{check:{scope:this,fn:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer",'Toggled "Show Remainder" Checkbox',Ext.encode({checked:check})),this.show_remainder=check,this.saveQuery()}}}}),this.chartNameTextbox=new Ext.form.TextField({id:"me_chart_name",fieldLabel:"Name",name:"chart_name",boxLabel:"Chart Name",tooltip:"Name assigned to the current chart.",allowBlank:!1,enableKeyEvents:!0,listeners:{scope:this,change:function(textbox,newValue,oldValue){if(this.chartNameTextbox.validate()){var newHtml=Ext.util.Format.htmlEncode(newValue);XDMoD.TrackEvent("Metric Explorer","Updated the Chart Name",Ext.encode({original_name:oldValue,new_name:newValue})),this.currentQueryRecord&&(this.chartOptionsButton.setText(truncateText(newHtml,XDMoD.Module.MetricExplorer.CHART_OPTIONS_MAX_TEXT_LENGTH)),this.chartOptionsButton.setTooltip(newHtml),this.currentQueryRecord.set("name",newHtml),this.currentQueryRecord.stack.add(this.currentQueryRecord.data))}else this.chartNameTextbox.focus()}}});var getBaseParams=function(){var baseParams={},title=this.chartTitleField.getValue();return baseParams.show_title="n",baseParams.timeseries=this.timeseries?"y":"n",baseParams.aggregation_unit=this.getDurationSelector().getAggregationUnit(),baseParams.start_date=this.getDurationSelector().getStartDate().format("Y-m-d"),baseParams.end_date=this.getDurationSelector().getEndDate().format("Y-m-d"),baseParams.global_filters=encodeURIComponent(Ext.util.JSON.encode(this.getGlobalFilters())),baseParams.title=title,baseParams.show_filters=this.show_filters,baseParams.show_warnings=this.show_warnings,baseParams.show_remainder=this.show_remainder,baseParams},enabledCheckColumn=new Ext.grid.CheckColumn({id:"enabled_dataset",sortable:!1,dataIndex:"enabled",header:"Enabled",scope:this,width:70,checkchange:function(rec,data_index,checked){XDMoD.TrackEvent("Metric Explorer","Toggled option in Data grid",Ext.encode({column:data_index,realm:rec.data.realm,metric:rec.data.metric,checked:checked})),enabledCheckColumn.checked=checked}}),onMouseDown=enabledCheckColumn.onMouseDown;enabledCheckColumn.onMouseDown=function(e,t){self.selectedDataSeriesIndex=this.grid.getView().findRowIndex(t);var enabled=this.grid.store.getAt(self.selectedDataSeriesIndex).get("enabled"),modifier=enabled?0:1,ignoredColumns=enabled?[self.selectedDataSeriesIndex]:[],includedColumns=enabled?[]:[self.selectedDataSeriesIndex];if(!self.validateChart(self._getDisplayTypes(!0,ignoredColumns,includedColumns),modifier))return!1;onMouseDown.call(enabledCheckColumn,e,t)};var logScaleCheckColumn=new Ext.grid.CheckColumn({id:"log_scale",sortable:!1,dataIndex:"log_scale",header:"Log",tooltip:"Use a logarithmic scale for this data",scope:this,width:30,checkchange:function(rec,data_index,checked){XDMoD.TrackEvent("Metric Explorer","Toggled option in Data grid",Ext.encode({column:data_index,realm:rec.data.realm,metric:rec.data.metric,checked:checked}))},renderer:function(v,p,record){var isPie=self.isPie();return p.css+=" x-grid3-check-col-td",this.disabledDataIndex&&!record.data[this.disabledDataIndex]||this.enabledNotDataIndex&&record.data[this.enabledNotDataIndex]?String.format('<div class="{0}">&#160;</div>',this.createId()):isPie?String.format('<div class="x-grid3-check-col{0} {1} x-item-disabled unselectable=on">&#160;</div>',v?"-on":"",this.createId()):String.format('<div class="x-grid3-check-col{0} {1}">&#160;</div>',v?"-on":"",this.createId())}}),logScaleMouseDown=logScaleCheckColumn.onMouseDown;logScaleCheckColumn.onMouseDown=function(event,comp){if(self.isPie())return!1;logScaleMouseDown.apply(logScaleCheckColumn,[event,comp])};var valueLabelsCheckColumn=new Ext.grid.CheckColumn({id:"value_labels",sortable:!1,dataIndex:"value_labels",header:"Labels",tooltip:"Show value labels in the chart",scope:this,width:50,checkchange:function(rec,data_index,checked){XDMoD.TrackEvent("Metric Explorer","Toggled option in Data grid",Ext.encode({column:data_index,realm:rec.data.realm,metric:rec.data.metric,checked:checked}))}}),stdErrCheckColumn=new Ext.grid.CheckColumn({id:"std_err",sortable:!1,dataIndex:"std_err",disabledDataIndex:"has_std_err",enabledNotDataIndex:"log_scale",header:"Err Bars",tooltip:"Show Standard Error Bars (Where applicable and non log scale)",scope:this,width:60,checkchange:function(rec,data_index,checked){XDMoD.TrackEvent("Metric Explorer","Toggled option in Data grid",Ext.encode({column:data_index,realm:rec.data.realm,metric:rec.data.metric,checked:checked}))}}),stdErrLabelsCheckColumn=new Ext.grid.CheckColumn({id:"std_err_labels",sortable:!1,dataIndex:"std_err_labels",disabledDataIndex:"has_std_err",enabledNotDataIndex:"log_scale",header:"Err Labels",tooltip:"Show Standard Error Labels (Where applicable and non log scale)",scope:this,width:60,checkchange:function(rec,data_index,checked){XDMoD.TrackEvent("Metric Explorer","Toggled option in Data grid",Ext.encode({column:data_index,realm:rec.data.realm,metric:rec.data.metric,checked:checked}))}}),longLegendCheckColumn=new Ext.grid.CheckColumn({id:"long_legend",sortable:!1,dataIndex:"long_legend",header:"Verbose Legend",tooltip:"Show filters in legend",scope:this,width:100,checkchange:function(rec,data_index,checked){XDMoD.TrackEvent("Metric Explorer","Toggled option in Data grid",Ext.encode({column:data_index,realm:rec.data.realm,metric:rec.data.metric,checked:checked}))}}),ignoreGlobalFiltersCheckColumn=new Ext.grid.CheckColumn({id:"ignore_global",sortable:!1,dataIndex:"ignore_global",header:"Ignore Chart Filters",tooltip:"Ingore Chart Filters",scope:this,width:140,checkchange:function(rec,data_index,checked){XDMoD.TrackEvent("Metric Explorer","Toggled option in Data grid",Ext.encode({column:data_index,realm:rec.data.realm,metric:rec.data.metric,checked:checked}))}}),trendLineCheckColumn=new Ext.grid.CheckColumn({id:"trend_line",sortable:!1,dataIndex:"trend_line",header:"Trend Line",tooltip:"Show Trend Line",scope:this,width:80,hidden:!this.timeseries,checkchange:function(rec,data_index,checked){XDMoD.TrackEvent("Metric Explorer","Toggled option in Data grid",Ext.encode({column:data_index,realm:rec.data.realm,metric:rec.data.metric,checked:checked}))}});this.datasetStore=new Ext.data.JsonStore({root:"data",autoDestroy:!0,idIndex:0,fields:["id","metric","category","realm","group_by","x_axis","log_scale","has_std_err","std_err","std_err_labels","value_labels","display_type","line_type","line_width","combine_type","sort_type","filters","ignore_global","long_legend","trend_line","color","shadow","visibility",{name:"z_index",convert:function(v){return null==v||""===v?null:v}},{name:"enabled",convert:function(v){return!1!==v}}]}),this.datasetStoreOnUpdate=function(s,record,operation){if(!1===this.saveQueryFunc(!1))return!1;this.dataCatalogTreeOnDatasetUpdate.call(this,record)},this.datasetStore.on("update",this.datasetStoreOnUpdate,this),this.datasetStore.on("load",function(s,records,opts){this.dataCatalogTreeOnDatasetLoad.call(this,records)},this),this.datasetStore.on("clear",function(s,records,opts){var catalogRoot=this.dataCatalogTree.getRootNode();this.dataCatalogTreeOnDatasetClear.call(this,records,catalogRoot)},this),this.datasetStoreOnAdd=function(s,records,index){this.saveQueryFunc(!1),this.dataCatalogTreeOnDatasetAdd.call(this,records,index)},this.datasetStore.on("add",this.datasetStoreOnAdd,this),this.datasetStoreOnRemove=function(s,record,index){this.saveQuery(),this.dataCatalogTreeOnDatasetRemove.call(this,record,index)},this.datasetStore.on("remove",this.datasetStoreOnRemove,this),this.addDatasetButton=new Ext.Button({iconCls:"add_data",text:"Add Data",tooltip:"Add a new metric to the currently loaded chart",menu:this.metricsMenu,handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Add Data button")}}),this.addFilterButton=new Ext.Button({scope:this,iconCls:"add_filter",text:"Add Filter",tooltip:"Add a global filter to the currently loaded chart",menu:this.filtersMenu,handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Create Filter button")}}),this.getDataset=function(datasetId){var record=null,sm=this.datasetsGridPanel.getSelectionModel();if(null!=datasetId){var datasetIndex=this.datasetStore.findBy(function(_record,_id){if(Math.abs(datasetId-_record.data.id)<1e-14)return!0},this);if(datasetIndex<0)return null;sm.selectRow(datasetIndex),record=sm.getSelected()}return record},this.editDataset=function(datasetId){var self=this,record=null,sm=this.datasetsGridPanel.getSelectionModel();if(null!=datasetId){var datasetIndex=this.datasetStore.findBy(function(_record,_id){if(Math.abs(datasetId-_record.data.id)<1e-14)return!0},this);if(datasetIndex<0)return;sm.selectRow(datasetIndex),record=sm.getSelected()}else record=sm.getSelected();var addDataPanel=new CCR.xdmod.ui.AddDataPanel({scope:this,update_record:!0,record:record,realms:this.realms,timeseries:this.timeseries,dimensionsCombo:this.dimensionsCombo,cancel_function:function(){this.scope.fireEvent("enable_commit",!1),addDataMenu.closable=!0,addDataMenu.close()},add_function:function(){this.scope.fireEvent("enable_commit",!0),addDataMenu.closable=!0,addDataMenu.close(),"pie"===this.record.data.display_type?this.scope.fireEvent("disable_pie"):this.scope.fireEvent("enable_pie"),this.scope.saveQuery()},validate:function(field,value){return!!CCR.isType(field,CCR.Types.String)&&("display_type"!==field||(this._updateDisplayType(field,value),this._validateDisplayType(value)))},_updateDisplayType:function(field,next){"pie"===this.record.get(field)&&"pie"!==next&&(self.defaultMetricDisplayType=next,self.defaultMetricDisplayTypeField.setValue(next))},_validateDisplayType:function(value){var isAggregate=self.isAggregate();return self.validateChart([value],0,isAggregate)}}),originalListener=addDataPanel.displayTypeCombo.events.select.listeners[0],displayTypeSelect=function(combo,record,index){self.validateChart(self._getDisplayTypes(!0))&&originalListener.fn.call(addDataPanel,combo,record,index)};addDataPanel.on("render",function(){addDataPanel.displayTypeCombo.purgeListeners(),addDataPanel.displayTypeCombo.on("select",displayTypeSelect)});var addDataMenu=new Ext.Window({showSeparator:!1,resizable:!1,items:[addDataPanel],closable:!1,scope:this,ownerCt:this,listeners:{beforeclose:function(t){return t.closable},close:function(t){CCR.xdmod.ui.Viewer.dontUnmask=!1,addDataPanel.hideMenu(),t.scope.unmask()},show:function(t){CCR.xdmod.ui.Viewer.dontUnmask=!0,t.scope.mask(),t.scope.fireEvent("disable_commit")}}});Ext.menu.MenuMgr.hideAll(),addDataMenu.show();var xy=addDataMenu.el.getAlignToXY(this.datasetsGridPanel.toolbars[0].el,"tl-bl?");xy=addDataMenu.el.adjustForConstraints(xy),addDataMenu.setPosition(xy)};var editDatasetButton=new Ext.Button({iconCls:"edit_data",text:"Edit",tooltip:"Edit selected dataset",disabled:!0,scope:this,handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Dataset Edit button"),this.editDataset.call(this)}});this.removeDataset=function(datasetId){var sm=this.datasetsGridPanel.getSelectionModel();if(null!=datasetId){var datasetIndex=this.datasetStore.findBy(function(_record,_id){if(Math.abs(datasetId-_record.data.id)<1e-14)return!0},this);if(datasetIndex<0)return;sm.selectRow(datasetIndex);var record=sm.getSelected();this.datasetStore.remove(record)}else{var records=this.datasetsGridPanel.getSelectionModel().getSelections();this.datasetStore.remove(records)}};var removeDatasetButton=new Ext.Button({iconCls:"delete_data",text:"Delete",tooltip:"Delete selected dataset",disabled:!0,scope:this,handler:function(i){XDMoD.TrackEvent("Metric Explorer","Clicked on Dataset Delete button"),i.scope.removeDataset.call(i.scope)}});this.dimensionsCombo=CCR.xdmod.ui.getComboBox(this.allDimensions,["id","text"],"id","text",!1,"None"),this.metricsCombo=CCR.xdmod.ui.getComboBox(this.allMetrics,["id","text"],"id","text",!1,"None"),this.displayTypesCombo=CCR.xdmod.ui.getComboBox(CCR.xdmod.ui.AddDataPanel.display_types,["id","text"],"id","text",!1,"None"),this.lineTypesCombo=CCR.xdmod.ui.getComboBox(CCR.xdmod.ui.AddDataPanel.line_types,["id","text"],"id","text",!1,"Solid"),this.lineWidthsCombo=CCR.xdmod.ui.getComboBox(CCR.xdmod.ui.AddDataPanel.line_widths,["id","text"],"id","text",!1,2),this.combineTypesCombo=CCR.xdmod.ui.getComboBox(CCR.xdmod.ui.AddDataPanel.combine_types,["id","text"],"id","text",!1,"None"),this.sortTypesCombo=CCR.xdmod.ui.getComboBox(CCR.xdmod.ui.AddDataPanel.sort_types,["id","text"],"id","text",!1,"None"),this.datasetsGridPanelSMOnSelectionChange=function(sm){var disabled=sm.getCount()<=0;if(1==sm.getCount()){var record=sm.getSelections()[0],sel=record.data;this.dataCatalogTreeOnDatasetSelect.call(this,record),XDMoD.TrackEvent("Metric Explorer","Selected a dataset from the list",sel.realm+" -> "+sel.metric)}removeDatasetButton.setDisabled(disabled),editDatasetButton.setDisabled(disabled)},this.datasetsGridPanelSM=new Ext.grid.RowSelectionModel({singleSelect:!0,listeners:{selectionchange:{scope:this,fn:this.datasetsGridPanelSMOnSelectionChange}}}),this.datasetsGridPanel=new Ext.grid.GridPanel({header:!1,height:200,id:"grid_datasets_"+this.id,useArrows:!0,autoScroll:!0,sortable:!1,enableHdMenu:!1,margins:"0 0 0 0",loadMask:!0,sm:this.datasetsGridPanelSM,plugins:[enabledCheckColumn,logScaleCheckColumn,valueLabelsCheckColumn,stdErrCheckColumn,stdErrLabelsCheckColumn,longLegendCheckColumn,ignoreGlobalFiltersCheckColumn,trendLineCheckColumn],listeners:{scope:this,rowdblclick:function(t,rowIndex,e){XDMoD.TrackEvent("Metric Explorer","Double-clicked on dataset entry in list"),this.editDataset.call(this)}},store:this.datasetStore,viewConfig:{emptyText:'No data selected.<br/> Click on <img class="x-panel-inline-icon add_data" src="gui/lib/extjs/resources/images/default/s.gif" alt=""> to add data.'},columns:[enabledCheckColumn,{id:"category",tooltip:"The category the metric belongs to.",width:80,header:"Category",dataIndex:"realm",renderer:{fn:function(value){return Ext.util.Format.htmlEncode(XDMoD.Module.MetricExplorer.getCategoryForRealm(value))},scope:this}},{id:"metric",tooltip:"Metric",width:200,header:"Metric",renderer:CCR.xdmod.ui.gridComboRenderer(this.metricsCombo),dataIndex:"metric"},{id:"group_by",tooltip:"Group the results by this dimension",renderer:CCR.xdmod.ui.gridComboRenderer(this.dimensionsCombo),width:60,header:"Grouping",dataIndex:"group_by"},logScaleCheckColumn,valueLabelsCheckColumn,stdErrCheckColumn,stdErrLabelsCheckColumn,{id:"display_type",tooltip:"Display Type",renderer:CCR.xdmod.ui.gridComboRenderer(this.displayTypesCombo),width:60,header:"Display",dataIndex:"display_type"},{id:"line_type",tooltip:"Line Type",renderer:CCR.xdmod.ui.gridComboRenderer(this.lineTypesCombo),width:60,header:"Line",dataIndex:"line_type"},{id:"line_width",tooltip:"Line Width",renderer:CCR.xdmod.ui.gridComboRenderer(this.lineWidthsCombo),width:60,header:"Line Width",dataIndex:"line_width"},{id:"combine_type",tooltip:"Dataset Alignment - How the data bar/lines/areas are aligned relative to each other",renderer:CCR.xdmod.ui.gridComboRenderer(this.combineTypesCombo),width:100,header:"Align",dataIndex:"combine_type"},{id:"sort_type",tooltip:"Sort Type - How the data will be sorted",renderer:CCR.xdmod.ui.gridComboRenderer(this.sortTypesCombo),width:130,header:"Sort",dataIndex:"sort_type"},longLegendCheckColumn,ignoreGlobalFiltersCheckColumn,trendLineCheckColumn],tbar:[editDatasetButton,"-",removeDatasetButton]}),this.filtersStore=XDMoD.DataWarehouse.createFilterStore(),this.filtersStore.on("load",this.filterStoreLoad,this),this.filtersStore.on("add",function(){this.saveQuery()},this),this.filtersStore.on("remove",function(){this.saveQuery()},this),this.filtersStore.on("clear",function(){this.saveQuery()},this);var selectAllButton=new Ext.Button({text:"Select All",scope:this,handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Select All in Chart Filters pane"),this.filtersStore.each(function(r){r.set("checked",!0)})}}),clearAllButton=new Ext.Button({text:"Clear All",scope:this,handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Clear All in Chart Filters pane"),this.filtersStore.each(function(r){r.set("checked",!1)})}}),activeFilterCheckColumn=new Ext.grid.CheckColumn({id:"checked",sortable:!1,dataIndex:"checked",header:"Global",tooltip:"Check this column to apply filter globally",scope:this,width:50,hidden:!1,checkchange:function(record,data_index,checked){XDMoD.TrackEvent("Metric Explorer","Toggled filter checkbox",Ext.encode({dimension:record.data.dimension_id,value:record.data.value_name,checked:checked}))}}),removeFilterItem=new Ext.Button({iconCls:"delete_filter",tooltip:"Delete selected filter(s)",text:"Delete",disabled:!0,scope:this,handler:function(){XDMoD.TrackEvent("Metric Explorer","Clicked on Delete in Chart Filters pane");for(var records=this.filtersGridPanel.getSelectionModel().getSelections(),t=0;t<records.length;t++)XDMoD.TrackEvent("Metric Explorer","Confirmed deletion of filter",Ext.encode({dimension:records[t].data.dimension_id,value:records[t].data.value_name}));this.filtersGridPanel.store.remove(records)}}),applyFilterSelection=new Ext.Button({tooltip:"Apply selected filter(s)",text:"Apply",scope:this,handler:function(){XDMoD.TrackEvent("Metic Explorer","Clicked on Apply filter in Chart Filters pane"),self.saveQuery(),this.filtersStore.commitChanges()}}),cancelFilterSelection=new Ext.Button({tooltip:"Cancel filter selections",text:"Cancel",scope:this,handler:function(){this.filtersStore.rejectChanges()}});this.filtersGridPanel=new Ext.grid.GridPanel({header:!1,height:200,id:"grid_filters_"+this.id,useArrows:!0,autoScroll:!0,sortable:!1,enableHdMenu:!1,margins:"0 0 0 0",buttonAlign:"left",sm:new Ext.grid.RowSelectionModel({singleSelect:!1,listeners:{rowselect:function(sm,row_index,record){XDMoD.TrackEvent("Metric Explorer","Selected a chart filter",Ext.encode({dimension:record.data.dimension_id,value:record.data.value_name}))},rowdeselect:function(sm,row_index,record){XDMoD.TrackEvent("Metric Explorer","De-selected a chart filter",Ext.encode({dimension:record.data.dimension_id,value:record.data.value_name}))},selectionchange:function(sm){removeFilterItem.setDisabled(sm.getCount()<=0)}}}),plugins:[activeFilterCheckColumn],autoExpandColumn:"value_name",store:this.filtersStore,loadMask:!0,view:new Ext.grid.GroupingView({groupTextTpl:'{text} ({[values.rs.length]} {[values.rs.length > 1 ? "Items" : "Item"]})',emptyText:'No filters created.<br/> Click on <img class="x-panel-inline-icon add_filter" src="gui/lib/extjs/resources/images/default/s.gif" alt=""> to create filters.<br/><br/>Filters will apply to chart data, where the realm of the filter matches the data.'}),columns:[activeFilterCheckColumn,{id:"dimension",tooltip:"Dimension",renderer:CCR.xdmod.ui.gridComboRenderer(this.dimensionsCombo),width:150,header:"Dimension",dataIndex:"dimension_id"},{id:"value_name",tooltip:"Filter",width:150,header:"Filter",dataIndex:"value_name"},{id:"categories",tooltip:"Categories that this filter applies to",width:150,header:"Applicable Categories",dataIndex:"dimension_id",renderer:{fn:function(value){var realms=XDMoD.Module.MetricExplorer.getRealmsForDimension(value),categoryMapping={};Ext.each(realms,function(realm){var category=XDMoD.Module.MetricExplorer.getCategoryForRealm(realm);categoryMapping[category]=!0},this);var categories=Object.keys(categoryMapping);return categories.sort(),(categories=categories.map(Ext.util.Format.htmlEncode)).join(", ")},scope:this}}],tbar:[removeFilterItem],fbar:[clearAllButton,"-",selectAllButton,"->",applyFilterSelection,"-",cancelFilterSelection]});var filterButtonHandler=function(el,dim_id,dim_label,realms){if(dim_id&&dim_label){var addFilterMenu=XDMoD.DataWarehouse.createAddFilterWindow(dim_id,dim_label,realms,this.filtersStore,"Metric Explorer","");this.fireEvent("disable_commit"),addFilterMenu.items.items[0].on("ok",function(){self.fireEvent("enable_commit",!0)}),addFilterMenu.items.items[0].on("cancel",function(){self.fireEvent("enable_commit",!1)}),addFilterMenu.show(),addFilterMenu.center();var xy=addFilterMenu.el.getAlignToXY(this.filtersGridPanel.toolbars[0].el,"tl-bl?");xy=addFilterMenu.el.adjustForConstraints(xy),addFilterMenu.setPosition(xy)}},addDataButtonHandler=function(el,metric,realm,realms){var config=Ext.apply({},this.defaultDatasetConfig);Ext.apply(config,{realm:realm,metric:metric});var addDataPanel=new CCR.xdmod.ui.AddDataPanel({config:config,store:this.datasetsGridPanel.store,realms:realms,timeseries:this.timeseries,dimensionsCombo:this.dimensionsCombo,cancel_function:function(){addDataMenu.closable=!0,addDataMenu.close()},add_function:function(){addDataMenu.scope.datasetsGridPanel.store.add(this.record),addDataMenu.closable=!0,addDataMenu.close()}}),originalListener=addDataPanel.displayTypeCombo.events.select.listeners[0],displayTypeSelect=function(combo,record,index){var chartType=combo.getValue();self.validateChart([chartType])&&originalListener.fn.call(addDataPanel,combo,record,index)};addDataPanel.on("render",function(){addDataPanel.displayTypeCombo.purgeListeners(),addDataPanel.displayTypeCombo.on("select",displayTypeSelect)});var addDataMenu=new Ext.Window({showSeparator:!1,items:[addDataPanel],closable:!1,scope:this,ownerCt:this,resizable:!1,listeners:{beforeclose:function(t){return t.closable},close:function(t){CCR.xdmod.ui.Viewer.dontUnmask=!1,addDataPanel.hideMenu(),t.scope.unmask()},show:function(t){CCR.xdmod.ui.Viewer.dontUnmask=!0,t.scope.mask()}}});addDataMenu.show(),addDataMenu.center();var xy=addDataMenu.el.getAlignToXY(el,"tl-bl?");xy=addDataMenu.el.adjustForConstraints(xy),addDataMenu.setPosition(xy)};this.queriesStore=new CCR.xdmod.CustomJsonStore({restful:!0,autoSave:!1,proxy:new Ext.data.HttpProxy({api:{read:{url:"rest/v1/metrics/explorer/queries",method:"GET"},create:{url:"rest/v1/metrics/explorer/queries",method:"POST"},update:{url:"rest/v1/metrics/explorer/queries",method:"POST"},destroy:{url:"rest/v1/metrics/explorer/queries",method:"DELETE"}}}),idProperty:"recordid",root:"data",fields:[{name:"name",sortType:Ext.data.SortTypes.asUCString},"config","ts","recordid"],sortInfo:{field:"ts",direction:"DESC"},writer:new Ext.data.JsonWriter({encode:!0,writeAllFields:!1}),listeners:{scope:this,write:function(store,action,result,res,rs){var sm=this.queriesGridPanel.getSelectionModel(),recIndex=store.findBy(function(record){if(record.get("recordid")===rs.id)return!0});-1<recIndex&&"create"===action&&sm.selectRow(recIndex,!1)},beforesave:function(store,data){for(var key in data)if(data.hasOwnProperty(key)){for(var found=null,i=0;i<data[key].length;i++)if(this.currentQueryRecord===data[key][i]){found=i;break}null!==found?(data[key].splice(0,found),data[key].splice(1,data[key].length)):data[key].splice(0,data[key].length)}}}});var newChartHandler=function(b){XDMoD.TrackEvent("Metric Explorer","Clicked on New Chart button");var createQueryHandler=function(){var text=Ext.util.Format.htmlEncode(nameField.getValue());if(""===text)Ext.Msg.alert("Name Invalid","Please enter a valid name");else if(this.queriesStore.findBy(function(record){if(record.get("name")===text)return!0})<0){var preserve=preserveFilters.getValue();this.reset(preserve);var initialConfig={show_warnings:!0,timeseries:b.timeseries,defaultDatasetConfig:{display_type:b.value}};this.createQueryFunc(null,null,text,void 0,preserve,initialConfig),win.close()}else Ext.Msg.alert("Name in use","Please enter a unique name")},preserveFilters=new Ext.form.Checkbox({xtype:"checkbox",listeners:{scope:this,check:function(checkbox,check){XDMoD.TrackEvent("Metric Explorer","New Chart -> Clicked the Preserve Filters checkbox",Ext.encode({checked:check}))}}}),nameField=new Ext.form.TextField({fieldLabel:"Chart Name",listeners:{scope:this,specialkey:function(field,e){e.getKey()==e.ENTER&&(XDMoD.TrackEvent("Metric Explorer","New Chart -> Pressed enter in textbox",Ext.encode({input_text:field.getValue()})),createQueryHandler.call(this))},afterrender:function(){nameField.focus(!0,100)}}}),win=new Ext.Window({width:300,resizable:!1,modal:!0,title:"New Chart",layout:"fit",scope:this,items:nameField,listeners:{close:function(){XDMoD.TrackEvent("Metric Explorer","New Chart prompt closed")}},buttons:[new Ext.Toolbar.TextItem("Preserve Filters"),preserveFilters,{text:"Ok",scope:this,handler:function(){XDMoD.TrackEvent("Metric Explorer","New Chart -> Clicked on Ok"),createQueryHandler.call(this)}},{text:"Cancel",handler:function(){XDMoD.TrackEvent("Metric Explorer","New Chart -> Clicked on Cancel"),win.close()}}]});win.show(this)},newChartMenuItems=[];Ext.each(["Timeseries","Aggregate"],function(pmi){this.display_type;newChartMenuItems.push({text:pmi,xtype:"menuitem",menu:new Ext.menu.Menu({id:"me_new_chart_submenu_"+pmi.replace(/\s/g,"_"),ignoreParentClicks:!0,items:this.getDisplayTypeItems(void 0,"menuitem",void 0,newChartHandler,this,{newChart:!0,timeseries:"Timeseries"===pmi})})})},this),this.createQuery=new Ext.Button({xtype:"button",tooltip:"Create a New Chart",text:"New Chart",iconCls:"new_ue",scope:this,menu:new Ext.menu.Menu({id:"me_new_chart_menu",ignoreParentClicks:!0,items:newChartMenuItems})}),this.saveAsQuery=new Ext.Button({xtype:"button",text:"Save As",tooltip:"Save the current chart under a new name",iconCls:"save_as",scope:this,handler:function(b){XDMoD.TrackEvent("Metric Explorer","Clicked on Save As button"),Ext.Msg.prompt("Save As","Please enter a name for the chart:",function(btn,text){if("ok"==btn)if(XDMoD.TrackEvent("Metric Explorer","Save As -> Confirmed new name",Ext.encode({text_field:text})),""===text)Ext.Msg.alert("Name Invalid","Please enter a valid name");else if(this.queriesStore.findBy(function(record){if(record.get("name")===text)return!0})<0)if(self.currentQueryRecord.phantom)self.queriesStore.suspendEvents(),self.currentQueryRecord.set("name",text),self.fireEvent("save_changes"),self.queriesStore.resumeEvents();else{var config=self.getConfig();self.createQueryFunc(null,null,text,config),self.fireEvent("save_changes")}else Ext.Msg.alert("Name in use","Please enter a unique name");else XDMoD.TrackEvent("Metric Explorer","Closed Save As prompt")},this,!1)}}),this.deleteQuery=new Ext.Button({xtype:"button",text:"Delete",iconCls:"delete2",tooltip:"Delete the currently selected chart",scope:this,handler:function(b,e){XDMoD.TrackEvent("Metric Explorer","Clicked on Delete selected chart button");var deletionMessageSubject,rec=this.queriesGridPanel.getSelectionModel().getSelected();deletionMessageSubject=rec?'"'+rec.get("name")+'"':"your scratchpad chart",Ext.Msg.show({scope:this,maxWidth:800,minWidth:400,title:"Delete Selected Chart",icon:Ext.MessageBox.QUESTION,msg:"Are you sure you want to delete "+deletionMessageSubject+"?<br><b>This action cannot be undone.</b>",buttons:Ext.Msg.YESNO,fn:function(resp){var trackingData;"yes"===resp?(rec?(trackingData=rec.data.name,this.queriesStore.remove(rec),this.queriesStore.save()):trackingData="(scratchpad chart)",this.reset(),this.createQueryFunc.call(this,null,null,null,null,null,null,!1),this.reloadChart.call(this),XDMoD.TrackEvent("Metric Explorer","Confirmed deletion of chart",trackingData)):XDMoD.TrackEvent("Metric Explorer","Dismissed chart deletion confirm dialog")}})}});var searchField=new Ext.form.TwinTriggerField({xtype:"twintriggerfield",validationEvent:!1,validateOnBlur:!1,trigger1Class:"x-form-clear-trigger",trigger2Class:"x-form-search-trigger",hideTrigger1:!0,enableKeyEvents:!0,emptyText:"Search",onTrigger1Click:function(){XDMoD.TrackEvent("Metric Explorer","Cleared chart search field"),this.store.clearFilter(),this.el.dom.value="",this.triggers[0].hide()},onTrigger2Click:function(){var v=this.getRawValue();v.length<1?this.onTrigger1Click():(XDMoD.TrackEvent("Metric Explorer","Using chart search field",Ext.encode({search_string:v})),this.store.filter("name",v,!0,!0),this.triggers[0].show())},listeners:{scope:this,specialkey:function(field,e){e.getKey()==e.ENTER&&searchField.onTrigger2Click()}}});this.queriesGridPanelSMRowSelect=function(t,rowIndex,r){XDMoD.TrackEvent("Metric Explorer","Selected chart from list",r.data.name),Ext.menu.MenuMgr.hideAll(),this.chartNameTextbox.setValue(Ext.util.Format.htmlDecode(r.data.name)),this.chartOptionsButton.setText(truncateText(r.data.name,XDMoD.Module.MetricExplorer.CHART_OPTIONS_MAX_TEXT_LENGTH)),this.chartOptionsButton.setTooltip(r.data.name),this.loadQuery(Ext.util.JSON.decode(r.data.config),!0),this.selectedIndex=rowIndex,this.currentQueryRecord=r,this.currentQueryRecord.stack||(this.currentQueryRecord.set("config",Ext.util.JSON.encode(this.getConfig())),this.currentQueryRecord.stack=new XDMoD.ChangeStack({baseParams:r.data,listeners:{update:function(changeStack,record,action){self.handleChartModification(changeStack,record,action)}}}),this.currentQueryRecord.stack.mark()),this.handleChartModification(this.currentQueryRecord.stack,r.data,"chartselected")},this.queriesGridPanelSM=new Ext.grid.RowSelectionModel({singleSelect:!0,handleMouseDown:function(g,rowIndex,e){if(0===e.button&&!this.isLocked()){var view=this.grid.getView();if(e.shiftKey&&!this.singleSelect&&!1!==this.last){var last=this.last;this.selectRange(last,rowIndex,e.ctrlKey),this.last=last,view.focusRow(rowIndex)}else{var isSelected=this.isSelected(rowIndex);e.ctrlKey&&isSelected||(!isSelected||1<this.getCount())&&(this.selectRow(rowIndex,e.ctrlKey||e.shiftKey),view.focusRow(rowIndex))}}}}),this.queriesGridPanelSM.on("rowselect",this.queriesGridPanelSMRowSelect,this),this.queriesGridPanel=new Ext.grid.GridPanel({tbar:[searchField],height:300,autoScroll:!0,rowNumberer:!0,border:!0,stripeRows:!0,enableHdMenu:!1,autoExpandColumn:"name",scope:this,viewConfig:{getRowClass:function(record,index,rowParams){return record.stack&&!record.stack.isMarked()?rowParams.tstyle+="color: #AA0000;":rowParams.tstyle+="color: #000000;",""}},flex:80,store:this.queriesStore,columns:[{header:"Chart Name",id:"name",dataIndex:"name",renderer:function(name,metaData){return 73<name.length&&(metaData.attr+='ext:qtip="'+Ext.util.Format.htmlEncode(name)+'"'),name},sortable:!0},{header:"Last Modified",width:140,dataIndex:"ts",align:"center",renderer:function(ts,metaData,record){return record.stack&&!record.stack.isMarked()&&(metaData.css="metric-explorer-dirty-chart-record",metaData.attr+='ext:qtip="Unsaved Chart"'),Ext.util.Format.date(new Date(1e3*ts).toString(),"Y-m-d H:i:s")},sortable:!0}],sm:this.queriesGridPanelSM}),searchField.store=this.queriesStore,this.dataCatalogTree=new Ext.tree.TreePanel({useArrows:!0,autoScroll:!0,animate:!1,enableDD:!1,containerScroll:!0,margins:"0 0 0 0",border:!1,region:"center",rootVisible:!1,root:{text:"Data",type:"root",nodeType:"node",draggable:!1},listeners:{checkchange:{scope:this,fn:function(node,checked){var record_id=node.id,record_index=this.datasetStore.findBy(function(record){if(record.get("id")===record_id)return!0});if(-1<record_index){var additionalDatasets=checked?1:0,record=this.datasetStore.getAt(record_index);if(self.validateChart([record.get("display_type")||""],additionalDatasets))return this.datasetStore.un("update",this.datasetStoreOnUpdate,this),record.set("enabled",1==checked),this.saveQuery(!0),this.datasetStore.on("update",this.datasetStoreOnUpdate,this),!0;var toggleCheck=node.ui.toggleCheck;return node.ui.toggleCheck=function(checked){var cb=this.checkbox;return!!cb&&(void 0===checked&&(checked=!1===this.isChecked()),!0===checked?Ext.fly(cb).replaceClass("x-tree-node-grayed","x-tree-node-checked"):!1!==checked?Ext.fly(cb).replaceClass("x-tree-node-checked","x-tree-node-grayed"):Ext.fly(cb).removeClass(["x-tree-node-checked","x-tree-node-grayed"]),this.node.attributes.checked=checked)},node.ui.toggleCheck(!checked),node.ui.toggleCheck=toggleCheck,!1}}}}}),this.dataCatalogTreeOnDatasetSelect=function(record){if(record){var nodeToSelect=this.dataCatalogTree.getRootNode().findChild("id",record.id,!0);nodeToSelect&&this.dataCatalogTree.getSelectionModel().select(nodeToSelect)}},this.dataCatalogTreeOnDatasetLoad=function(records){var catalogRoot=this.dataCatalogTree.getRootNode();this.dataCatalogTreeOnDatasetClear.call(this,records,catalogRoot);var addFunc=function(record){this.addDatasetToCatalogTree.call(this,record,catalogRoot)};records?Ext.each(records,addFunc,this):this.datasetStore.each(addFunc,this),this.updateAvailableFilterList()},this.dataCatalogTreeOnDatasetClear=function(records,catalogRoot){catalogRoot.cascade(function(node){node.attributes.type&&"metric"==node.attributes.type&&(node.removeAll(!0),node.collapse())},this),this.dataCatalogTree.collapseAll()},this.dataCatalogTreeOnDatasetUpdate=function(record){var catalogRoot=this.dataCatalogTree.getRootNode();this.dataCatalogTreeOnDatasetRemove.call(this,record),this.addDatasetToCatalogTree.call(this,record,catalogRoot)},this.getEnabledRealmsList=function(records){var enabledList=[],getEnabled=function(record){var realm=record.get("realm");!0===record.get("enabled")&&-1===enabledList.indexOf(realm)&&enabledList.push(realm)};return records?Ext.each(records,getEnabled,this):this.datasetStore.each(getEnabled,this),enabledList},this.updateRawDataWindowVisibility=function(show){"boolean"==typeof(show=void 0!==show?show:CCR.xdmod.ui.metricExplorer.rawDataShowing)&&CCR.xdmod.ui.metricExplorer.rawdataWindow&&(!0===show?CCR.xdmod.ui.metricExplorer.rawdataWindow.show():CCR.xdmod.ui.metricExplorer.rawdataWindow.hide())},this.updateAvailableFilterList=function(){var enabledRealms=this.getEnabledRealmsList();this.filtersMenu.items.each(function(item){var iRealms=item.realms;if(void 0!==iRealms)if(Ext.isEmpty(enabledRealms))item.show();else{for(var realmInItem=!1,i=0;i<enabledRealms.length&&!(realmInItem=-1<iRealms.indexOf(enabledRealms[i]));i++);item.setVisible(realmInItem)}})},this.addDatasetToCatalogTree=function(r,catalogRoot){var realm=r.get("realm"),dimension=r.get("group_by"),metric=r.get("metric"),enabled=r.get("enabled"),metricNodeId=realm+"_"+metric,categoryNode=catalogRoot.findChild("id",XDMoD.Module.MetricExplorer.getCategoryForRealm(realm)),datasetNodeText="none"!=dimension?"by "+this.realms[realm].dimensions[dimension].text:"Summary";categoryNode.expand(!1,!1,function(){var metricNode=categoryNode.findChild("id",metricNodeId);metricNode.expand(!1,!1,function(){var datasetNode={type:"dataset",id:r.get("id"),text:datasetNodeText,checked:!1!==enabled,leaf:!0,iconCls:"metric",listeners:{click:{scope:this,fn:function(n){XDMoD.Module.MetricExplorer.seriesContextMenu(null,!1,n.id,void 0,this)}}}};metricNode.appendChild(datasetNode)},this)},this)},this.dataCatalogTreeOnDatasetAdd=function(records,index){var catalogRoot=this.dataCatalogTree.getRootNode();Ext.each(records,function(r,i,recs){this.addDatasetToCatalogTree.call(this,r,catalogRoot)},this),this.updateAvailableFilterList()},this.dataCatalogTreeOnDatasetRemove=function(record){var recId=record.get("id"),datasetNode=this.dataCatalogTree.getRootNode().findChild("id",recId,!0);datasetNode&&datasetNode.remove(!0),this.updateAvailableFilterList()};var leftPanel=new Ext.Panel({title:"Metric Catalog",split:!0,collapsible:!0,collapsed:!0,collapseFirst:!1,pinned:!1,width:375,layout:"border",region:"west",margins:"2 0 2 2",border:!0,plugins:new Ext.ux.collapsedPanelTitlePlugin("Metric Catalog"),items:[this.dataCatalogTree],listeners:{collapse:function(){},expand:function(p){p.pinned?(p.getTool("pin").hide(),p.getTool("unpin").show()):(p.getTool("pin").show(),p.getTool("unpin").hide())}},tools:[{id:"pin",qtip:"Prevent auto hiding of Metric Catalog",hidden:!1,handler:function(ev,toolEl,p){p.pinned=!0,p.collapsed&&p.expand(!1),p.getTool("pin").hide(),p.getTool("unpin").show()}},{id:"unpin",qtip:"Allow auto hiding of Metric Catalog",hidden:!0,handler:function(ev,toolEl,p){p.pinned=!1,p.getTool("pin").show(),p.getTool("unpin").hide()}}]}),chartStore=new CCR.xdmod.CustomJsonStore({storeId:"hchart_store_"+this.id,autoDestroy:!1,root:"data",totalProperty:"totalCount",successProperty:"success",messageProperty:"message",fields:["chart","credits","title","subtitle","xAxis","yAxis","tooltip","legend","series","plotOptions","alignedLabels","credits","dimensions","metrics","exporting","reportGeneratorMeta"],baseParams:{operation:"get_data"},proxy:new Ext.data.HttpProxy({method:"POST",url:"controllers/metric_explorer.php"})});function initBaseParams(){chartStore.baseParams={},Ext.apply(chartStore.baseParams,getBaseParams.call(this)),chartStore.baseParams.start=this.show_remainder?0:this.chartPagingToolbar.cursor,chartStore.baseParams.limit=this.chartPagingToolbar.pageSize,this.maximizeScale.call(this);var dataSeries=this.getDataSeries();chartStore.dataSeriesLength=dataSeries.length,chartStore.baseParams.timeframe_label=this.getDurationSelector().getDurationLabel(),chartStore.baseParams.operation="get_data",chartStore.baseParams.data_series=encodeURIComponent(Ext.util.JSON.encode(dataSeries)),chartStore.baseParams.swap_xy=this.swap_xy,chartStore.baseParams.share_y_axis=this.share_y_axis,chartStore.baseParams.hide_tooltip=this.hide_tooltip,chartStore.baseParams.show_guide_lines="y",chartStore.baseParams.show_title="y",chartStore.baseParams.showContextMenu="y",chartStore.baseParams.scale=1,chartStore.baseParams.format="hc_jsonstore",chartStore.baseParams.width=chartWidth*chartScale,chartStore.baseParams.height=chartHeight*chartScale,chartStore.baseParams.legend_type=this.legendTypeComboBox.getValue(),chartStore.baseParams.font_size=this.fontSizeSlider.getValue(),chartStore.baseParams.featured=this.featured,chartStore.baseParams.trendLineEnabled=this.trendLineEnabled,chartStore.baseParams.x_axis=encodeURIComponent(Ext.util.JSON.encode(this.xAxis)),chartStore.baseParams.y_axis=encodeURIComponent(Ext.util.JSON.encode(this.yAxis)),chartStore.baseParams.legend=encodeURIComponent(Ext.util.JSON.encode(this.legend)),chartStore.baseParams.defaultDatasetConfig=encodeURIComponent(Ext.util.JSON.encode(this.legend)),chartStore.baseParams.controller_module=self.getReportCheckbox().getModule()}chartStore.on("beforeload",function(){this.getDurationSelector().validate()&&(this.mask("Loading..."),highChartPanel.un("resize",onResize,this),initBaseParams.call(this))},this),chartStore.on("load",function(chartStore){if(this.firstChange=!0,1==chartStore.getCount()){var noData=0===chartStore.dataSeriesLength;this.chartViewPanel.getLayout().setActiveItem(noData?1:0),noData?leftPanel.expand():leftPanel.pinned||leftPanel.collapse(),self.getExportMenu().setDisabled(noData),self.getPrintButton().setDisabled(noData),self.getReportCheckbox().setDisabled(noData);var reportGeneratorMeta=chartStore.getAt(0).get("reportGeneratorMeta");self.getReportCheckbox().storeChartArguments(reportGeneratorMeta.chart_args,reportGeneratorMeta.title,reportGeneratorMeta.params_title,reportGeneratorMeta.start_date,reportGeneratorMeta.end_date,reportGeneratorMeta.included_in_report);var has_title=reportGeneratorMeta.title&&0<reportGeneratorMeta.title.length;self.setExportDefaults(has_title),highChartPanel.on("resize",onResize,this),this.chartPagingToolbar.setPagingEnabled(!this.show_remainder);var pagingData=this.chartPagingToolbar.getPageData();pagingData.activePage>pagingData.pages&&this.chartPagingToolbar.changePage(1),updateDescription(noData?null:chartStore),this.unmask()}else this.unmask()},this),chartStore.on("exception",function(thisProxy,type,action,options,response,arg){if("response"===type){var data=CCR.safelyDecodeJSONResponse(response)||{};if(data.code===XDMoD.Error.QueryUnavailableTimeAggregationUnit){this.unmask();var durationToolbar=self.getDurationSelector();durationToolbar.setAggregationUnit("Auto"),durationToolbar.onHandle();var errorMessage="The selected aggregation unit is not available for all enabled metrics.<br />The aggregation unit has been reset to auto.",errorData=data.errorData;if(errorData){var errorMessageExtraData="";errorData.realm&&(errorMessageExtraData+="<br />Realm: "+Ext.util.Format.htmlEncode(errorData.realm)),errorData.unit&&(errorMessageExtraData+="<br />Unavailable Unit: "+Ext.util.Format.capitalize(Ext.util.Format.htmlEncode(errorData.unit))),errorMessageExtraData&&(errorMessage+="<br />"+errorMessageExtraData)}return void Ext.MessageBox.alert("Metric Explorer",errorMessage)}}var responseMessage=CCR.xdmod.ui.extractErrorMessageFromResponse(response);null===responseMessage&&(responseMessage="Unknown Error"),highChartPanel.displayError("An error occurred while loading the chart.",responseMessage),this.chartViewPanel.getLayout().setActiveItem(this.highChartPanel.getId()),this.unmask()},this),this.reloadChartFunc=function(){chartStore.load({callback:function(){this.queriesGridPanel.view.refresh()},scope:this})};var reloadChartTask=new Ext.util.DelayedTask(this.reloadChartFunc,this);this.reloadChart=function(delay){reloadChartTask.delay(delay||XDMoD.Module.MetricExplorer.delays.medium)},this.saveQuery=function(commitChanges){this.disableSave||!0===this.disableSave||this.saveQueryFunc(commitChanges)},this.chartDefaultPageSize||(this.chartDefaultPageSize=10),this.chartPageSizeField=new Ext.form.NumberField({id:"chart_size_field_"+this.id,fieldLabel:"Chart Size",name:"chart_size",minValue:1,maxValue:50,allowDecimals:!1,decimalPrecision:0,incrementValue:1,alternateIncrementValue:2,accelerate:!0,width:45,value:this.chartDefaultPageSize,listeners:{scope:this,change:function(t,newValue,oldValue){t.isValid(!1)&&newValue!=t.ownerCt.pageSize&&(XDMoD.TrackEvent("Metric Explorer","Changed page limit",newValue),t.ownerCt.pageSize=newValue,this.saveQuery(),t.ownerCt.doRefresh())},specialkey:function(t,e){t.isValid(!1)&&e.getKey()==e.ENTER&&(XDMoD.TrackEvent("Metric Explorer","Changed page limit",t.getValue()),t.ownerCt.pageSize=t.getValue(),this.saveQuery(),t.ownerCt.doRefresh())}}});var viewer=CCR.xdmod.ui.Viewer.getViewer(),viewerWidth=viewer.getWidth();this.queriesMenu=new Ext.menu.Menu({showSeparator:!1,items:this.queriesGridPanel,width:500,renderTo:document.body}),this.queriesButton=new Ext.Button({text:"Load Chart",iconCls:"loadsave",tooltip:"Load a previously created chart",menu:this.queriesMenu}),this.chartOptionsMenu=new Ext.menu.Menu({showSeparator:!1,items:{xtype:"fieldset",autoHeight:!0,layout:"form",hideLabels:!1,border:!1,defaults:{anchor:"0"},items:[this.datasetTypeRadioGroup,this.chartNameTextbox,this.chartTitleField,this.chartShowSubtitleField,this.showWarningsCheckbox,this.legendTypeComboBox,this.defaultMetricDisplayTypeField,this.fontSizeSlider,this.chartSwapXYField,this.shareYAxisField,this.hideTooltipField,this.featuredCheckbox,this.trendLineCheckbox]},width:370,renderTo:document.body}),this.chartOptionsMenu.keyNav&&(this.chartOptionsMenu.keyNav.doRelay=function(e,h){var k=e.getKey();return(!this.menu.activeItem||!this.menu.activeItem.isFormField||k==e.TAB)&&(!this.menu.activeItem&&e.isNavKeyPress()?(this.menu.tryActivate(0,1),!0):!e.isNavKeyPress()||h.call(this.scope||this,e,this.menu))},this.chartOptionsMenu.keyNav.down=function(e){var key=e.getKey(),target=e.target;32<=key&&key<=126&&(target.value+=String.fromCharCode(key))}),this.chartStatusButton=new XDMoD.Module.MetricExplorer.StatusButton({text:"Save",disabled:!0}),this.relayEvents(this.chartStatusButton,["save_changes","discard_changes"]),this.undoButton=new Ext.Button({text:"Undo",id:"metric_explorer_undo",iconCls:"x-btn-text-icon",icon:"../gui/images/arrow_undo.png",tooltip:"Undo the previous action",disabled:!0,handler:function(){self.currentQueryRecord.stack.undo()}}),this.redoButton=new Ext.Button({text:"Redo",id:"metric_explorer_redo",iconCls:"x-btn-text-icon",icon:"../gui/images/arrow_redo.png",tooltip:"Revert the most recent undo",disabled:!0,handler:function(){self.currentQueryRecord.stack.redo()}}),this.chartOptionsButton=new Ext.Button({iconCls:"chartoptions",menu:this.chartOptionsMenu}),this.chartDataMenu=new Ext.menu.Menu({showSeparator:!1,items:this.datasetsGridPanel,width:viewerWidth<1150?viewerWidth:1150,renderTo:document.body}),this.chartDataButton=new Ext.Button({text:"Data",iconCls:"metric",tooltip:"Lists the metrics that are being displayed for the currently selected chart",menu:this.chartDataMenu}),this.chartFiltersMenu=new Ext.menu.Menu({showSeparator:!1,items:this.filtersGridPanel,width:viewerWidth<1150?viewerWidth:1150,renderTo:document.body}),this.chartFiltersButton=new Ext.Button({text:"Filters",iconCls:"filter",tooltip:"Display the list of global filters that have been applied to the currently selected chart",menu:this.chartFiltersMenu}),viewer.on("resize",function(t){var w=t.getWidth();1150<w&&(w=1150);var wi=w-8;this.chartDataMenu.setWidth(w),this.datasetsGridPanel.setWidth(wi),this.chartFiltersMenu.setWidth(w),this.filtersGridPanel.setWidth(wi)},this),this.chartPagingToolbar=new CCR.xdmod.ui.CustomPagingToolbar({pageSize:this.chartDefaultPageSize,store:chartStore,beforePageText:"Page",displayInfo:!0,displayMsg:"Data Series {0} - {1} of {2}",scope:this,showRefresh:!1,preItems:["->"],items:["-",this.showRemainderCheckbox,"-","Page Limit",this.chartPageSizeField,"Data Series"],updateInfo:function(){var msg;this.displayItem&&(0<this.store.getCount()&&(msg=String.format(this.displayMsg,this.cursor+1,Math.min(this.store.getTotalCount(),this.cursor+this.pageSize),this.store.getTotalCount())),this.displayItem.setText(msg))}}),this.firstChange=!0,this.chartPagingToolbar.on("afterlayout",function(){this.chartPagingToolbar.on("change",function(total,pageObj){return XDMoD.TrackEvent("Metric Explorer","Loaded page of data",pageObj.activePage+" of "+pageObj.pages),this.firstChange&&(this.firstChange=!1),!0},this)},this,{single:!0});var assistPanel=new CCR.xdmod.ui.AssistPanel({region:"center",border:!1,headerText:"No data is available for viewing",subHeaderText:"Please refer to the instructions below:",graphic:"gui/images/metric_explorer_instructions.png",userManualRef:"metric+explorer",listeners:{afterrender:{scope:self,fn:function(comp){comp.getEl().on("click",function(){XDMoD.Module.MetricExplorer.chartContextMenu(null,!0,self)})}}}}),highChartPanel=new CCR.xdmod.ui.HighChartPanel({id:"hc-panel"+this.id,baseChartOptions:{chart:{events:{titleClick:function(event){return XDMoD.Module.MetricExplorer.titleContextMenu(event)},subtitleClick:function(event){return XDMoD.Module.MetricExplorer.subtitleContextMenu(event)},xAxisClick:function(axis){return XDMoD.Module.MetricExplorer.xAxisContextMenu(axis)},yAxisClick:function(axis){return XDMoD.Module.MetricExplorer.yAxisContextMenu(axis)},xAxisTitleClick:function(axis){return XDMoD.Module.MetricExplorer.xAxisTitleContextMenu(axis)},yAxisTitleClick:function(axis){return XDMoD.Module.MetricExplorer.yAxisTitleContextMenu(axis)},xAxisLabelClick:function(axis){return XDMoD.Module.MetricExplorer.xAxisLabelContextMenu(axis)},yAxisLabelClick:function(axis){return XDMoD.Module.MetricExplorer.yAxisLabelContextMenu(axis)},click:function(event){return XDMoD.Module.MetricExplorer.chartContextMenu.call(this,event)}}},plotOptions:{series:{events:{legendItemClick:function(){return XDMoD.Module.MetricExplorer.seriesContextMenu(this,!0,this.userOptions.datasetId),!1}},point:{events:{click:function(){this.options.x&&(this.ts=this.options.x),XDMoD.Module.MetricExplorer.pointContextMenu(this,this.series.userOptions.datasetId)}}}}}},store:chartStore});this.highChartPanel=highChartPanel;var quickFilterButton=XDMoD.DataWarehouse.createQuickFilterButton({autoAddMostPrivilegedRoleFilters:!1});this.quickFilterButton=quickFilterButton;var relayQuickFilterUpdateToGlobalFilters=function(quickFilterStore,quickFilterRecord){var dimensionId=quickFilterRecord.get("dimensionId"),valueId=quickFilterRecord.get("valueId"),filterId=dimensionId+"="+valueId,existingFilterIndex=this.filtersStore.find("id",filterId),nowChecked=quickFilterRecord.get("checked");if(0<=existingFilterIndex){var existingFilterRecord=this.filtersStore.getAt(existingFilterIndex);if(nowChecked===existingFilterRecord.get("checked"))return;existingFilterRecord.set("checked",nowChecked)}else{if(!nowChecked)return;this.filtersStore.addSorted(new this.filtersStore.recordType({id:filterId,value_id:valueId,value_name:quickFilterRecord.get("valueName"),dimension_id:dimensionId,checked:!0}))}};quickFilterButton.quickFilterStore.on("update",relayQuickFilterUpdateToGlobalFilters,this);var updateQuickFilters=function(){quickFilterButton.quickFilterStore.un("update",relayQuickFilterUpdateToGlobalFilters,this),quickFilterButton.quickFilterStore.each(function(quickFilterRecord){var filterId=quickFilterRecord.get("dimensionId")+"="+quickFilterRecord.get("valueId"),existingFilterIndex=this.filtersStore.find("id",filterId);if(existingFilterIndex<0)quickFilterRecord.set("checked",!1);else{var existingFilter=this.filtersStore.getAt(existingFilterIndex);quickFilterRecord.set("checked",existingFilter.get("checked"))}},this),quickFilterButton.quickFilterStore.on("update",relayQuickFilterUpdateToGlobalFilters,this)};this.filtersStore.on("add",updateQuickFilters,this),this.filtersStore.on("load",updateQuickFilters,this),this.filtersStore.on("remove",updateQuickFilters,this),this.filtersStore.on("update",updateQuickFilters,this),quickFilterButton.quickFilterStore.on("add",updateQuickFilters,this),this.chartViewPanel=new Ext.Panel({frame:!1,layout:"card",activeItem:0,tbar:new Ext.Toolbar({enableOverflow:!0,items:[this.queriesButton,"-",this.createQuery,this.saveAsQuery,this.chartStatusButton,this.undoButton,this.redoButton,"-",this.deleteQuery,"-",this.addDatasetButton,this.chartDataButton,"-",quickFilterButton,this.addFilterButton,this.chartFiltersButton,"-","->","-",this.chartOptionsButton]}),bbar:this.chartPagingToolbar,region:"center",border:!0,items:[highChartPanel,assistPanel]});var descriptionPanel=new Ext.Panel({region:"south",autoScroll:!0,collapsible:!0,split:!0,border:!0,title:"Description",height:120,plugins:[new Ext.ux.collapsedPanelTitlePlugin]}),commentsTemplate=new Ext.XTemplate('<table class="xd-table">',"<tr>",'<td width="100%">','<span class="comments_subnotes">{subnotes}</span>',"</td>","</tr>","<tr>",'<td width="100%">','<span class="comments_description">{comments}</span>',"</td>","</tr>","</table>");function updateDescription(chartStore){var dimsDesc="<ul>",metricsDesc="<ul>";if(null!==chartStore){for(var i=0;i<chartStore.getCount();i++){var md=chartStore.getAt(i).get("dimensions");for(var d in md)md.hasOwnProperty(d)&&(dimsDesc+="<li><b>"+d+":</b> "+md[d]+"</li>\n")}for(var k=0;k<chartStore.getCount();k++){var md2=chartStore.getAt(k).get("metrics");for(var e in md2)md2.hasOwnProperty(e)&&(metricsDesc+="<li><b>"+e+":</b> "+md2[e]+"</li>\n")}}dimsDesc+="</ul>\n",metricsDesc+="</ul>",commentsTemplate.overwrite(descriptionPanel.body,{comments:dimsDesc+metricsDesc,subnotes:""})}var viewGrid=new Ext.ux.DynamicGridPanel({id:"view_grid_"+this.id,storeUrl:"controllers/metric_explorer.php",autoScroll:!0,rowNumberer:!0,region:"center",remoteSort:!0,showHdMenu:!1,border:!1,usePaging:!0,lockingView:!1}),reloadViewTask=new Ext.util.DelayedTask(function(){viewGrid.store.baseParams={},Ext.apply(viewGrid.store.baseParams,getBaseParams.call(this)),viewGrid.store.baseParams.operation="get_data",viewGrid.store.baseParams.offset=viewGrid.bottomToolbar.cursor,viewGrid.store.baseParams.limit=viewGrid.bottomToolbar.pageSize,viewGrid.store.baseParams.format="jsonstore",viewGrid.store.load()},this);this.reloadViewGrid=function(delay){reloadViewTask.delay(delay||2300)};var view=new Ext.Panel({region:"center",layout:"border",margins:"2 2 2 0",border:!1,items:[this.chartViewPanel,descriptionPanel]});function onResize(){this.maximizeScale.call(this)}self.on("print_clicked",function(){initBaseParams.call(self);var parameters=chartStore.baseParams;parameters.operation="get_data",parameters.scale=1,parameters.format="png",parameters.start=this.chartPagingToolbar.cursor,parameters.limit=this.chartPagingToolbar.pageSize,parameters.width=1514,parameters.height=800,parameters.show_title="y";var params="";for(var i in parameters)parameters.hasOwnProperty(i)&&(params+=i+"="+parameters[i]+"&");params=params.substring(0,params.length-1),Ext.ux.Printer.print({getXTypes:function(){return"html"},html:'<img src="/controllers/metric_explorer.php?'+params+'" />'})}),self.on("export_option_selected",function(opts){initBaseParams.call(self);var parameters=chartStore.baseParams;Ext.apply(parameters,opts),CCR.invokePost("controllers/metric_explorer.php",parameters)}),this.loadAll=function(){this.queries_store_loaded_handler=function(){this.createQueryFunc.call(this,null,null,null,null,null,null,!1),this.reloadChart.call(this),this.maximizeScale.call(this)},this.dwdesc_loaded_handler=function(){this.queriesStore.on("load",this.queries_store_loaded_handler,this),this.queriesStore.load()},this.on("dwdesc_loaded",this.dwdesc_loaded_handler,this),this.dwDescriptionStore.load()},this.on("afterrender",this.loadAll,this,{single:!0}),this.maximizeScale=function(){chartWidth=this.chartViewPanel?this.chartViewPanel.getWidth():chartWidth,chartHeight=this.chartViewPanel?this.chartViewPanel.getHeight()-(this.chartViewPanel.tbar?this.chartViewPanel.tbar.getHeight():0):chartHeight},Ext.apply(this,{items:[leftPanel,view]}),XDMoD.Module.MetricExplorer.superclass.initComponent.apply(this,arguments),this.addEvents("dwdesc_loaded")},listeners:{activate:function(){this.updateRawDataWindowVisibility()},deactivate:function(){this.updateRawDataWindowVisibility(!1)},save_changes:function(){this.saveQueryFunc(!0)},discard_changes:function(){this.currentQueryRecord.stack.revertToMarked()},disable_commit:function(){this.currentQueryRecord.stack.disableAutocommit()},enable_commit:function(keepChanges){keepChanges&&this.currentQueryRecord.stack.commit(),this.currentQueryRecord.stack.enableAutocommit()},enable_pie:function(){this.addDatasetButton.enable(),this.dataCatalogTree.enable(),this.showRemainderCheckbox.enable()},disable_pie:function(){this.addDatasetButton.disable(),this.dataCatalogTree.disable(),this.showRemainderCheckbox.disable()},invalid_chart_display_type:function(msg){CCR.error("Invalid Chart Display Type",msg)}},_simpleSilentSetValue:function(component,value){this._noEvents(component,function(component,value){component.setValue(value)},value)},handleChartModification:function(changeStack,chartData,action){switch(action){case"undo":case"redo":case"reverttomarked":for(var value in this.currentQueryRecord.beginEdit(),chartData)chartData.hasOwnProperty(value)&&this.currentQueryRecord.set(value,chartData[value]);this.currentQueryRecord.endEdit(),this.chartNameTextbox.setValue(Ext.util.Format.htmlDecode(chartData.name)),this.chartOptionsButton.setText(truncateText(chartData.name,XDMoD.Module.MetricExplorer.CHART_OPTIONS_MAX_TEXT_LENGTH)),this.chartOptionsButton.setTooltip(chartData.name),this.loadQuery(JSON.parse(chartData.config),!0);break;case"add":this.reloadChart()}this.undoButton.setDisabled(!changeStack.canUndo()),this.redoButton.setDisabled(!changeStack.canRedo()),this.chartStatusButton.setDisabled(changeStack.empty()||changeStack.isMarked()),this.chartStatusButton.setButtonState(!changeStack.isMarked(),changeStack.canRevert()),this.saveAsQuery.setDisabled(changeStack.empty())},_noEvents:function(components,fn){var args;CCR.isType(components,CCR.Types.Array)?(this._map(components,"suspendEvents"),args=(args=this._filterObject(arguments,function(value,index){return 1<index})).concat(components),fn.apply(this,args),this._map(components,"resumeEvents")):CCR.isType(components,CCR.Types.Object)&&(components.suspendEvents(),args=this._filterObject(arguments,function(value,index){return 1<index}),args=[components].concat(args),fn.apply(this,args),components.resumeEvents())},_filterObject:function(object,filters,as_array){var value,result=(as_array=as_array||!0)?[]:{};if(object&&object.length)for(var i=0;i<object.length;i++)null!==(value=this._applyFilters(filters,object[i],i))&&as_array?result.push(object[i]):null===value||as_array||(result[i]=object[i]);else for(var key in object)object.hasOwnProperty(key)&&(null!==(value=this._applyFilters(filters,object[key],key))&&as_array?result.push(object[key]):null===value||as_array||(result[key]=object[key]));return result},_applyFilters:function(filters,value,index){var result=value;if(CCR.isType(filters,CCR.Types.Array))for(var i=0;i<filters.length;i++){var filter=filters[i];if(CCR.isType(filter,CCR.Types.Function)&&!filter(value,index))return null}else if(CCR.isType(filters,CCR.Types.Function)&&!filters(value,index))return null;return result},_map:function(objects,fn_name){if(CCR.isType(objects,CCR.Types.Array))for(var i=0;i<objects.length;i++){var item=objects[i];item&&item[fn_name]&&item[fn_name]()}},_getDisplayTypes:function(enabled,ignore_indexes,include_indexes){var self=this;ignore_indexes=ignore_indexes||[],include_indexes=include_indexes||[];var data=[];(enabled=enabled||!1)?this.datasetStore.each(function(record){var index=self.datasetStore.find("id",record.id),enabled=record.get("enabled"),ignoreIndex=0<=ignore_indexes.indexOf(index),includeIndex=0<=include_indexes.indexOf(index);(!0===enabled&&!ignoreIndex||includeIndex)&&data.push(record)}):data=this.datasetStore.getRange(0,this.datasetStore.getTotalCount());for(var results=[],i=0;i<data.length;i++){var displayType=data[i].get("display_type");results.indexOf(displayType)<0&&results.push(displayType)}return results},validateChart:function(displayTypes,additionalDataSets,isAggregate){displayTypes=displayTypes||[],additionalDataSets=additionalDataSets||0,isAggregate=CCR.exists(isAggregate)?isAggregate:this.isAggregate();var datasetsEnabled=this.datasetsEnabled()+additionalDataSets,isPie=0<=displayTypes.indexOf("pie"),currentDefaultMetricDisplayType=this.defaultMetricDisplayType,reasons=[];if(isPie&&!isAggregate&&reasons.push("You cannot display timeseries data in a pie chart.<br/> Please change the dataset or display type.<br/>"),isPie&&1<datasetsEnabled&&reasons.push("Cannot display more than one dataset in pie format <br/>Please disable datasets such that there is only one enabled.<br/>"),"pie"===currentDefaultMetricDisplayType&&isPie&&1<datasetsEnabled&&reasons.push('Cannot add a metric of display type "pie" to a chart with ',"other display types currently enabled.",'Please change the "Default Metric Display Type" ',"before attempting to add another metric.<br/>"),0<reasons.length){Ext.menu.MenuMgr.hideAll();var msg=reasons.join("<br/>");return this.fireEvent("squish_spider"),this.fireEvent("invalid_chart_display_type",msg),!1}return!0},validateChartType:function(config){var datasetsEnabled=this.datasetsEnabled(),displayTypes=this.getDisplayTypes(datasetsEnabled,config),isPie=this.isPie(displayTypes,datasetsEnabled,config),valid=this.validateChart(displayTypes);return valid&&(!0===isPie&&0<datasetsEnabled?this.fireEvent("disable_pie"):this.fireEvent("enable_pie"),this.syncTrendLineComponents()),valid},getDisplayTypes:function(datasetsEnabled,config){var record=this.currentQueryRecord||{};record.data=record.data||{},record.data.config=record.data.config||{},datasetsEnabled=datasetsEnabled||this.datasetsEnabled(),(config=config||record.data.config).defaultDatasetConfig=config.defaultDatasetConfig||{};var displayTypes=[];return 0<datasetsEnabled?displayTypes=this._getDisplayTypes(!0):CCR.exists(config.defaultDatasetConfig)&&CCR.exists(config.defaultDatasetConfig.display_type)&&(displayTypes=[config.defaultDatasetConfig.display_type]),displayTypes},isPie:function(displayTypes,datasetsEnabled,config){return 0<=(displayTypes=displayTypes||this.getDisplayTypes(datasetsEnabled,config)).indexOf("pie")},isAggregate:function(){return!(CCR.xdmod.ui.metricExplorer&&CCR.xdmod.ui.metricExplorer.timeseries||!1)},isTrendLineAvailable:function(){return!this.isAggregate()},syncTrendLineComponents:function(){var trendLineAvailable=this.isTrendLineAvailable();this.trendLineCheckbox.setDisabled(!trendLineAvailable)},datasetsEnabled:function(){var count=0,metricExplorer=CCR.xdmod.ui.metricExplorer,data=metricExplorer&&metricExplorer.datasetStore?metricExplorer.datasetStore:null;if(null!==data)for(var i=0;i<data.getCount();i++)data.getAt(i).get("enabled")&&count++;return count},getCurrentRecord:function(){var sm=this.queriesGridPanel.getSelectionModel(),selected=this.currentQueryRecord;return selected||(selected=sm.getSelected()),selected||(selected=this.queriesStore.getAt(this.selectedIndex)),selected},selectRowByIndex:function(index){var sm=this.queriesGridPanel.getSelectionModel();this.queriesGridPanelSM.un("rowselect",this.queriesGridPanelSMRowSelect,this),sm.selectRow(index),this.queriesGridPanelSM.on("rowselect",this.queriesGridPanelSMRowSelect,this),this.queriesGridPanel.getView().focusRow(index)}}),Ext.ns("XDMoD","XDMoD.Module","XDMoD.Module.MetricExplorer"),defaultButtonHandler=function(){var exists=CCR.exists,event=this.event,parent=exists(this.ownerCt)&&exists(this.ownerCt.ownerCt)?this.ownerCt.ownerCt:null;exists(parent)&&parent.fireEvent(event)},XDMoD.Module.MetricExplorer.StatusButton=Ext.extend(Ext.Button,{id:"me_chart_status_button",cls:"x-btn-text-icon",menu:{items:[{text:"Save Changes",icon:"../gui/images/disk.png",disabled:!0,event:"save_changes",handler:defaultButtonHandler},{text:"Revert Changes",icon:"../gui/images/query_stop.png",disabled:!0,event:"discard_changes",handler:defaultButtonHandler}]},tooltip:"Indicates whether or not the current set of changes have been saved.",dirtyIcon:"../gui/images/exclamation.png",cleanIcon:"../gui/images/accept.png",initComponent:function(){XDMoD.Module.MetricExplorer.StatusButton.superclass.initComponent.call(this,arguments)},setButtonState:function(saveAllowed,revertAllowed){this.menu.items.items[0].setDisabled(!saveAllowed),this.menu.items.items[1].setDisabled(!revertAllowed),saveAllowed?this.setIcon(this.dirtyIcon):this.setIcon(this.cleanIcon)}}),Ext.ns("XDMoD"),XDMoD.ChangeStack=Ext.extend(Ext.util.Observable,{constructor:function(config){config.baseParams?(this._stack=[Ext.apply({},config.baseParams)],delete config.baseParams):this._stack=[],this._stackPointer=this._stack.length-1,this._markedVersion=null,this._savedData=null,this._pending=null,this._autocommit=!0,this.addEvents("update"),Ext.apply(this,config),XDMoD.ChangeStack.superclass.constructor.call(this,config)},disableAutocommit:function(){this._autocommit=!1},commit:function(){null!==this._pending&&(this._addToStack(this._pending),this.fireEvent("update",this,this._pending,"commit"))},enableAutocommit:function(){this._autocommit=!0,this._pending=null},add:function(data){!1===this._autocommit?this._pending=Ext.apply({},data):this._addToStack(data),this.fireEvent("update",this,data,"add")},undo:function(){if(!this.canUndo())throw new Error("unable to undo");this._stackPointer-=1;var data=this._stack[this._stackPointer];this.fireEvent("update",this,data,"undo")},redo:function(){if(!this.canRedo())throw new Error("unable to redo");this._stackPointer+=1;var data=this._stack[this._stackPointer];this.fireEvent("update",this,data,"redo")},isMarked:function(){return this._markedVersion==this._stackPointer},canRevert:function(){return!1===this.isMarked()&&null!==this._savedData},mark:function(){if(0==this._stack.length)throw new Error("no data to mark");this._markedVersion=this._stackPointer,this._savedData=this._stack[this._stackPointer],this.fireEvent("update",this,this._savedData,"mark")},revertToMarked:function(){if(null===this._savedData)throw new Error("no version is marked");this._addToStack(this._savedData),this._markedVersion=this._stackPointer;var data=this._stack[this._stackPointer];this.fireEvent("update",this,data,"reverttomarked")},canUndo:function(){return 0<this._stack.length&&0<this._stackPointer},canRedo:function(){return 0<this._stack.length&&this._stackPointer<this._stack.length-1},empty:function(){return 0==this._stack.length},_addToStack:function(data){if(!data)throw new Error("must specify data");this.canRedo()&&(this._stack=this._stack.slice(0,this._stackPointer+1),this._markedVersion>this._stackPointer&&(this._markedVersion=null)),this._stack.push(Ext.apply({},data)),this._stackPointer=this._stack.length-1}}),xdmodviewer={init:function(){Ext.History.init(),Ext.QuickTips.init(),Ext.apply(Ext.QuickTips.getQuickTip(),{showDelay:400,dismissDelay:1e6}),(new CCR.xdmod.ui.Viewer).render("viewer")}},CCR.xdmod.ui.Viewer=function(config){CCR.xdmod.ui.Viewer.superclass.constructor.call(this,config)},Ext.apply(CCR.xdmod.ui.Viewer,{getViewer:function(){return CCR.xdmod.ui.Viewer.viewerInstance},refreshView:function(tab_id){var viewer=CCR.xdmod.ui.Viewer.getViewer();viewer.el&&viewer.el.mask("Loading...");var tree=Ext.getCmp("tree_tg_usage");if(tree){var nodeToSelect=tree.getSelectionModel().getSelectedNode();nodeToSelect?(tree.getSelectionModel().unselect(nodeToSelect,!0),tree.getSelectionModel().select(nodeToSelect)):viewer.el&&viewer.el.unmask()}else viewer.el&&viewer.el.unmask()},gotoChart:function(sub_role_category,menu_id,realm,id,durationSelectorId,chartToolbarSerialized){var viewer=CCR.xdmod.ui.Viewer.getViewer();viewer.el&&viewer.el.mask("Loading...");var tabPanel=Ext.getCmp("main_tab_panel");if(tabPanel){tabPanel.setActiveTab("tg_usage");var tree=Ext.getCmp("tree_tg_usage");if(tree){var root=tree.getRootNode();tree.expandPath(root.getPath(),null,function(success,node){if(success){var menuNode=node.findChild("id",menu_id);tree.expandPath(menuNode.getPath(),null,function(success2,node2){if(success2){var roleCategorySelector=Ext.getCmp("role_category_selector_tg_usage");roleCategorySelector&&roleCategorySelector.set(sub_role_category);var durationSelector=Ext.getCmp("duration_selector_tg_usage");if(durationSelector){var durationSelectorSerialized=Ext.getCmp(durationSelectorId).serialize(!0);durationSelector.unserialize(durationSelectorSerialized)}var nodeToSelect=node2.findChild("id",id);nodeToSelect?(tree.getSelectionModel().isSelected(nodeToSelect)&&tree.getSelectionModel().unselect(nodeToSelect,!0),nodeToSelect.attributes.chartSettings=chartToolbarSerialized.replace(/`/g,'"'),tree.getSelectionModel().select(nodeToSelect)):viewer.el&&viewer.el.unmask()}else viewer.el&&viewer.el.unmask()})}else viewer.el&&viewer.el.unmask()})}else viewer.el&&viewer.el.unmask()}else viewer.el&&viewer.el.unmask()}}),Ext.extend(CCR.xdmod.ui.Viewer,Ext.Viewport,{initComponent:function(){var self=this,viewStore=new Ext.data.JsonStore({url:"controllers/user_interface.php",autoDestroy:!0,autoLoad:!1,root:"data",successProperty:"success",messageProperty:"message",totalProperty:"totalCount",fields:["tabs"],baseParams:{operation:"get_tabs",public_user:CCR.xdmod.publicUser}});viewStore.on("exception",function(dp,type,action,opt,response,arg){0==response.success&&Ext.MessageBox.alert("Error",response.message)},this);var tabPanel=new Ext.TabPanel({id:"main_tab_panel",frame:!1,border:!1,activeTab:0,region:"center",enableTabScroll:!0,defaults:{tabCls:"tab-strip"},listeners:{tabchange:function(tabPanel,tab){var hasActiveTab=void 0!==CCR.xdmod.ui.activeTab&&null!==CCR.xdmod.ui.activeTab&&void 0!==CCR.xdmod.ui.activeTab.id&&null!==CCR.xdmod.ui.activeTab.id,hasTab=null!=tab&&void 0!==tab.id&&null!==tab.id,token=null;!hasActiveTab&&hasTab?(CCR.xdmod.ui.activeTab=tab,XDMoD.TrackEvent("Tab Change",tab.title),token=tabPanel.id+CCR.xdmod.ui.tokenDelimiter+tab.id,Ext.History.add(token)):hasActiveTab&&hasTab&&tab.id!==CCR.xdmod.ui.activeTab.id&&(CCR.xdmod.ui.activeTab=tab,XDMoD.TrackEvent("Tab Change",tab.title),token=tabPanel.id+CCR.xdmod.ui.tokenDelimiter+tab.id,Ext.History.add(token))}}});Ext.History.on("change",function(token){if(token){var parts="string"===typeof token?CCR.tokenize(token):token;if(!parts)return;var root=CCR.exists(parts.root)?parts.root:"main_tab_panel",tabPanel=Ext.getCmp(root);tabPanel||(tabPanel=Ext.getCmp("main_tab_panel"));var tabId=parts.tab?parts.tab:"tg_summary";-1===tabPanel.items.keys.indexOf(tabId)&&(tabId="tg_summary");var currentlyActive=tabPanel?tabPanel.getActiveTab():void 0;if(tabId!==(currentlyActive?currentlyActive.id:void 0)&&tabPanel)tabPanel.show(),tabPanel.suspendEvents(!1),tabPanel.setActiveTab(tabId),tabPanel.resumeEvents();else{var currentlyActiveTab=Ext.getCmp(tabId);currentlyActiveTab&&currentlyActiveTab.fireEvent("activate",currentlyActiveTab)}var akInstanceId=self.getParameterByName("ak_instance",document.location.hash);if(null!=akInstanceId&&0<akInstanceId.length){var akWindow=new XDMoD.AppKernel.InstanceWindow({instanceId:akInstanceId}),outputDataPanel=akWindow.find("title","Output Data");if(0<outputDataPanel.length){outputDataPanel[0].store.proxy.api.read.url="controllers/arr.php",outputDataPanel[0].store.proxy.api.read.method="POST"}akWindow.show()}}});var userToolbar=[],additionalWelcomeDetails=1==CCR.xdmod.ui.isDeveloper?'<span style="color: #6e30fa">[Developer]</span>':"",welcome_message="";CCR.xdmod.publicUser?welcome_message='Hello, <b><a id="sign_in_link" href="javascript:CCR.xdmod.ui.actionLogin()">Sign In</a></b> to view personalized information.':(welcome_message='Hello, <b id="welcome_message">'+Ext.util.Format.htmlEncode(CCR.xdmod.ui.fullName)+"</b> "+additionalWelcomeDetails+' (<a href="javascript:CCR.xdmod.ui.actionLogout()" id="logout_link">logout</a>)',CCR.xdmod.ui.isManager&&userToolbar.push(XDMoD.GlobalToolbar.Dashboard),userToolbar.push(XDMoD.GlobalToolbar.Profile));var tbItems=[XDMoD.GlobalToolbar.Logo,{xtype:"tbtext",text:welcome_message},"->",XDMoD.GlobalToolbar.CustomCenterLogo];0<userToolbar.length&&tbItems.push(userToolbar),tbItems.push({xtype:"buttongroup",items:[XDMoD.GlobalToolbar.About(tabPanel),XDMoD.GlobalToolbar.Roadmap,XDMoD.GlobalToolbar.Contact(),XDMoD.GlobalToolbar.Help(tabPanel)]});var tb=new Ext.Toolbar({region:"center",items:tbItems}),mainPanel=new Ext.Panel({layout:"border",tbar:tb,items:[tabPanel]});Ext.apply(this,{id:"xdmod_viewer",layout:"fit",items:[mainPanel]}),CCR.xdmod.ui.Viewer.superclass.initComponent.apply(this,arguments),mainPanel.on("render",function(){mainPanel.el&&mainPanel.el.mask("Loading..."),viewStore.load(),viewStore.on("load",function(store){if(mainPanel.el&&mainPanel.el.mask("Loading..."),!(store.getCount()<=0)){for(var tabToken,tabs=Ext.util.JSON.decode(store.getAt(0).get("tabs")),token=CCR.tokenize(document.location.hash),i=0;i<tabs.length;i++){var tab=tabs[i];tab.mainTabToken="main_tab_panel",tab.id=tab.tab;var tabInstance=CCR.getInstance(tab.javascriptReference,tab.javascriptClass,tab);tabInstance&&(tabPanel.add(tabInstance),tab.isDefault&&(tabToken=tabToken||"main_tab_panel"+CCR.xdmod.ui.tokenDelimiter+tab.tab))}if(mainPanel.el&&mainPanel.el.unmask(),xsedeProfilePrompt(),CCR.xdmod.publicUser&&token.tab)if("tools"===token.tab)"contact_us"===token.subtab&&(new XDMoD.ContactDialog).show();else 0===tabPanel.find("id",token.tab).length&&CCR.xdmod.ui.actionLogin();var hasToken=token&&token.content&&2<token.content.length,hasTabToken=tabToken&&2<tabToken.length;hasToken?Ext.History.fireEvent("change",token):hasTabToken?Ext.History.fireEvent("change",tabToken):Ext.History.fireEvent("change","main_tab_panel"+CCR.xdmod.ui.tokenDelimiter+"tg_summary")}})},this,{single:!0}),CCR.xdmod.ui.Viewer.viewerInstance=this},getParameterByName:function(name,source){name=name.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var results=new RegExp("[\\?&#]"+name+"=([^&#]*)").exec(source);return null===results?"":decodeURIComponent(results[1].replace(/\+/g," "))}});
